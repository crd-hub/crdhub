{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "ui.k8s.appscode.com/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "FeatureSet"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "type": "object",
      "required": [
        "chart",
        "description",
        "title"
      ],
      "properties": {
        "chart": {
          "description": "Chart specifies the chart that contains the respective resources for component features and the UI wizard.",
          "type": "object",
          "required": [
            "name",
            "sourceRef",
            "version"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "sourceRef": {
              "description": "TypedObjectReference represents an typed namespaced object.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "apiGroup": {
                  "type": "string"
                },
                "kind": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": "string"
                }
              }
            },
            "version": {
              "type": "string"
            }
          }
        },
        "description": {
          "description": "Description specifies a short description of the services this feature set provides.",
          "type": "string"
        },
        "icons": {
          "description": "Icons is an optional list of icons for an application. Icon information includes the source, size, and mime type. These icons will be used in UI.",
          "type": "array",
          "items": {
            "description": "ImageSpec contains information about an image used as an icon.",
            "type": "object",
            "required": [
              "src"
            ],
            "properties": {
              "size": {
                "description": "(optional) The size of the image in pixels (e.g., 25x25).",
                "type": "string"
              },
              "src": {
                "description": "The source for image represented as either an absolute URL to the image or a Data URL containing the image. Data URLs are defined in RFC 2397.",
                "type": "string"
              },
              "type": {
                "description": "(optional) The mine type of the image (e.g., \"image/png\").",
                "type": "string"
              }
            }
          }
        },
        "recommended": {
          "description": "Required specify whether this feature set is mandatory or not for using the UI.",
          "type": "boolean"
        },
        "requiredFeatures": {
          "description": "RequiredFeatures specifies list of features that are necessary to consider this feature set as ready.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "description": "Title specify the title of this feature set.",
          "type": "string"
        }
      }
    }
  }
}