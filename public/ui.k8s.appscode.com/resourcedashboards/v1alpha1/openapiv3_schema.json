{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "ui.k8s.appscode.com/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "ResourceDashboard"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "type": "object",
      "required": [
        "dashboards",
        "resource"
      ],
      "properties": {
        "dashboards": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "if": {
                "type": "object",
                "properties": {
                  "condition": {
                    "type": "string"
                  },
                  "connected": {
                    "type": "object",
                    "required": [
                      "query",
                      "ref"
                    ],
                    "properties": {
                      "impersonate": {
                        "type": "boolean"
                      },
                      "query": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "byLabel": {
                            "description": "ENUM(authn,authz,auth_secret,backup_via,catalog,cert_issuer,config,connect_via,exposed_by,event,located_on,monitored_by,ocm_bind,offshoot,ops,policy,recommended_for,restore_into,scaled_by,source,storage,view)",
                            "type": "string",
                            "enum": [
                              "authn",
                              "authz",
                              "auth_secret",
                              "backup_via",
                              "catalog",
                              "cert_issuer",
                              "config",
                              "connect_via",
                              "exposed_by",
                              "event",
                              "located_on",
                              "monitored_by",
                              "ocm_bind",
                              "offshoot",
                              "ops",
                              "policy",
                              "recommended_for",
                              "restore_into",
                              "scaled_by",
                              "source",
                              "storage",
                              "view"
                            ]
                          },
                          "raw": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "REST",
                              "GraphQL"
                            ]
                          }
                        }
                      },
                      "ref": {
                        "description": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
                        "type": "object",
                        "required": [
                          "group",
                          "kind"
                        ],
                        "properties": {
                          "group": {
                            "type": "string"
                          },
                          "kind": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "panels": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "title"
                  ],
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "width": {
                      "type": "integer"
                    }
                  }
                }
              },
              "title": {
                "type": "string"
              },
              "vars": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "value"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "default": "Source",
                      "enum": [
                        "Source",
                        "Target"
                      ]
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "provider": {
          "type": "string",
          "enum": [
            "Grafana"
          ]
        },
        "resource": {
          "description": "ResourceID identifies a resource",
          "type": "object",
          "required": [
            "group"
          ],
          "properties": {
            "group": {
              "type": "string"
            },
            "kind": {
              "description": "Kind is the serialized kind of the resource.  It is normally CamelCase and singular.",
              "type": "string"
            },
            "name": {
              "description": "Name is the plural name of the resource to serve.  It must match the name of the CustomResourceDefinition-registration\ntoo: plural.group and it must be all lowercase.",
              "type": "string"
            },
            "scope": {
              "description": "ResourceScope is an enum defining the different scopes available to a custom resource",
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}