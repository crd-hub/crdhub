{
  "$schema": "http://json-schema.org/schema#",
  "description": "MonitorAlertProcessingRuleActionGroup is the Schema for the MonitorAlertProcessingRuleActionGroups API. Manages an Alert Processing Rule which apply action group.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "alertsmanagement.azure.upbound.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "MonitorAlertProcessingRuleActionGroup"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "MonitorAlertProcessingRuleActionGroupSpec defines the desired state of MonitorAlertProcessingRuleActionGroup",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "addActionGroupIds": {
              "description": "Specifies a list of Action Group IDs.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "addActionGroupIdsRefs": {
              "description": "References to MonitorActionGroup in insights to populate addActionGroupIds.",
              "type": "array",
              "items": {
                "description": "A Reference to a named object.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "type": "object",
                    "properties": {
                      "resolution": {
                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                        "type": "string",
                        "default": "Required",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "addActionGroupIdsSelector": {
              "description": "Selector for a list of MonitorActionGroup in insights to populate addActionGroupIds.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "condition": {
              "description": "A condition block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alertContext": {
                    "description": "A alert_context block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "alertRuleId": {
                    "description": "A alert_rule_id block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "alertRuleName": {
                    "description": "A alert_rule_name block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": {
                    "description": "A description block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "monitorCondition": {
                    "description": "A monitor_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "monitorService": {
                    "description": "A monitor_service block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "severity": {
                    "description": "A severity block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "signalType": {
                    "description": "A signal_type block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "targetResource": {
                    "description": "A target_resource block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "targetResourceGroup": {
                    "description": "A target_resource_group block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "targetResourceType": {
                    "description": "A target_resource_type block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": {
              "description": "Specifies a description for the Alert Processing Rule.",
              "type": "string"
            },
            "enabled": {
              "description": "Should the Alert Processing Rule be enabled? Defaults to true.",
              "type": "boolean"
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Alert Processing Rule should exist. Changing this forces a new Alert Processing Rule to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "schedule": {
              "description": "A schedule block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "effectiveFrom": {
                    "description": "Specifies the Alert Processing Rule effective start time (Y-m-d'T'H:M:S).",
                    "type": "string"
                  },
                  "effectiveUntil": {
                    "description": "Specifies the Alert Processing Rule effective end time (Y-m-d'T'H:M:S).",
                    "type": "string"
                  },
                  "recurrence": {
                    "description": "A recurrence block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "daily": {
                          "description": "One or more daily blocks as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "endTime": {
                                "description": "Specifies the recurrence end time (H:M:S).",
                                "type": "string"
                              },
                              "startTime": {
                                "description": "Specifies the recurrence start time (H:M:S).",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "monthly": {
                          "description": "One or more monthly blocks as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "daysOfMonth": {
                                "description": "Specifies a list of dayOfMonth to recurrence. Possible values are integers between 1 - 31.",
                                "type": "array",
                                "items": {
                                  "type": "number"
                                }
                              },
                              "endTime": {
                                "description": "Specifies the recurrence end time (H:M:S).",
                                "type": "string"
                              },
                              "startTime": {
                                "description": "Specifies the recurrence start time (H:M:S).",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "weekly": {
                          "description": "One or more weekly blocks as defined below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "daysOfWeek": {
                                "description": "Specifies a list of dayOfWeek to recurrence. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "endTime": {
                                "description": "Specifies the recurrence end time (H:M:S).",
                                "type": "string"
                              },
                              "startTime": {
                                "description": "Specifies the recurrence start time (H:M:S).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "timeZone": {
                    "description": "The time zone (e.g. Pacific Standard time, Eastern Standard Time). Defaults to UTC. possible values are defined here.",
                    "type": "string"
                  }
                }
              }
            },
            "scopes": {
              "description": "A list of resource IDs which will be the target of alert processing rule.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "scopesRefs": {
              "description": "References to ResourceGroup in azure to populate scopes.",
              "type": "array",
              "items": {
                "description": "A Reference to a named object.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "type": "object",
                    "properties": {
                      "resolution": {
                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                        "type": "string",
                        "default": "Required",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "scopesSelector": {
              "description": "Selector for a list of ResourceGroup in azure to populate scopes.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Alert Processing Rule.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "initProvider": {
          "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "type": "object",
          "properties": {
            "condition": {
              "description": "A condition block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alertContext": {
                    "description": "A alert_context block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "alertRuleId": {
                    "description": "A alert_rule_id block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "alertRuleName": {
                    "description": "A alert_rule_name block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": {
                    "description": "A description block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "monitorCondition": {
                    "description": "A monitor_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "monitorService": {
                    "description": "A monitor_service block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "severity": {
                    "description": "A severity block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "signalType": {
                    "description": "A signal_type block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "targetResource": {
                    "description": "A target_resource block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "targetResourceGroup": {
                    "description": "A target_resource_group block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "targetResourceType": {
                    "description": "A target_resource_type block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "description": "The operator for a given condition. Possible values are Equals, NotEquals, Contains, and DoesNotContain.",
                          "type": "string"
                        },
                        "values": {
                          "description": "A list of values to match for a given condition. The values should be valid resource types. (e.g. Microsoft.Compute/VirtualMachines)",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": {
              "description": "Specifies a description for the Alert Processing Rule.",
              "type": "string"
            },
            "enabled": {
              "description": "Should the Alert Processing Rule be enabled? Defaults to true.",
              "type": "boolean"
            },
            "schedule": {
              "description": "A schedule block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "effectiveFrom": {
                    "description": "Specifies the Alert Processing Rule effective start time (Y-m-d'T'H:M:S).",
                    "type": "string"
                  },
                  "effectiveUntil": {
                    "description": "Specifies the Alert Processing Rule effective end time (Y-m-d'T'H:M:S).",
                    "type": "string"
                  },
                  "recurrence": {
                    "description": "A recurrence block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "daily": {
                          "description": "One or more daily blocks as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "endTime": {
                                "description": "Specifies the recurrence end time (H:M:S).",
                                "type": "string"
                              },
                              "startTime": {
                                "description": "Specifies the recurrence start time (H:M:S).",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "monthly": {
                          "description": "One or more monthly blocks as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "daysOfMonth": {
                                "description": "Specifies a list of dayOfMonth to recurrence. Possible values are integers between 1 - 31.",
                                "type": "array",
                                "items": {
                                  "type": "number"
                                }
                              },
                              "endTime": {
                                "description": "Specifies the recurrence end time (H:M:S).",
                                "type": "string"
                              },
                              "startTime": {
                                "description": "Specifies the recurrence start time (H:M:S).",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "weekly": {
                          "description": "One or more weekly blocks as defined below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "daysOfWeek": {
                                "description": "Specifies a list of dayOfWeek to recurrence. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, and Saturday.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "endTime": {
                                "description": "Specifies the recurrence end time (H:M:S).",
                                "type": "string"
                              },
                              "startTime": {
                                "description": "Specifies the recurrence start time (H:M:S).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "timeZone": {
                    "description": "The time zone (e.g. Pacific Standard time, Eastern Standard Time). Defaults to UTC. possible values are defined here.",
                    "type": "string"
                  }
                }
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Alert Processing Rule.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "managementPolicies": {
          "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              }
            }
          }
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              }
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          }
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          }
        }
      }
    }
  }
}