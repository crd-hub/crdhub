{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "engine.kubevault.com/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "SecretAccessRequest"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "SecretAccessRequestSpec contains information to request for database credential",
      "type": "object",
      "required": [
        "roleRef",
        "subjects"
      ],
      "properties": {
        "aws": {
          "description": "https://www.vaultproject.io/api/secret/aws/index.html#parameters-6\nAWSAccessKeyRequestSpec contains information to request for vault aws credential",
          "type": "object",
          "properties": {
            "roleARN": {
              "description": "The ARN of the role to assume if credential_type on the Vault role is assumed_role.\nMust match one of the allowed role ARNs in the Vault role. Optional if the Vault role\nonly allows a single AWS role ARN; required otherwise.",
              "type": "string"
            },
            "useSTS": {
              "description": "If true, '/aws/sts' endpoint will be used to retrieve credential\nOtherwise, '/aws/creds' endpoint will be used to retrieve credential",
              "type": "boolean"
            }
          }
        },
        "gcp": {
          "description": "GCPAccessRequestConfiguration contains information to request for vault gcp credentials",
          "type": "object",
          "properties": {
            "keyAlgorithm": {
              "description": "Specifies the algorithm used to generate key.\nDefaults to 2k RSA key.\nAccepted values: KEY_ALG_UNSPECIFIED, KEY_ALG_RSA_1024, KEY_ALG_RSA_2048",
              "type": "string"
            },
            "keyType": {
              "description": "Specifies the private key type to generate.\nDefaults to JSON credentials file\nAccepted values: TYPE_UNSPECIFIED, TYPE_PKCS12_FILE, TYPE_GOOGLE_CREDENTIALS_FILE",
              "type": "string"
            }
          }
        },
        "pki": {
          "description": "https://developer.hashicorp.com/vault/api-docs/secret/pki#generate-certificate-and-key",
          "type": "object",
          "properties": {
            "additionalPayload": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "altNames": {
              "type": "string"
            },
            "commonName": {
              "type": "string"
            },
            "issuerRef": {
              "type": "string"
            },
            "ttl": {
              "type": "string"
            }
          }
        },
        "roleRef": {
          "description": "Contains vault database role info",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "apiGroup": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            }
          }
        },
        "subjects": {
          "type": "array",
          "items": {
            "description": "Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference,\nor a value for non-objects such as user and group names.",
            "type": "object",
            "required": [
              "kind",
              "name"
            ],
            "properties": {
              "apiGroup": {
                "description": "APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
                "type": "string"
              },
              "kind": {
                "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.",
                "type": "string"
              },
              "name": {
                "description": "Name of the object being referenced.",
                "type": "string"
              },
              "namespace": {
                "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.",
                "type": "string"
              }
            },
            "x-kubernetes-map-type": "atomic"
          }
        },
        "ttl": {
          "description": "Specifies the TTL for the leases associated with this role.\nAccepts time suffixed strings (\"1h\") or an integer number of seconds.\nDefaults to roles default TTL time",
          "type": "string"
        }
      }
    }
  }
}