{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "runtimes.notebooks.gcp.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "notebooks.gcp.upbound.io",
    "names": {
      "plural": "runtimes",
      "singular": "runtime",
      "kind": "Runtime",
      "listKind": "RuntimeList",
      "categories": [
        "crossplane",
        "managed",
        "gcp"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "Runtime is the Schema for the Runtimes API. A Cloud AI Platform Notebook runtime.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "RuntimeSpec defines the desired state of Runtime",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "required": [
                      "location"
                    ],
                    "properties": {
                      "accessConfig": {
                        "description": "The config settings for accessing runtime. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accessType": {
                              "description": "The type of access mode this instance. For valid values, see https://cloud.google.com/vertex-ai/docs/workbench/reference/ rest/v1/projects.locations.runtimes#RuntimeAccessType.",
                              "type": "string"
                            },
                            "runtimeOwner": {
                              "description": "The owner of this runtime after creation. Format: alias@example.com. Currently supports one owner only.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "A reference to the zone where the machine resides.",
                        "type": "string"
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "softwareConfig": {
                        "description": "The config settings for software inside the runtime. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "customGpuDriverPath": {
                              "description": "Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers.",
                              "type": "string"
                            },
                            "enableHealthMonitoring": {
                              "description": "Verifies core internal services are running. Default: True.",
                              "type": "boolean"
                            },
                            "idleShutdown": {
                              "description": "Runtime will automatically shutdown after idle_shutdown_time. Default: True",
                              "type": "boolean"
                            },
                            "idleShutdownTimeout": {
                              "description": "Time in minutes to wait before shuting down runtime. Default: 180 minutes",
                              "type": "number"
                            },
                            "installGpuDriver": {
                              "description": "Install Nvidia Driver automatically.",
                              "type": "boolean"
                            },
                            "kernels": {
                              "description": "Use a list of container images to use as Kernels in the notebook instance. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "repository": {
                                    "description": "The path to the container image repository. For example: gcr.io/{project_id}/{imageName}",
                                    "type": "string"
                                  },
                                  "tag": {
                                    "description": "The tag of the container image. If not specified, this defaults to the latest tag.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "notebookUpgradeSchedule": {
                              "description": "Cron expression in UTC timezone for schedule instance auto upgrade. Please follow the cron format.",
                              "type": "string"
                            },
                            "postStartupScript": {
                              "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (gs://path-to-file/file-name).",
                              "type": "string"
                            },
                            "postStartupScriptBehavior": {
                              "description": "Behavior for the post startup script. Possible values are: POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED, RUN_EVERY_START, DOWNLOAD_AND_RUN_EVERY_START.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "virtualMachine": {
                        "description": "Use a Compute Engine VM image to start the managed notebook instance. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "virtualMachineConfig": {
                              "description": "Virtual Machine configuration settings. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "acceleratorConfig": {
                                    "description": "The Compute Engine accelerator configuration for this runtime. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "coreCount": {
                                          "description": "Count of cores of this accelerator.",
                                          "type": "number"
                                        },
                                        "type": {
                                          "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "containerImages": {
                                    "description": "Use a list of container images to start the notebook instance. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "repository": {
                                          "description": "The path to the container image repository. For example: gcr.io/{project_id}/{imageName}",
                                          "type": "string"
                                        },
                                        "tag": {
                                          "description": "The tag of the container image. If not specified, this defaults to the latest tag.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "dataDisk": {
                                    "description": "Data disk option configuration settings. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "initializeParams": {
                                          "description": "Input only. Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "description": {
                                                "description": "Provide this property when creating the disk.",
                                                "type": "string"
                                              },
                                              "diskName": {
                                                "description": "Specifies the disk name. If not specified, the default is to use the name of the instance. If the disk with the instance name exists already in the given zone/region, a new name will be automatically generated.",
                                                "type": "string"
                                              },
                                              "diskSizeGb": {
                                                "description": "Specifies the size of the disk in base-2 GB. If not specified, the disk will be the same size as the image (usually 10GB). If specified, the size must be equal to or larger than 10GB. Default 100 GB.",
                                                "type": "number"
                                              },
                                              "diskType": {
                                                "description": "The type of the boot disk attached to this runtime, defaults to standard persistent disk. For valid values, see https://cloud.google.com/vertex-ai/docs/workbench/ reference/rest/v1/projects.locations.runtimes#disktype",
                                                "type": "string"
                                              },
                                              "labels": {
                                                "description": "The labels to associate with this runtime. Label keys must contain 1 to 63 characters, and must conform to [RFC 1035] (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035. No more than 32 labels can be associated with a cluster.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "interface": {
                                          "description": "\"Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values: * NVME * SCSI\".",
                                          "type": "string"
                                        },
                                        "mode": {
                                          "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.",
                                          "type": "string"
                                        },
                                        "source": {
                                          "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "encryptionConfig": {
                                    "description": "Encryption settings for virtual machine data disk. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "kmsKey": {
                                          "description": "The Cloud KMS resource identifier of the customer-managed encryption key used to protect a resource, such as a disks. It has the following format: projects/{PROJECT_ID}/locations/{REGION}/keyRings/ {KEY_RING_NAME}/cryptoKeys/{KEY_NAME}",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "internalIpOnly": {
                                    "description": "If true, runtime will only have internal IP addresses. By default, runtimes are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each vm. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all dependencies must be configured to be accessible without external IP addresses.",
                                    "type": "boolean"
                                  },
                                  "labels": {
                                    "description": "The labels to associate with this runtime. Label keys must contain 1 to 63 characters, and must conform to [RFC 1035] (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035. No more than 32 labels can be associated with a cluster.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "machineType": {
                                    "description": "The Compute Engine machine type used for runtimes.",
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "description": "The Compute Engine metadata entries to add to virtual machine. (see [Project and instance metadata](https://cloud.google.com /compute/docs/storing-retrieving-metadata#project_and_instance _metadata)).",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "network": {
                                    "description": "The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork. If neither network nor subnet is specified, the \"default\" network of the project is used, if it exists. A full URL or partial URI. Examples:",
                                    "type": "string"
                                  },
                                  "nicType": {
                                    "description": "The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet. Possible values are: UNSPECIFIED_NIC_TYPE, VIRTIO_NET, GVNIC.",
                                    "type": "string"
                                  },
                                  "reservedIpRange": {
                                    "description": "Reserved IP Range name is used for VPC Peering. The subnetwork allocation will use the range name if it's assigned.",
                                    "type": "string"
                                  },
                                  "shieldedInstanceConfig": {
                                    "description": "Shielded VM Instance configuration settings. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "enableIntegrityMonitoring": {
                                          "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default.",
                                          "type": "boolean"
                                        },
                                        "enableSecureBoot": {
                                          "description": "Defines whether the instance has Secure Boot enabled.Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.",
                                          "type": "boolean"
                                        },
                                        "enableVtpm": {
                                          "description": "Defines whether the instance has the vTPM enabled. Enabled by default.",
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  },
                                  "subnet": {
                                    "description": "The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network. A full URL or partial URI are valid. Examples:",
                                    "type": "string"
                                  },
                                  "tags": {
                                    "description": "The Compute Engine tags to add to runtime (see [Tagging instances] (https://cloud.google.com/compute/docs/ label-or-tag-resources#tags)).",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "accessConfig": {
                        "description": "The config settings for accessing runtime. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accessType": {
                              "description": "The type of access mode this instance. For valid values, see https://cloud.google.com/vertex-ai/docs/workbench/reference/ rest/v1/projects.locations.runtimes#RuntimeAccessType.",
                              "type": "string"
                            },
                            "runtimeOwner": {
                              "description": "The owner of this runtime after creation. Format: alias@example.com. Currently supports one owner only.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "softwareConfig": {
                        "description": "The config settings for software inside the runtime. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "customGpuDriverPath": {
                              "description": "Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers.",
                              "type": "string"
                            },
                            "enableHealthMonitoring": {
                              "description": "Verifies core internal services are running. Default: True.",
                              "type": "boolean"
                            },
                            "idleShutdown": {
                              "description": "Runtime will automatically shutdown after idle_shutdown_time. Default: True",
                              "type": "boolean"
                            },
                            "idleShutdownTimeout": {
                              "description": "Time in minutes to wait before shuting down runtime. Default: 180 minutes",
                              "type": "number"
                            },
                            "installGpuDriver": {
                              "description": "Install Nvidia Driver automatically.",
                              "type": "boolean"
                            },
                            "kernels": {
                              "description": "Use a list of container images to use as Kernels in the notebook instance. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "repository": {
                                    "description": "The path to the container image repository. For example: gcr.io/{project_id}/{imageName}",
                                    "type": "string"
                                  },
                                  "tag": {
                                    "description": "The tag of the container image. If not specified, this defaults to the latest tag.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "notebookUpgradeSchedule": {
                              "description": "Cron expression in UTC timezone for schedule instance auto upgrade. Please follow the cron format.",
                              "type": "string"
                            },
                            "postStartupScript": {
                              "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (gs://path-to-file/file-name).",
                              "type": "string"
                            },
                            "postStartupScriptBehavior": {
                              "description": "Behavior for the post startup script. Possible values are: POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED, RUN_EVERY_START, DOWNLOAD_AND_RUN_EVERY_START.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "virtualMachine": {
                        "description": "Use a Compute Engine VM image to start the managed notebook instance. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "virtualMachineConfig": {
                              "description": "Virtual Machine configuration settings. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "acceleratorConfig": {
                                    "description": "The Compute Engine accelerator configuration for this runtime. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "coreCount": {
                                          "description": "Count of cores of this accelerator.",
                                          "type": "number"
                                        },
                                        "type": {
                                          "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "containerImages": {
                                    "description": "Use a list of container images to start the notebook instance. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "repository": {
                                          "description": "The path to the container image repository. For example: gcr.io/{project_id}/{imageName}",
                                          "type": "string"
                                        },
                                        "tag": {
                                          "description": "The tag of the container image. If not specified, this defaults to the latest tag.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "dataDisk": {
                                    "description": "Data disk option configuration settings. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "initializeParams": {
                                          "description": "Input only. Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "description": {
                                                "description": "Provide this property when creating the disk.",
                                                "type": "string"
                                              },
                                              "diskName": {
                                                "description": "Specifies the disk name. If not specified, the default is to use the name of the instance. If the disk with the instance name exists already in the given zone/region, a new name will be automatically generated.",
                                                "type": "string"
                                              },
                                              "diskSizeGb": {
                                                "description": "Specifies the size of the disk in base-2 GB. If not specified, the disk will be the same size as the image (usually 10GB). If specified, the size must be equal to or larger than 10GB. Default 100 GB.",
                                                "type": "number"
                                              },
                                              "diskType": {
                                                "description": "The type of the boot disk attached to this runtime, defaults to standard persistent disk. For valid values, see https://cloud.google.com/vertex-ai/docs/workbench/ reference/rest/v1/projects.locations.runtimes#disktype",
                                                "type": "string"
                                              },
                                              "labels": {
                                                "description": "The labels to associate with this runtime. Label keys must contain 1 to 63 characters, and must conform to [RFC 1035] (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035. No more than 32 labels can be associated with a cluster.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "interface": {
                                          "description": "\"Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values: * NVME * SCSI\".",
                                          "type": "string"
                                        },
                                        "mode": {
                                          "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.",
                                          "type": "string"
                                        },
                                        "source": {
                                          "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "encryptionConfig": {
                                    "description": "Encryption settings for virtual machine data disk. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "kmsKey": {
                                          "description": "The Cloud KMS resource identifier of the customer-managed encryption key used to protect a resource, such as a disks. It has the following format: projects/{PROJECT_ID}/locations/{REGION}/keyRings/ {KEY_RING_NAME}/cryptoKeys/{KEY_NAME}",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "internalIpOnly": {
                                    "description": "If true, runtime will only have internal IP addresses. By default, runtimes are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each vm. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all dependencies must be configured to be accessible without external IP addresses.",
                                    "type": "boolean"
                                  },
                                  "labels": {
                                    "description": "The labels to associate with this runtime. Label keys must contain 1 to 63 characters, and must conform to [RFC 1035] (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035. No more than 32 labels can be associated with a cluster.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "machineType": {
                                    "description": "The Compute Engine machine type used for runtimes.",
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "description": "The Compute Engine metadata entries to add to virtual machine. (see [Project and instance metadata](https://cloud.google.com /compute/docs/storing-retrieving-metadata#project_and_instance _metadata)).",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "network": {
                                    "description": "The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork. If neither network nor subnet is specified, the \"default\" network of the project is used, if it exists. A full URL or partial URI. Examples:",
                                    "type": "string"
                                  },
                                  "nicType": {
                                    "description": "The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet. Possible values are: UNSPECIFIED_NIC_TYPE, VIRTIO_NET, GVNIC.",
                                    "type": "string"
                                  },
                                  "reservedIpRange": {
                                    "description": "Reserved IP Range name is used for VPC Peering. The subnetwork allocation will use the range name if it's assigned.",
                                    "type": "string"
                                  },
                                  "shieldedInstanceConfig": {
                                    "description": "Shielded VM Instance configuration settings. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "enableIntegrityMonitoring": {
                                          "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default.",
                                          "type": "boolean"
                                        },
                                        "enableSecureBoot": {
                                          "description": "Defines whether the instance has Secure Boot enabled.Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.",
                                          "type": "boolean"
                                        },
                                        "enableVtpm": {
                                          "description": "Defines whether the instance has the vTPM enabled. Enabled by default.",
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  },
                                  "subnet": {
                                    "description": "The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network. A full URL or partial URI are valid. Examples:",
                                    "type": "string"
                                  },
                                  "tags": {
                                    "description": "The Compute Engine tags to add to runtime (see [Tagging instances] (https://cloud.google.com/compute/docs/ label-or-tag-resources#tags)).",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "RuntimeStatus defines the observed state of Runtime.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "accessConfig": {
                        "description": "The config settings for accessing runtime. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accessType": {
                              "description": "The type of access mode this instance. For valid values, see https://cloud.google.com/vertex-ai/docs/workbench/reference/ rest/v1/projects.locations.runtimes#RuntimeAccessType.",
                              "type": "string"
                            },
                            "proxyUri": {
                              "description": "(Output) The proxy endpoint that is used to access the runtime.",
                              "type": "string"
                            },
                            "runtimeOwner": {
                              "description": "The owner of this runtime after creation. Format: alias@example.com. Currently supports one owner only.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "healthState": {
                        "description": "The health state of this runtime. For a list of possible output values, see https://cloud.google.com/vertex-ai/docs/workbench/ reference/rest/v1/projects.locations.runtimes#healthstate.",
                        "type": "string"
                      },
                      "id": {
                        "description": "an identifier for the resource with format projects/{{project}}/locations/{{location}}/runtimes/{{name}}",
                        "type": "string"
                      },
                      "location": {
                        "description": "A reference to the zone where the machine resides.",
                        "type": "string"
                      },
                      "metrics": {
                        "description": "Contains Runtime daemon metrics such as Service status and JupyterLab status Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "systemMetrics": {
                              "description": "(Output) Contains runtime daemon metrics, such as OS and kernels and sessions stats.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "softwareConfig": {
                        "description": "The config settings for software inside the runtime. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "customGpuDriverPath": {
                              "description": "Specify a custom Cloud Storage path where the GPU driver is stored. If not specified, we'll automatically choose from official GPU drivers.",
                              "type": "string"
                            },
                            "enableHealthMonitoring": {
                              "description": "Verifies core internal services are running. Default: True.",
                              "type": "boolean"
                            },
                            "idleShutdown": {
                              "description": "Runtime will automatically shutdown after idle_shutdown_time. Default: True",
                              "type": "boolean"
                            },
                            "idleShutdownTimeout": {
                              "description": "Time in minutes to wait before shuting down runtime. Default: 180 minutes",
                              "type": "number"
                            },
                            "installGpuDriver": {
                              "description": "Install Nvidia Driver automatically.",
                              "type": "boolean"
                            },
                            "kernels": {
                              "description": "Use a list of container images to use as Kernels in the notebook instance. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "repository": {
                                    "description": "The path to the container image repository. For example: gcr.io/{project_id}/{imageName}",
                                    "type": "string"
                                  },
                                  "tag": {
                                    "description": "The tag of the container image. If not specified, this defaults to the latest tag.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "notebookUpgradeSchedule": {
                              "description": "Cron expression in UTC timezone for schedule instance auto upgrade. Please follow the cron format.",
                              "type": "string"
                            },
                            "postStartupScript": {
                              "description": "Path to a Bash script that automatically runs after a notebook instance fully boots up. The path must be a URL or Cloud Storage path (gs://path-to-file/file-name).",
                              "type": "string"
                            },
                            "postStartupScriptBehavior": {
                              "description": "Behavior for the post startup script. Possible values are: POST_STARTUP_SCRIPT_BEHAVIOR_UNSPECIFIED, RUN_EVERY_START, DOWNLOAD_AND_RUN_EVERY_START.",
                              "type": "string"
                            },
                            "upgradeable": {
                              "description": "(Output) Bool indicating whether an newer image is available in an image family.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "state": {
                        "description": "The state of this runtime.",
                        "type": "string"
                      },
                      "virtualMachine": {
                        "description": "Use a Compute Engine VM image to start the managed notebook instance. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "instanceId": {
                              "description": "(Output) The unique identifier of the Managed Compute Engine instance.",
                              "type": "string"
                            },
                            "instanceName": {
                              "description": "(Output) The user-friendly name of the Managed Compute Engine instance.",
                              "type": "string"
                            },
                            "virtualMachineConfig": {
                              "description": "Virtual Machine configuration settings. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "acceleratorConfig": {
                                    "description": "The Compute Engine accelerator configuration for this runtime. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "coreCount": {
                                          "description": "Count of cores of this accelerator.",
                                          "type": "number"
                                        },
                                        "type": {
                                          "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "containerImages": {
                                    "description": "Use a list of container images to start the notebook instance. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "repository": {
                                          "description": "The path to the container image repository. For example: gcr.io/{project_id}/{imageName}",
                                          "type": "string"
                                        },
                                        "tag": {
                                          "description": "The tag of the container image. If not specified, this defaults to the latest tag.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "dataDisk": {
                                    "description": "Data disk option configuration settings. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "autoDelete": {
                                          "description": "(Output) Optional. Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).",
                                          "type": "boolean"
                                        },
                                        "boot": {
                                          "description": "(Output) Optional. Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.",
                                          "type": "boolean"
                                        },
                                        "deviceName": {
                                          "description": "(Output) Optional. Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disk-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.",
                                          "type": "string"
                                        },
                                        "guestOsFeatures": {
                                          "description": "(Output) Indicates a list of features to enable on the guest operating system. Applicable only for bootable images. To see a list of available features, read https://cloud.google.com/compute/docs/ images/create-delete-deprecate-private-images#guest-os-features options.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "index": {
                                          "description": "(Output) Output only. A zero-based index to this disk, where 0 is reserved for the boot disk. If you have many disks attached to an instance, each disk would have a unique index number.",
                                          "type": "number"
                                        },
                                        "initializeParams": {
                                          "description": "Input only. Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "description": {
                                                "description": "Provide this property when creating the disk.",
                                                "type": "string"
                                              },
                                              "diskName": {
                                                "description": "Specifies the disk name. If not specified, the default is to use the name of the instance. If the disk with the instance name exists already in the given zone/region, a new name will be automatically generated.",
                                                "type": "string"
                                              },
                                              "diskSizeGb": {
                                                "description": "Specifies the size of the disk in base-2 GB. If not specified, the disk will be the same size as the image (usually 10GB). If specified, the size must be equal to or larger than 10GB. Default 100 GB.",
                                                "type": "number"
                                              },
                                              "diskType": {
                                                "description": "The type of the boot disk attached to this runtime, defaults to standard persistent disk. For valid values, see https://cloud.google.com/vertex-ai/docs/workbench/ reference/rest/v1/projects.locations.runtimes#disktype",
                                                "type": "string"
                                              },
                                              "labels": {
                                                "description": "The labels to associate with this runtime. Label keys must contain 1 to 63 characters, and must conform to [RFC 1035] (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035. No more than 32 labels can be associated with a cluster.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "interface": {
                                          "description": "\"Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance. Valid values: * NVME * SCSI\".",
                                          "type": "string"
                                        },
                                        "kind": {
                                          "description": "(Output) Type of the resource. Always compute#attachedDisk for attached disks.",
                                          "type": "string"
                                        },
                                        "licenses": {
                                          "description": "(Output) Output only. Any valid publicly visible licenses.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "mode": {
                                          "description": "The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.",
                                          "type": "string"
                                        },
                                        "source": {
                                          "description": "Specifies a valid partial or full URL to an existing Persistent Disk resource.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "encryptionConfig": {
                                    "description": "Encryption settings for virtual machine data disk. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "kmsKey": {
                                          "description": "The Cloud KMS resource identifier of the customer-managed encryption key used to protect a resource, such as a disks. It has the following format: projects/{PROJECT_ID}/locations/{REGION}/keyRings/ {KEY_RING_NAME}/cryptoKeys/{KEY_NAME}",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "guestAttributes": {
                                    "description": "(Output) The Compute Engine guest attributes. (see [Project and instance guest attributes](https://cloud.google.com/compute/docs/ storing-retrieving-metadata#guest_attributes)).",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "internalIpOnly": {
                                    "description": "If true, runtime will only have internal IP addresses. By default, runtimes are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each vm. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all dependencies must be configured to be accessible without external IP addresses.",
                                    "type": "boolean"
                                  },
                                  "labels": {
                                    "description": "The labels to associate with this runtime. Label keys must contain 1 to 63 characters, and must conform to [RFC 1035] (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035. No more than 32 labels can be associated with a cluster.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "machineType": {
                                    "description": "The Compute Engine machine type used for runtimes.",
                                    "type": "string"
                                  },
                                  "metadata": {
                                    "description": "The Compute Engine metadata entries to add to virtual machine. (see [Project and instance metadata](https://cloud.google.com /compute/docs/storing-retrieving-metadata#project_and_instance _metadata)).",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "network": {
                                    "description": "The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork. If neither network nor subnet is specified, the \"default\" network of the project is used, if it exists. A full URL or partial URI. Examples:",
                                    "type": "string"
                                  },
                                  "nicType": {
                                    "description": "The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet. Possible values are: UNSPECIFIED_NIC_TYPE, VIRTIO_NET, GVNIC.",
                                    "type": "string"
                                  },
                                  "reservedIpRange": {
                                    "description": "Reserved IP Range name is used for VPC Peering. The subnetwork allocation will use the range name if it's assigned.",
                                    "type": "string"
                                  },
                                  "shieldedInstanceConfig": {
                                    "description": "Shielded VM Instance configuration settings. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "enableIntegrityMonitoring": {
                                          "description": "Defines whether the instance has integrity monitoring enabled. Enables monitoring and attestation of the boot integrity of the instance. The attestation is performed against the integrity policy baseline. This baseline is initially derived from the implicitly trusted boot image when the instance is created. Enabled by default.",
                                          "type": "boolean"
                                        },
                                        "enableSecureBoot": {
                                          "description": "Defines whether the instance has Secure Boot enabled.Secure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails. Disabled by default.",
                                          "type": "boolean"
                                        },
                                        "enableVtpm": {
                                          "description": "Defines whether the instance has the vTPM enabled. Enabled by default.",
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  },
                                  "subnet": {
                                    "description": "The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network. A full URL or partial URI are valid. Examples:",
                                    "type": "string"
                                  },
                                  "tags": {
                                    "description": "The Compute Engine tags to add to runtime (see [Tagging instances] (https://cloud.google.com/compute/docs/ label-or-tag-resources#tags)).",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "zone": {
                                    "description": "(Output) The zone where the virtual machine is located.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}