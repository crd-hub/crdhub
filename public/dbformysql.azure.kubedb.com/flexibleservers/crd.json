{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "flexibleservers.dbformysql.azure.kubedb.com",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.11.3"
    }
  },
  "spec": {
    "group": "dbformysql.azure.kubedb.com",
    "names": {
      "plural": "flexibleservers",
      "singular": "flexibleserver",
      "kind": "FlexibleServer",
      "listKind": "FlexibleServerList",
      "categories": [
        "crossplane",
        "managed",
        "azure"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1alpha1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "FlexibleServer is the Schema for the FlexibleServers API. Manages a MySQL Flexible Server.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "FlexibleServerSpec defines the desired state of FlexibleServer",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "required": [
                      "resourceGroupName"
                    ],
                    "properties": {
                      "administratorLogin": {
                        "description": "The Administrator login for the MySQL Flexible Server. Required when create_mode is Default. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "administratorPasswordSecretRef": {
                        "description": "The Password associated with the administrator_login for the MySQL Flexible Server. Required when create_mode is Default.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        }
                      },
                      "backupRetentionDays": {
                        "description": "The backup retention days for the MySQL Flexible Server. Possible values are between 1 and 35 days. Defaults to 7.",
                        "type": "number"
                      },
                      "createMode": {
                        "description": "The creation mode which can be used to restore or replicate existing servers. Possible values are Default, PointInTimeRestore, GeoRestore, and Replica. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "customerManagedKey": {
                        "description": "A customer_managed_key block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "geoBackupKeyVaultKeyId": {
                              "description": "The ID of the geo backup Key Vault Key. It can't cross region and need Customer Managed Key in same region as geo backup.",
                              "type": "string"
                            },
                            "geoBackupUserAssignedIdentityId": {
                              "description": "The geo backup user managed identity id for a Customer Managed Key. Should be added with identity_ids. It can't cross region and need identity in same region as geo backup.",
                              "type": "string"
                            },
                            "keyVaultKeyId": {
                              "description": "The ID of the Key Vault Key.",
                              "type": "string"
                            },
                            "primaryUserAssignedIdentityId": {
                              "description": "Specifies the primary user managed identity id for a Customer Managed Key. Should be added with identity_ids.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "delegatedSubnetId": {
                        "description": "The ID of the virtual network subnet to create the MySQL Flexible Server. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "geoRedundantBackupEnabled": {
                        "description": "Should geo redundant backup enabled? Defaults to false. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "boolean"
                      },
                      "highAvailability": {
                        "description": "A high_availability block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "mode"
                          ],
                          "properties": {
                            "mode": {
                              "description": "The high availability mode for the MySQL Flexible Server. Possibles values are SameZone and ZoneRedundant.",
                              "type": "string"
                            },
                            "standbyAvailabilityZone": {
                              "description": "Specifies the Availability Zone in which the standby Flexible Server should be located. Possible values are 1, 2 and 3.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "An identity block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "identityIds",
                            "type"
                          ],
                          "properties": {
                            "identityIds": {
                              "description": "A list of User Assigned Managed Identity IDs to be assigned to this MySQL Flexible Server.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "description": "Specifies the type of Managed Service Identity that should be configured on this MySQL Flexible Server. The only possible value is UserAssigned.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "The Azure Region where the MySQL Flexible Server should exist. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "maintenanceWindow": {
                        "description": "A maintenance_window block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dayOfWeek": {
                              "description": "The day of week for maintenance window. Defaults to 0.",
                              "type": "number"
                            },
                            "startHour": {
                              "description": "The start hour for maintenance window. Defaults to 0.",
                              "type": "number"
                            },
                            "startMinute": {
                              "description": "The start minute for maintenance window. Defaults to 0.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "pointInTimeRestoreTimeInUtc": {
                        "description": "The point in time to restore from creation_source_server_id when create_mode is PointInTimeRestore. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "privateDnsZoneId": {
                        "description": "The ID of the private DNS zone to create the MySQL Flexible Server. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "privateDnsZoneIdRef": {
                        "description": "Reference to a PrivateDNSZone in network to populate privateDnsZoneId.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "privateDnsZoneIdSelector": {
                        "description": "Selector for a PrivateDNSZone in network to populate privateDnsZoneId.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "replicationRole": {
                        "description": "The replication role. Possible value is None.",
                        "type": "string"
                      },
                      "resourceGroupName": {
                        "description": "The name of the Resource Group where the MySQL Flexible Server should exist. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "skuName": {
                        "description": "The SKU Name for the MySQL Flexible Server.",
                        "type": "string"
                      },
                      "sourceServerId": {
                        "description": "The resource ID of the source MySQL Flexible Server to be restored. Required when create_mode is PointInTimeRestore, GeoRestore, and Replica. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "storage": {
                        "description": "A storage block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "autoGrowEnabled": {
                              "description": "Should Storage Auto Grow be enabled? Defaults to true.",
                              "type": "boolean"
                            },
                            "iops": {
                              "description": "The storage IOPS for the MySQL Flexible Server. Possible values are between 360 and 20000.",
                              "type": "number"
                            },
                            "sizeGb": {
                              "description": "The max storage allowed for the MySQL Flexible Server. Possible values are between 20 and 16384.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "tags": {
                        "description": "A mapping of tags which should be assigned to the MySQL Flexible Server.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "version": {
                        "description": "The version of the MySQL Flexible Server to use. Possible values are 5.7, and 8.0.21. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "zone": {
                        "description": "Specifies the Availability Zone in which this MySQL Flexible Server should be located. Possible values are 1, 2 and 3.",
                        "type": "string"
                      }
                    }
                  },
                  "managementPolicy": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicy specifies the level of control Crossplane has over the managed external resource. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "FullControl",
                    "enum": [
                      "FullControl",
                      "ObserveOnly",
                      "OrphanOnDelete"
                    ]
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "providerRef": {
                    "description": "ProviderReference specifies the provider that will be used to create, observe, update, and delete this managed resource. Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)",
                    "message": "location is a required parameter"
                  }
                ]
              },
              "status": {
                "description": "FlexibleServerStatus defines the observed state of FlexibleServer.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "administratorLogin": {
                        "description": "The Administrator login for the MySQL Flexible Server. Required when create_mode is Default. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "backupRetentionDays": {
                        "description": "The backup retention days for the MySQL Flexible Server. Possible values are between 1 and 35 days. Defaults to 7.",
                        "type": "number"
                      },
                      "createMode": {
                        "description": "The creation mode which can be used to restore or replicate existing servers. Possible values are Default, PointInTimeRestore, GeoRestore, and Replica. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "customerManagedKey": {
                        "description": "A customer_managed_key block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "geoBackupKeyVaultKeyId": {
                              "description": "The ID of the geo backup Key Vault Key. It can't cross region and need Customer Managed Key in same region as geo backup.",
                              "type": "string"
                            },
                            "geoBackupUserAssignedIdentityId": {
                              "description": "The geo backup user managed identity id for a Customer Managed Key. Should be added with identity_ids. It can't cross region and need identity in same region as geo backup.",
                              "type": "string"
                            },
                            "keyVaultKeyId": {
                              "description": "The ID of the Key Vault Key.",
                              "type": "string"
                            },
                            "primaryUserAssignedIdentityId": {
                              "description": "Specifies the primary user managed identity id for a Customer Managed Key. Should be added with identity_ids.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "delegatedSubnetId": {
                        "description": "The ID of the virtual network subnet to create the MySQL Flexible Server. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "fqdn": {
                        "description": "The fully qualified domain name of the MySQL Flexible Server.",
                        "type": "string"
                      },
                      "geoRedundantBackupEnabled": {
                        "description": "Should geo redundant backup enabled? Defaults to false. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "boolean"
                      },
                      "highAvailability": {
                        "description": "A high_availability block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "The high availability mode for the MySQL Flexible Server. Possibles values are SameZone and ZoneRedundant.",
                              "type": "string"
                            },
                            "standbyAvailabilityZone": {
                              "description": "Specifies the Availability Zone in which the standby Flexible Server should be located. Possible values are 1, 2 and 3.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "id": {
                        "description": "The ID of the MySQL Flexible Server.",
                        "type": "string"
                      },
                      "identity": {
                        "description": "An identity block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identityIds": {
                              "description": "A list of User Assigned Managed Identity IDs to be assigned to this MySQL Flexible Server.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "description": "Specifies the type of Managed Service Identity that should be configured on this MySQL Flexible Server. The only possible value is UserAssigned.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "The Azure Region where the MySQL Flexible Server should exist. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "maintenanceWindow": {
                        "description": "A maintenance_window block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dayOfWeek": {
                              "description": "The day of week for maintenance window. Defaults to 0.",
                              "type": "number"
                            },
                            "startHour": {
                              "description": "The start hour for maintenance window. Defaults to 0.",
                              "type": "number"
                            },
                            "startMinute": {
                              "description": "The start minute for maintenance window. Defaults to 0.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "pointInTimeRestoreTimeInUtc": {
                        "description": "The point in time to restore from creation_source_server_id when create_mode is PointInTimeRestore. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "privateDnsZoneId": {
                        "description": "The ID of the private DNS zone to create the MySQL Flexible Server. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "publicNetworkAccessEnabled": {
                        "description": "Is the public network access enabled?",
                        "type": "boolean"
                      },
                      "replicaCapacity": {
                        "description": "The maximum number of replicas that a primary MySQL Flexible Server can have.",
                        "type": "number"
                      },
                      "replicationRole": {
                        "description": "The replication role. Possible value is None.",
                        "type": "string"
                      },
                      "resourceGroupName": {
                        "description": "The name of the Resource Group where the MySQL Flexible Server should exist. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "skuName": {
                        "description": "The SKU Name for the MySQL Flexible Server.",
                        "type": "string"
                      },
                      "sourceServerId": {
                        "description": "The resource ID of the source MySQL Flexible Server to be restored. Required when create_mode is PointInTimeRestore, GeoRestore, and Replica. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "storage": {
                        "description": "A storage block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "autoGrowEnabled": {
                              "description": "Should Storage Auto Grow be enabled? Defaults to true.",
                              "type": "boolean"
                            },
                            "iops": {
                              "description": "The storage IOPS for the MySQL Flexible Server. Possible values are between 360 and 20000.",
                              "type": "number"
                            },
                            "sizeGb": {
                              "description": "The max storage allowed for the MySQL Flexible Server. Possible values are between 20 and 16384.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "tags": {
                        "description": "A mapping of tags which should be assigned to the MySQL Flexible Server.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "version": {
                        "description": "The version of the MySQL Flexible Server to use. Possible values are 5.7, and 8.0.21. Changing this forces a new MySQL Flexible Server to be created.",
                        "type": "string"
                      },
                      "zone": {
                        "description": "Specifies the Availability Zone in which this MySQL Flexible Server should be located. Possible values are 1, 2 and 3.",
                        "type": "string"
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}