{
  "$schema": "http://json-schema.org/schema#",
  "description": "A ProviderConfigUsage indicates that a resource is using a ProviderConfig.",
  "type": "object",
  "required": [
    "providerConfigRef",
    "resourceRef"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "aws.upbound.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "ProviderConfigUsage"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "providerConfigRef": {
      "description": "ProviderConfigReference to the provider config being used.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "Name of the referenced object.",
          "type": "string"
        },
        "policy": {
          "description": "Policies for referencing.",
          "type": "object",
          "properties": {
            "resolution": {
              "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
              "type": "string",
              "default": "Required",
              "enum": [
                "Required",
                "Optional"
              ]
            },
            "resolve": {
              "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
              "type": "string",
              "enum": [
                "Always",
                "IfNotPresent"
              ]
            }
          }
        }
      }
    },
    "resourceRef": {
      "description": "ResourceReference to the managed resource using the provider config.",
      "type": "object",
      "required": [
        "apiVersion",
        "kind",
        "name"
      ],
      "properties": {
        "apiVersion": {
          "description": "APIVersion of the referenced object.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the referenced object.",
          "type": "string"
        },
        "name": {
          "description": "Name of the referenced object.",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referenced object.",
          "type": "string"
        }
      }
    }
  }
}