{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "appbindings.appcatalog.appscode.com",
    "creationTimestamp": null,
    "labels": {
      "app.kubernetes.io/name": "catalog"
    }
  },
  "spec": {
    "group": "appcatalog.appscode.com",
    "names": {
      "plural": "appbindings",
      "singular": "appbinding",
      "kind": "AppBinding",
      "listKind": "AppBindingList",
      "categories": [
        "catalog",
        "appscode",
        "all"
      ]
    },
    "scope": "Namespaced",
    "versions": [
      {
        "name": "v1alpha1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "AppBindingSpec is the spec for app",
                "type": "object",
                "required": [
                  "clientConfig"
                ],
                "properties": {
                  "appRef": {
                    "description": "Reference to underlying application",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "apiGroup": {
                        "type": "string"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": "string"
                      }
                    }
                  },
                  "clientConfig": {
                    "description": "ClientConfig defines how to communicate with the app.\nRequired",
                    "type": "object",
                    "properties": {
                      "caBundle": {
                        "description": "CABundle is a PEM encoded CA bundle which will be used to validate the serving certificate of this app.",
                        "type": "string",
                        "format": "byte"
                      },
                      "insecureSkipTLSVerify": {
                        "description": "InsecureSkipTLSVerify disables TLS certificate verification when communicating with this app.\nThis is strongly discouraged.  You should use the CABundle instead.",
                        "type": "boolean"
                      },
                      "serverName": {
                        "description": "ServerName is used to verify the hostname on the returned\ncertificates unless InsecureSkipVerify is given. It is also included\nin the client's handshake to support virtual hosting unless it is\nan IP address.",
                        "type": "string"
                      },
                      "service": {
                        "description": "`service` is a reference to the service for this app. Either\n`service` or `url` must be specified.\n\nIf the webhook is running within the cluster, then you should use `service`.",
                        "type": "object",
                        "required": [
                          "name",
                          "port",
                          "scheme"
                        ],
                        "properties": {
                          "name": {
                            "description": "`name` is the name of the service.\nRequired",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "`namespace` is the namespace of the service.",
                            "type": "string"
                          },
                          "path": {
                            "description": "`path` is an optional URL path which will be sent in any request to\nthis service.",
                            "type": "string"
                          },
                          "port": {
                            "description": "The port that will be exposed by this app.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "query": {
                            "description": "`query` is optional encoded query string, without '?' which will be\nsent in any request to this service.",
                            "type": "string"
                          },
                          "scheme": {
                            "description": "Specifies which scheme to use, for example: http, https\nIf specified, then it will applied as prefix in this format: scheme://\nIf not specified, then nothing will be prefixed",
                            "type": "string"
                          }
                        }
                      },
                      "url": {
                        "description": "`url` gives the location of the app, in standard URL form\n(`[scheme://]host:port/path`). Exactly one of `url` or `service`\nmust be specified.\n\nThe `host` should not refer to a service running in the cluster; use\nthe `service` field instead. The host might be resolved via external\nDNS in some apiservers (e.g., `kube-apiserver` cannot resolve\nin-cluster DNS as that would be a layering violation). `host` may\nalso be an IP address.\n\nA path is optional, and if present may be any string permissible in\na URL. You may use the path to pass an arbitrary string to the\napp, for example, a cluster identifier.\n\nAttempting to use a user or basic auth e.g. \"user:password@\" is not\nallowed. Fragments (\"#...\") and query parameters (\"?...\") are not\nallowed, either.",
                        "type": "string"
                      }
                    }
                  },
                  "parameters": {
                    "description": "Parameters is a set of the parameters to be used to connect to the\napp. The inline YAML/JSON payload to be translated into equivalent\nJSON object.\n\nThe Parameters field is NOT secret or secured in any way and should\nNEVER be used to hold sensitive information. To set parameters that\ncontain secret information, you should ALWAYS store that information\nin a Secret.",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true,
                    "x-kubernetes-embedded-resource": true
                  },
                  "secret": {
                    "description": "Secret is the name of the secret to create in the AppBinding's\nnamespace that will hold the credentials associated with the AppBinding.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "secretTransforms": {
                    "description": "List of transformations that should be applied to the credentials\nassociated with the ServiceBinding before they are inserted into the Secret.",
                    "type": "array",
                    "items": {
                      "description": "SecretTransform is a single transformation that is applied to the\ncredentials returned from the broker before they are inserted into\nthe Secret associated with the ServiceBinding.\nBecause different brokers providing the same type of service may\neach return a different credentials structure, users can specify\nthe transformations that should be applied to the Secret to adapt\nits entries to whatever the service consumer expects.\nFor example, the credentials returned by the broker may include the\nkey \"USERNAME\", but the consumer requires the username to be\nexposed under the key \"DB_USER\" instead. To have the Service\nCatalog transform the Secret, the following SecretTransform must\nbe specified in ServiceBinding.spec.secretTransform:\n- {\"renameKey\": {\"from\": \"USERNAME\", \"to\": \"DB_USER\"}}\nOnly one of the SecretTransform's members may be specified.",
                      "type": "object",
                      "properties": {
                        "addKey": {
                          "description": "AddKey represents a transform that adds an additional key to the credentials Secret",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The name of the key to add",
                              "type": "string"
                            },
                            "stringValue": {
                              "description": "The string (non-binary) value to add to the Secret under the specified key.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The binary value (possibly non-string) to add to the Secret under the specified key. If both\nvalue and stringValue are specified, then value is ignored and stringValue is stored.",
                              "type": "string",
                              "format": "byte"
                            }
                          }
                        },
                        "addKeysFrom": {
                          "description": "AddKeysFrom represents a transform that merges all the entries of an existing Secret\ninto the credentials Secret",
                          "type": "object",
                          "properties": {
                            "secretRef": {
                              "description": "The reference to the Secret that should be merged into the credentials Secret.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            }
                          }
                        },
                        "removeKey": {
                          "description": "RemoveKey represents a transform that removes a credentials Secret entry",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to remove from the Secret",
                              "type": "string"
                            }
                          }
                        },
                        "renameKey": {
                          "description": "RenameKey represents a transform that renames a credentials Secret entry's key",
                          "type": "object",
                          "required": [
                            "from",
                            "to"
                          ],
                          "properties": {
                            "from": {
                              "description": "The name of the key to rename",
                              "type": "string"
                            },
                            "to": {
                              "description": "The new name for the key",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "tlsSecret": {
                    "description": "TLSSecret is the name of the secret that will hold\nthe client certificate and private key associated with the AppBinding.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "type": {
                    "description": "Type used to facilitate programmatic handling of application.",
                    "type": "string"
                  },
                  "version": {
                    "description": "Version used to facilitate programmatic handling of application.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "subresources": {},
        "additionalPrinterColumns": [
          {
            "name": "Type",
            "type": "string",
            "jsonPath": ".spec.type"
          },
          {
            "name": "Version",
            "type": "string",
            "jsonPath": ".spec.version"
          },
          {
            "name": "Age",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}