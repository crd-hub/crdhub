{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "clustermaintenancewindows.supervisor.appscode.com",
    "creationTimestamp": null
  },
  "spec": {
    "group": "supervisor.appscode.com",
    "names": {
      "plural": "clustermaintenancewindows",
      "singular": "clustermaintenancewindow",
      "kind": "ClusterMaintenanceWindow",
      "listKind": "ClusterMaintenanceWindowList"
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1alpha1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "ClusterMaintenanceWindow is the Schema for the clustermaintenancewindows API",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "MaintenanceWindowSpec defines the desired state of MaintenanceWindow",
                "type": "object",
                "properties": {
                  "dates": {
                    "description": "Dates consists of a list of Dates as Maintenance time.\nDates are always needed to be given in UTC format.\nFormat: yyyy-mm-ddThh.mm.ssZ [Here Z stands for Zero time zone / UTC time zone / GMT (+0000)]\nExample:\n dates:\n  - start: 2022-01-24T00:00:18Z\n    end: 2022-01-24T23:41:18Z",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "end",
                        "start"
                      ],
                      "properties": {
                        "end": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "start": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  },
                  "days": {
                    "description": "Days consists of a map of DayOfWeek and corresponding list of TimeWindow.\nThere is `Logical OR` relationship between Days and Dates.\nExample:\n days:\n   Monday:\n    - start: 10:40AM\n      end: 7:00PM",
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "end",
                          "start"
                        ],
                        "properties": {
                          "end": {
                            "type": "string",
                            "format": "time"
                          },
                          "start": {
                            "type": "string",
                            "format": "time"
                          }
                        }
                      }
                    }
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "timezone": {
                    "description": "If the Timezone is not set or \"\" or \"UTC\", the given times and dates are considered as UTC.\nIf the name is \"Local\", the given times and dates are considered as server local timezone.\n\nOtherwise, the Timezone should specify a location name corresponding to a file\nin the IANA Time Zone database, such as \"Asia/Dhaka\", \"America/New_York\", .\nRef: https://www.iana.org/time-zones\n     https://en.wikipedia.org/wiki/List_of_tz_database_time_zones",
                    "type": "string"
                  }
                }
              },
              "status": {
                "description": "MaintenanceWindowStatus defines the observed state of MaintenanceWindow",
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "Conditions applied to the database, such as approval or denial.",
                    "type": "array",
                    "items": {
                      "description": "Condition defines an observation of a object operational state.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A human-readable message indicating details about the transition.\nThis field may be empty.",
                          "type": "string"
                        },
                        "observedGeneration": {
                          "description": "If set, this represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "reason": {
                          "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether this field is considered a guaranteed API.\nThis field may not be empty.",
                          "type": "string"
                        },
                        "severity": {
                          "description": "Severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of the condition, one of True, False, Unknown.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary util\ncan be useful (see .node.status.util), the ability to deconflict is important.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "observedGeneration": {
                    "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the\nresource's generation, which is updated on mutation by the API Server.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "status": {
                    "description": "Specifies the current phase of the database",
                    "type": "string",
                    "default": "Pending",
                    "enum": [
                      "Pending",
                      "Approved",
                      "Rejected"
                    ]
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "Default",
            "type": "boolean",
            "jsonPath": ".spec.isDefault"
          },
          {
            "name": "Age",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}