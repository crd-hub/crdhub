{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "recommendations.supervisor.appscode.com",
    "creationTimestamp": null
  },
  "spec": {
    "group": "supervisor.appscode.com",
    "names": {
      "plural": "recommendations",
      "singular": "recommendation",
      "kind": "Recommendation",
      "listKind": "RecommendationList"
    },
    "scope": "Namespaced",
    "versions": [
      {
        "name": "v1alpha1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "Recommendation is the Schema for the recommendations API",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "RecommendationSpec defines the desired state of Recommendation",
                "type": "object",
                "required": [
                  "operation",
                  "recommender",
                  "rules",
                  "target"
                ],
                "properties": {
                  "backoffLimit": {
                    "description": "BackoffLimit specifies the number of retries before marking this recommendation failed.\nBy default set as five(5).\nIf BackoffLimit is zero(0), the operation will be tried to executed only once.",
                    "type": "integer",
                    "format": "int32",
                    "maximum": 10,
                    "minimum": 0
                  },
                  "deadline": {
                    "description": "The recommendation will be executed within the given Deadline.\nTo maintain deadline, Parallelism can be compromised.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "description": "Description specifies the reason why this recommendation is generated.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "Operation holds a kubernetes object yaml which will be applied when this recommendation will be executed.\nIt should be a valid kubernetes resource yaml containing apiVersion, kind and metadata fields.",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true,
                    "x-kubernetes-embedded-resource": true
                  },
                  "recommender": {
                    "description": "Recommender holds the name and namespace of the component which generate this recommendation.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": "string"
                      }
                    }
                  },
                  "requireExplicitApproval": {
                    "description": "If RequireExplicitApproval is set to `true` then the Recommendation must be Approved manually.\nRecommendation won't be executed without manual approval and any kind of ApprovalPolicy will be ignored.",
                    "type": "boolean"
                  },
                  "rules": {
                    "description": "Rules defines OperationPhaseRules. It contains three identification rules of successful execution of the operation,\nprogressing execution of the operation \u0026 failed execution of the operation.\nExample:\nrules:\n  success:    `has(self.status.phase) \u0026\u0026 self.status.phase == 'Successful'`\n  inProgress: `has(self.status.phase) \u0026\u0026 self.status.phase == 'Progressing'`\n  failed:     `has(self.status.phase) \u0026\u0026 self.status.phase == 'Failed'`",
                    "type": "object",
                    "required": [
                      "failed",
                      "inProgress",
                      "success"
                    ],
                    "properties": {
                      "failed": {
                        "description": "Failed defines a rule to identify that applied operation is failed.\nExample:\n  inProgress: `has(self.status.phase) \u0026\u0026 self.status.phase == 'Failed'`\nHere self.status.phase is pointing to .status.phase field of the Operation object.\nWhen .status.phase field presents and becomes `Failed`, the Failed rule will satisfy.",
                        "type": "string"
                      },
                      "inProgress": {
                        "description": "InProgress defines a rule to identify that applied operation is progressing.\nExample:\n  inProgress: `has(self.status.phase) \u0026\u0026 self.status.phase == 'Progressing'`\nHere self.status.phase is pointing to .status.phase field of the Operation object.\nWhen .status.phase field presents and becomes `Progressing`, the InProgress rule will satisfy.",
                        "type": "string"
                      },
                      "success": {
                        "description": "Success defines a rule to identify the successful execution of the operation.\nExample:\n  success: `has(self.status.phase) \u0026\u0026 self.status.phase == 'Successful'`\nHere self.status.phase is pointing to .status.phase field of the Operation object.\nWhen .status.phase field presents and becomes `Successful`, the Success rule will satisfy.",
                        "type": "string"
                      }
                    }
                  },
                  "target": {
                    "description": "Target specifies the APIGroup, Kind \u0026 Name of the target resource for which the recommendation is generated",
                    "type": "object",
                    "required": [
                      "kind",
                      "name"
                    ],
                    "properties": {
                      "apiGroup": {
                        "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the type of resource being referenced",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the name of resource being referenced",
                        "type": "string"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "vulnerabilityReport": {
                    "description": "VulnerabilityReport specifies any kind vulnerability report like cve fixed information",
                    "type": "object",
                    "properties": {
                      "fixed": {
                        "description": "Fixed represents the list of CVEs fixed if the recommendation is applied",
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "integer"
                            }
                          },
                          "vulnerabilities": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "primaryURL": {
                                  "type": "string"
                                },
                                "severity": {
                                  "type": "string"
                                },
                                "vulnerabilityID": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "known": {
                        "description": "Known represents the list of CVEs known to exist after the recommendation is applied",
                        "type": "object",
                        "properties": {
                          "count": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "integer"
                            }
                          },
                          "vulnerabilities": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "primaryURL": {
                                  "type": "string"
                                },
                                "severity": {
                                  "type": "string"
                                },
                                "vulnerabilityID": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "RecommendationStatus defines the observed state of Recommendation",
                "type": "object",
                "properties": {
                  "approvalStatus": {
                    "description": "Specifies the Approval Status of the Recommendation.\nPossible values are `Pending`, `Approved`, `Rejected`\nPending: Recommendation is yet to Approved or Rejected\nApproved: Recommendation is permitted to execute.\nRejected: Recommendation is rejected and never be executed.",
                    "type": "string",
                    "default": "Pending",
                    "enum": [
                      "Pending",
                      "Approved",
                      "Rejected"
                    ]
                  },
                  "approvedWindow": {
                    "description": "ApprovedWindow specifies the time window configuration for the Recommendation execution.",
                    "type": "object",
                    "properties": {
                      "dates": {
                        "description": "Dates holds a list of DateWindow when Recommendation is permitted to execute",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "end",
                            "start"
                          ],
                          "properties": {
                            "end": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "start": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      },
                      "maintenanceWindow": {
                        "description": "MaintenanceWindow holds the reference of the MaintenanceWindow resource",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "apiGroup": {
                            "type": "string"
                          },
                          "kind": {
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                            "type": "string"
                          }
                        }
                      },
                      "window": {
                        "description": "Window defines the ApprovedWindow type\nPossible values are:\nImmediate: Recommendation will be executed immediately\nNextAvailable: Recommendation will be executed in the next Available window\nSpecificDates: Recommendation will be executed in the given dates.",
                        "type": "string",
                        "enum": [
                          "Immediate",
                          "NextAvailable",
                          "SpecificDates"
                        ]
                      }
                    }
                  },
                  "comments": {
                    "description": "Specifies Reviewer's comment.",
                    "type": "string"
                  },
                  "conditions": {
                    "description": "Conditions applied to the Recommendation.",
                    "type": "array",
                    "items": {
                      "description": "Condition defines an observation of a object operational state.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A human-readable message indicating details about the transition.\nThis field may be empty.",
                          "type": "string"
                        },
                        "observedGeneration": {
                          "description": "If set, this represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "reason": {
                          "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether this field is considered a guaranteed API.\nThis field may not be empty.",
                          "type": "string"
                        },
                        "severity": {
                          "description": "Severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of the condition, one of True, False, Unknown.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary util\ncan be useful (see .node.status.util), the ability to deconflict is important.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "createdOperationRef": {
                    "description": "CreatedOperationRef holds the created operation name.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "failedAttempt": {
                    "description": "FailedAttempt holds the number of times the operation is failed.",
                    "type": "integer",
                    "format": "int32",
                    "default": 0
                  },
                  "observedGeneration": {
                    "description": "observedGeneration is the most recent generation observed for this resource. It corresponds to the\nresource's generation, which is updated on mutation by the API Server.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "outdated": {
                    "description": "Outdated is indicating details whether the Recommendation is outdated or not.\nIf the value is `true`, then Recommendation will not be executed. This indicates that after generating the Recommendation,\nthe targeted resource is changed in such a way that the generated Recommendation has become outdated \u0026 can't be executed anymore.",
                    "type": "boolean",
                    "default": false
                  },
                  "parallelism": {
                    "description": "Parallelism imposes some restriction to Recommendation execution.\nPossible values are:\nNamespace: Only one Recommendation can be executed at a time in a namespace.\nTarget: Only one Recommendation for a given target can be executed at a time.\nTargetAndNamespace: Only one Recommendation for a given target can be executed at a time in a namespace.",
                    "type": "string",
                    "default": "Namespace",
                    "enum": [
                      "Namespace",
                      "Target",
                      "TargetAndNamespace"
                    ]
                  },
                  "phase": {
                    "description": "Specifies the Recommendation current phase.\nPossible values are:\nPending : Recommendation misses at least one pre-requisite for executing the operation.\n          It also tells that some user action is needed.\nSkipped : Operation is skipped because of Rejection ApprovalStatus.\nWaiting : Recommendation is waiting for the MaintenanceWindow to execute the operation\n          or waiting for others Recommendation to complete far maintaining Parallelism.\nInProgress : The operation execution is successfully started and waiting for its final status.\nSucceeded : Operation has been successfully executed.\nFailed : Operation execution has not completed successfully i.e. encountered an error",
                    "type": "string",
                    "enum": [
                      "Pending",
                      "Skipped",
                      "Waiting",
                      "InProgress",
                      "Succeeded",
                      "Failed"
                    ]
                  },
                  "reason": {
                    "description": "A message indicating details about Recommendation current phase.",
                    "type": "string",
                    "default": "WaitingForApproval"
                  },
                  "reviewTimestamp": {
                    "description": "Contains review timestamp",
                    "type": "string",
                    "format": "date-time"
                  },
                  "reviewer": {
                    "description": "Specifies Reviewer's details.",
                    "type": "object",
                    "required": [
                      "kind",
                      "name"
                    ],
                    "properties": {
                      "apiGroup": {
                        "description": "APIGroup holds the API group of the referenced subject.\nDefaults to \"\" for ServiceAccount subjects.\nDefaults to \"rbac.authorization.k8s.io\" for User and Group subjects.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind of object being referenced. Values defined by this API group are \"User\", \"Group\", and \"ServiceAccount\".\nIf the Authorizer does not recognized the kind value, the Authorizer should report an error.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the object being referenced.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referenced object.  If the object kind is non-namespace, such as \"User\" or \"Group\", and this value is not empty\nthe Authorizer should report an error.",
                        "type": "string"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "Status",
            "type": "string",
            "jsonPath": ".status.phase"
          },
          {
            "name": "Outdated",
            "type": "boolean",
            "jsonPath": ".status.outdated"
          },
          {
            "name": "Age",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}