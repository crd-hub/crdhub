{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "permissions.lakeformation.aws.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "lakeformation.aws.upbound.io",
    "names": {
      "plural": "permissions",
      "singular": "permissions",
      "kind": "Permissions",
      "listKind": "PermissionsList",
      "categories": [
        "crossplane",
        "managed",
        "aws"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "Permissions is the Schema for the Permissionss API. Grants permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "PermissionsSpec defines the desired state of Permissions",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "required": [
                      "region"
                    ],
                    "properties": {
                      "catalogId": {
                        "description": "–  Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.",
                        "type": "string"
                      },
                      "catalogResource": {
                        "description": "Whether the permissions are to be granted for the Data Catalog. Defaults to false.",
                        "type": "boolean"
                      },
                      "dataLocation": {
                        "description": "Configuration block for a data location resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "arn": {
                              "description": "–  Amazon Resource Name (ARN) that uniquely identifies the data location resource.",
                              "type": "string"
                            },
                            "arnRef": {
                              "description": "Reference to a Resource in lakeformation to populate arn.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "arnSelector": {
                              "description": "Selector for a Resource in lakeformation to populate arn.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "catalogId": {
                              "description": "Identifier for the Data Catalog where the location is registered with Lake Formation. By default, it is the account ID of the caller.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "database": {
                        "description": "Configuration block for a database resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "name": {
                              "description": "–  Name of the database resource. Unique to the Data Catalog.",
                              "type": "string"
                            },
                            "nameRef": {
                              "description": "Reference to a CatalogDatabase in glue to populate name.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "nameSelector": {
                              "description": "Selector for a CatalogDatabase in glue to populate name.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "lfTag": {
                        "description": "Configuration block for an LF-tag resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "key": {
                              "description": "name for the tag.",
                              "type": "string"
                            },
                            "values": {
                              "description": "A list of possible values an attribute can take.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "lfTagPolicy": {
                        "description": "Configuration block for an LF-tag policy resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "expression": {
                              "description": "A list of tag conditions that apply to the resource's tag policy. Configuration block for tag conditions that apply to the policy. See expression below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "name of an LF-Tag.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "A list of possible values of an LF-Tag.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "resourceType": {
                              "description": "–  The resource type for which the tag policy applies. Valid values are DATABASE and TABLE.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "permissions": {
                        "description": "–  List of permissions granted to the principal. Valid values may include ALL, ALTER, ASSOCIATE, CREATE_DATABASE, CREATE_TABLE, DATA_LOCATION_ACCESS, DELETE, DESCRIBE, DROP, INSERT, and SELECT. For details on each permission, see Lake Formation Permissions Reference.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "permissionsWithGrantOption": {
                        "description": "Subset of permissions which the principal can pass.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "principal": {
                        "description": "account permissions. For more information, see Lake Formation Permissions Reference.",
                        "type": "string"
                      },
                      "region": {
                        "description": "Region is the region you'd like your resource to be created in.",
                        "type": "string"
                      },
                      "table": {
                        "description": "Configuration block for a table resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "databaseName": {
                              "description": "–  Name of the database for the table. Unique to a Data Catalog.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the table.",
                              "type": "string"
                            },
                            "wildcard": {
                              "description": "Whether to use a wildcard representing every table under a database. Defaults to false.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "tableWithColumns": {
                        "description": "Configuration block for a table with columns resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "columnNames": {
                              "description": "Set of column names for the table.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "databaseName": {
                              "description": "–  Name of the database for the table with columns resource. Unique to the Data Catalog.",
                              "type": "string"
                            },
                            "excludedColumnNames": {
                              "description": "Set of column names for the table to exclude.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "name": {
                              "description": "–  Name of the table resource.",
                              "type": "string"
                            },
                            "nameRef": {
                              "description": "Reference to a CatalogTable in glue to populate name.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "nameSelector": {
                              "description": "Selector for a CatalogTable in glue to populate name.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "wildcard": {
                              "description": "Whether to use a column wildcard.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "catalogId": {
                        "description": "–  Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.",
                        "type": "string"
                      },
                      "catalogResource": {
                        "description": "Whether the permissions are to be granted for the Data Catalog. Defaults to false.",
                        "type": "boolean"
                      },
                      "dataLocation": {
                        "description": "Configuration block for a data location resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog where the location is registered with Lake Formation. By default, it is the account ID of the caller.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "database": {
                        "description": "Configuration block for a database resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "lfTag": {
                        "description": "Configuration block for an LF-tag resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "key": {
                              "description": "name for the tag.",
                              "type": "string"
                            },
                            "values": {
                              "description": "A list of possible values an attribute can take.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "lfTagPolicy": {
                        "description": "Configuration block for an LF-tag policy resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "expression": {
                              "description": "A list of tag conditions that apply to the resource's tag policy. Configuration block for tag conditions that apply to the policy. See expression below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "name of an LF-Tag.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "A list of possible values of an LF-Tag.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "resourceType": {
                              "description": "–  The resource type for which the tag policy applies. Valid values are DATABASE and TABLE.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "permissions": {
                        "description": "–  List of permissions granted to the principal. Valid values may include ALL, ALTER, ASSOCIATE, CREATE_DATABASE, CREATE_TABLE, DATA_LOCATION_ACCESS, DELETE, DESCRIBE, DROP, INSERT, and SELECT. For details on each permission, see Lake Formation Permissions Reference.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "permissionsWithGrantOption": {
                        "description": "Subset of permissions which the principal can pass.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "principal": {
                        "description": "account permissions. For more information, see Lake Formation Permissions Reference.",
                        "type": "string"
                      },
                      "table": {
                        "description": "Configuration block for a table resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "databaseName": {
                              "description": "–  Name of the database for the table. Unique to a Data Catalog.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the table.",
                              "type": "string"
                            },
                            "wildcard": {
                              "description": "Whether to use a wildcard representing every table under a database. Defaults to false.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "tableWithColumns": {
                        "description": "Configuration block for a table with columns resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "columnNames": {
                              "description": "Set of column names for the table.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "databaseName": {
                              "description": "–  Name of the database for the table with columns resource. Unique to the Data Catalog.",
                              "type": "string"
                            },
                            "excludedColumnNames": {
                              "description": "Set of column names for the table to exclude.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "wildcard": {
                              "description": "Whether to use a column wildcard.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.permissions) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.permissions))",
                    "message": "spec.forProvider.permissions is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.principal) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.principal))",
                    "message": "spec.forProvider.principal is a required parameter"
                  }
                ]
              },
              "status": {
                "description": "PermissionsStatus defines the observed state of Permissions.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "catalogId": {
                        "description": "–  Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.",
                        "type": "string"
                      },
                      "catalogResource": {
                        "description": "Whether the permissions are to be granted for the Data Catalog. Defaults to false.",
                        "type": "boolean"
                      },
                      "dataLocation": {
                        "description": "Configuration block for a data location resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "arn": {
                              "description": "–  Amazon Resource Name (ARN) that uniquely identifies the data location resource.",
                              "type": "string"
                            },
                            "catalogId": {
                              "description": "Identifier for the Data Catalog where the location is registered with Lake Formation. By default, it is the account ID of the caller.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "database": {
                        "description": "Configuration block for a database resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "name": {
                              "description": "–  Name of the database resource. Unique to the Data Catalog.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "id": {
                        "type": "string"
                      },
                      "lfTag": {
                        "description": "Configuration block for an LF-tag resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "key": {
                              "description": "name for the tag.",
                              "type": "string"
                            },
                            "values": {
                              "description": "A list of possible values an attribute can take.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "lfTagPolicy": {
                        "description": "Configuration block for an LF-tag policy resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "expression": {
                              "description": "A list of tag conditions that apply to the resource's tag policy. Configuration block for tag conditions that apply to the policy. See expression below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "description": "name of an LF-Tag.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "A list of possible values of an LF-Tag.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "resourceType": {
                              "description": "–  The resource type for which the tag policy applies. Valid values are DATABASE and TABLE.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "permissions": {
                        "description": "–  List of permissions granted to the principal. Valid values may include ALL, ALTER, ASSOCIATE, CREATE_DATABASE, CREATE_TABLE, DATA_LOCATION_ACCESS, DELETE, DESCRIBE, DROP, INSERT, and SELECT. For details on each permission, see Lake Formation Permissions Reference.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "permissionsWithGrantOption": {
                        "description": "Subset of permissions which the principal can pass.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "principal": {
                        "description": "account permissions. For more information, see Lake Formation Permissions Reference.",
                        "type": "string"
                      },
                      "table": {
                        "description": "Configuration block for a table resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "databaseName": {
                              "description": "–  Name of the database for the table. Unique to a Data Catalog.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the table.",
                              "type": "string"
                            },
                            "wildcard": {
                              "description": "Whether to use a wildcard representing every table under a database. Defaults to false.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "tableWithColumns": {
                        "description": "Configuration block for a table with columns resource. Detailed below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "catalogId": {
                              "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                              "type": "string"
                            },
                            "columnNames": {
                              "description": "Set of column names for the table.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "databaseName": {
                              "description": "–  Name of the database for the table with columns resource. Unique to the Data Catalog.",
                              "type": "string"
                            },
                            "excludedColumnNames": {
                              "description": "Set of column names for the table to exclude.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "name": {
                              "description": "–  Name of the table resource.",
                              "type": "string"
                            },
                            "wildcard": {
                              "description": "Whether to use a column wildcard.",
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "type"
                    ],
                    "x-kubernetes-list-type": "map"
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}