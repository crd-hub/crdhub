{
  "$schema": "http://json-schema.org/schema#",
  "description": "GatewayRoute is the Schema for the GatewayRoutes API. Provides an AWS App Mesh gateway route resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "appmesh.aws.upbound.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "GatewayRoute"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "GatewayRouteSpec defines the desired state of GatewayRoute",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "meshName": {
              "description": "Name of the service mesh in which to create the gateway route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "meshOwner": {
              "description": "AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.",
              "type": "string"
            },
            "name": {
              "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "spec": {
              "description": "Gateway route specification to apply.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "grpcRoute": {
                    "description": "Specification of a gRPC gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "serviceName": {
                                "description": "Fully qualified domain name for the service to match from the request.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "http2Route": {
                    "description": "Specification of an HTTP/2 gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rewrite": {
                                "description": "Gateway route action to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hostname": {
                                      "description": "Host name to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultTargetHostname": {
                                            "description": "Default target host name to write to. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "description": "Specified beginning characters to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultPrefix": {
                                            "description": "Default prefix used to replace the incoming route prefix when rewritten. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value used to replace the incoming route prefix when rewritten.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "header": {
                                "description": "Client request headers to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "invert": {
                                      "description": "If true, the match is on the opposite of the match method and value. Default is false.",
                                      "type": "boolean"
                                    },
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Header value sent by the client must match the specified value exactly.",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Specified beginning characters to rewrite.",
                                            "type": "string"
                                          },
                                          "range": {
                                            "description": "Object that specifies the range of numbers that the header value sent by the client must be included in.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "end": {
                                                  "description": "End of the range.",
                                                  "type": "number"
                                                },
                                                "start": {
                                                  "description": "(Requited) Start of the range.",
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          },
                                          "regex": {
                                            "description": "Header value sent by the client must include the specified characters.",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Header value sent by the client must end with the specified characters.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "hostname": {
                                "description": "Host name to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Header value sent by the client must match the specified value exactly.",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "Header value sent by the client must end with the specified characters.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "path": {
                                "description": "Client request path to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Header value sent by the client must match the specified value exactly.",
                                      "type": "string"
                                    },
                                    "regex": {
                                      "description": "Header value sent by the client must include the specified characters.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "prefix": {
                                "description": "Specified beginning characters to rewrite.",
                                "type": "string"
                              },
                              "queryParameter": {
                                "description": "Client request query parameters to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Header value sent by the client must match the specified value exactly.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "httpRoute": {
                    "description": "Specification of an HTTP gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rewrite": {
                                "description": "Gateway route action to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hostname": {
                                      "description": "Host name to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultTargetHostname": {
                                            "description": "Default target host name to write to. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "description": "Specified beginning characters to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultPrefix": {
                                            "description": "Default prefix used to replace the incoming route prefix when rewritten. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value used to replace the incoming route prefix when rewritten.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          },
                                          "virtualServiceNameRef": {
                                            "description": "Reference to a VirtualService in appmesh to populate virtualServiceName.",
                                            "type": "object",
                                            "required": [
                                              "name"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the referenced object.",
                                                "type": "string"
                                              },
                                              "policy": {
                                                "description": "Policies for referencing.",
                                                "type": "object",
                                                "properties": {
                                                  "resolution": {
                                                    "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                                    "type": "string",
                                                    "default": "Required",
                                                    "enum": [
                                                      "Required",
                                                      "Optional"
                                                    ]
                                                  },
                                                  "resolve": {
                                                    "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                                    "type": "string",
                                                    "enum": [
                                                      "Always",
                                                      "IfNotPresent"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "virtualServiceNameSelector": {
                                            "description": "Selector for a VirtualService in appmesh to populate virtualServiceName.",
                                            "type": "object",
                                            "properties": {
                                              "matchControllerRef": {
                                                "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                                "type": "boolean"
                                              },
                                              "matchLabels": {
                                                "description": "MatchLabels ensures an object with matching labels is selected.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "policy": {
                                                "description": "Policies for selection.",
                                                "type": "object",
                                                "properties": {
                                                  "resolution": {
                                                    "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                                    "type": "string",
                                                    "default": "Required",
                                                    "enum": [
                                                      "Required",
                                                      "Optional"
                                                    ]
                                                  },
                                                  "resolve": {
                                                    "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                                    "type": "string",
                                                    "enum": [
                                                      "Always",
                                                      "IfNotPresent"
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "header": {
                                "description": "Client request headers to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "invert": {
                                      "description": "If true, the match is on the opposite of the match method and value. Default is false.",
                                      "type": "boolean"
                                    },
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Header value sent by the client must match the specified value exactly.",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Specified beginning characters to rewrite.",
                                            "type": "string"
                                          },
                                          "range": {
                                            "description": "Object that specifies the range of numbers that the header value sent by the client must be included in.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "end": {
                                                  "description": "End of the range.",
                                                  "type": "number"
                                                },
                                                "start": {
                                                  "description": "(Requited) Start of the range.",
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          },
                                          "regex": {
                                            "description": "Header value sent by the client must include the specified characters.",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Header value sent by the client must end with the specified characters.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "hostname": {
                                "description": "Host name to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Header value sent by the client must match the specified value exactly.",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "Header value sent by the client must end with the specified characters.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "path": {
                                "description": "Client request path to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Header value sent by the client must match the specified value exactly.",
                                      "type": "string"
                                    },
                                    "regex": {
                                      "description": "Header value sent by the client must include the specified characters.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "prefix": {
                                "description": "Specified beginning characters to rewrite.",
                                "type": "string"
                              },
                              "queryParameter": {
                                "description": "Client request query parameters to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Header value sent by the client must match the specified value exactly.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "priority": {
                    "description": "Priority for the gateway route, between 0 and 1000.",
                    "type": "number"
                  }
                }
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "virtualGatewayName": {
              "description": "Name of the virtual gateway to associate the gateway route with. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "virtualGatewayNameRef": {
              "description": "Reference to a VirtualGateway in appmesh to populate virtualGatewayName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "virtualGatewayNameSelector": {
              "description": "Selector for a VirtualGateway in appmesh to populate virtualGatewayName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "type": "object",
          "properties": {
            "meshName": {
              "description": "Name of the service mesh in which to create the gateway route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "meshOwner": {
              "description": "AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.",
              "type": "string"
            },
            "name": {
              "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "spec": {
              "description": "Gateway route specification to apply.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "grpcRoute": {
                    "description": "Specification of a gRPC gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "serviceName": {
                                "description": "Fully qualified domain name for the service to match from the request.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "http2Route": {
                    "description": "Specification of an HTTP/2 gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rewrite": {
                                "description": "Gateway route action to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hostname": {
                                      "description": "Host name to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultTargetHostname": {
                                            "description": "Default target host name to write to. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "description": "Specified beginning characters to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultPrefix": {
                                            "description": "Default prefix used to replace the incoming route prefix when rewritten. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value used to replace the incoming route prefix when rewritten.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "header": {
                                "description": "Client request headers to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "invert": {
                                      "description": "If true, the match is on the opposite of the match method and value. Default is false.",
                                      "type": "boolean"
                                    },
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Header value sent by the client must match the specified value exactly.",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Specified beginning characters to rewrite.",
                                            "type": "string"
                                          },
                                          "range": {
                                            "description": "Object that specifies the range of numbers that the header value sent by the client must be included in.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "end": {
                                                  "description": "End of the range.",
                                                  "type": "number"
                                                },
                                                "start": {
                                                  "description": "(Requited) Start of the range.",
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          },
                                          "regex": {
                                            "description": "Header value sent by the client must include the specified characters.",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Header value sent by the client must end with the specified characters.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "hostname": {
                                "description": "Host name to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Header value sent by the client must match the specified value exactly.",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "Header value sent by the client must end with the specified characters.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "path": {
                                "description": "Client request path to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Header value sent by the client must match the specified value exactly.",
                                      "type": "string"
                                    },
                                    "regex": {
                                      "description": "Header value sent by the client must include the specified characters.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "prefix": {
                                "description": "Specified beginning characters to rewrite.",
                                "type": "string"
                              },
                              "queryParameter": {
                                "description": "Client request query parameters to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Header value sent by the client must match the specified value exactly.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "httpRoute": {
                    "description": "Specification of an HTTP gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rewrite": {
                                "description": "Gateway route action to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hostname": {
                                      "description": "Host name to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultTargetHostname": {
                                            "description": "Default target host name to write to. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "prefix": {
                                      "description": "Specified beginning characters to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultPrefix": {
                                            "description": "Default prefix used to replace the incoming route prefix when rewritten. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value used to replace the incoming route prefix when rewritten.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "header": {
                                "description": "Client request headers to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "invert": {
                                      "description": "If true, the match is on the opposite of the match method and value. Default is false.",
                                      "type": "boolean"
                                    },
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Header value sent by the client must match the specified value exactly.",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Specified beginning characters to rewrite.",
                                            "type": "string"
                                          },
                                          "range": {
                                            "description": "Object that specifies the range of numbers that the header value sent by the client must be included in.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "end": {
                                                  "description": "End of the range.",
                                                  "type": "number"
                                                },
                                                "start": {
                                                  "description": "(Requited) Start of the range.",
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          },
                                          "regex": {
                                            "description": "Header value sent by the client must include the specified characters.",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Header value sent by the client must end with the specified characters.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "hostname": {
                                "description": "Host name to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Header value sent by the client must match the specified value exactly.",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "Header value sent by the client must end with the specified characters.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "path": {
                                "description": "Client request path to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Header value sent by the client must match the specified value exactly.",
                                      "type": "string"
                                    },
                                    "regex": {
                                      "description": "Header value sent by the client must include the specified characters.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "prefix": {
                                "description": "Specified beginning characters to rewrite.",
                                "type": "string"
                              },
                              "queryParameter": {
                                "description": "Client request query parameters to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Header value sent by the client must match the specified value exactly.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "priority": {
                    "description": "Priority for the gateway route, between 0 and 1000.",
                    "type": "number"
                  }
                }
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              }
            }
          }
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              }
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          }
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          }
        }
      },
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.meshName) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.meshName))",
          "message": "spec.forProvider.meshName is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.spec) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.spec))",
          "message": "spec.forProvider.spec is a required parameter"
        }
      ]
    }
  }
}