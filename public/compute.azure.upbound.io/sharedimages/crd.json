{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "sharedimages.compute.azure.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "compute.azure.upbound.io",
    "names": {
      "plural": "sharedimages",
      "singular": "sharedimage",
      "kind": "SharedImage",
      "listKind": "SharedImageList",
      "categories": [
        "crossplane",
        "managed",
        "azure"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "SharedImage is the Schema for the SharedImages API. Manages a Shared Image within a Shared Image Gallery.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "SharedImageSpec defines the desired state of SharedImage",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "properties": {
                      "acceleratedNetworkSupportEnabled": {
                        "description": "Specifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.",
                        "type": "boolean"
                      },
                      "architecture": {
                        "description": "CPU architecture supported by an OS. Possible values are x64 and Arm64. Defaults to x64. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "confidentialVmEnabled": {
                        "description": "Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.",
                        "type": "boolean"
                      },
                      "confidentialVmSupported": {
                        "description": "Specifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.",
                        "type": "boolean"
                      },
                      "description": {
                        "description": "A description of this Shared Image.",
                        "type": "string"
                      },
                      "diskTypesNotAllowed": {
                        "description": "One or more Disk Types not allowed for the Image. Possible values include Standard_LRS and Premium_LRS.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "endOfLifeDate": {
                        "description": "The end of life date in RFC3339 format of the Image.",
                        "type": "string"
                      },
                      "eula": {
                        "description": "The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "galleryName": {
                        "description": "Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "galleryNameRef": {
                        "description": "Reference to a SharedImageGallery in compute to populate galleryName.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "galleryNameSelector": {
                        "description": "Selector for a SharedImageGallery in compute to populate galleryName.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "hyperVGeneration": {
                        "description": "The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are V1 and V2. Defaults to V1. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "identifier": {
                        "description": "An identifier block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "offer": {
                              "description": "The Offer Name for this Shared Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            },
                            "publisher": {
                              "description": "The Publisher Name for this Gallery Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            },
                            "sku": {
                              "description": "The Name of the SKU for this Gallery Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "maxRecommendedMemoryInGb": {
                        "description": "Maximum memory in GB recommended for the Image.",
                        "type": "number"
                      },
                      "maxRecommendedVcpuCount": {
                        "description": "Maximum count of vCPUs recommended for the Image.",
                        "type": "number"
                      },
                      "minRecommendedMemoryInGb": {
                        "description": "Minimum memory in GB recommended for the Image.",
                        "type": "number"
                      },
                      "minRecommendedVcpuCount": {
                        "description": "Minimum count of vCPUs recommended for the Image.",
                        "type": "number"
                      },
                      "osType": {
                        "description": "The type of Operating System present in this Shared Image. Possible values are Linux and Windows. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "privacyStatementUri": {
                        "description": "The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "purchasePlan": {
                        "description": "A purchase_plan block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The Purchase Plan Name for this Shared Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            },
                            "product": {
                              "description": "The Purchase Plan Product for this Gallery Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            },
                            "publisher": {
                              "description": "The Purchase Plan Publisher for this Gallery Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "releaseNoteUri": {
                        "description": "The URI containing the Release Notes associated with this Shared Image.",
                        "type": "string"
                      },
                      "resourceGroupName": {
                        "description": "The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "resourceGroupNameRef": {
                        "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "resourceGroupNameSelector": {
                        "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "specialized": {
                        "description": "Specifies that the Operating System used inside this Image has not been Generalized (for example, sysprep on Windows has not been run). Changing this forces a new resource to be created.",
                        "type": "boolean"
                      },
                      "tags": {
                        "description": "A mapping of tags to assign to the Shared Image.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "trustedLaunchEnabled": {
                        "description": "Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.",
                        "type": "boolean"
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "acceleratedNetworkSupportEnabled": {
                        "description": "Specifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.",
                        "type": "boolean"
                      },
                      "architecture": {
                        "description": "CPU architecture supported by an OS. Possible values are x64 and Arm64. Defaults to x64. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "confidentialVmEnabled": {
                        "description": "Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.",
                        "type": "boolean"
                      },
                      "confidentialVmSupported": {
                        "description": "Specifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.",
                        "type": "boolean"
                      },
                      "description": {
                        "description": "A description of this Shared Image.",
                        "type": "string"
                      },
                      "diskTypesNotAllowed": {
                        "description": "One or more Disk Types not allowed for the Image. Possible values include Standard_LRS and Premium_LRS.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "endOfLifeDate": {
                        "description": "The end of life date in RFC3339 format of the Image.",
                        "type": "string"
                      },
                      "eula": {
                        "description": "The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "hyperVGeneration": {
                        "description": "The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are V1 and V2. Defaults to V1. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "identifier": {
                        "description": "An identifier block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "offer": {
                              "description": "The Offer Name for this Shared Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            },
                            "publisher": {
                              "description": "The Publisher Name for this Gallery Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            },
                            "sku": {
                              "description": "The Name of the SKU for this Gallery Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "maxRecommendedMemoryInGb": {
                        "description": "Maximum memory in GB recommended for the Image.",
                        "type": "number"
                      },
                      "maxRecommendedVcpuCount": {
                        "description": "Maximum count of vCPUs recommended for the Image.",
                        "type": "number"
                      },
                      "minRecommendedMemoryInGb": {
                        "description": "Minimum memory in GB recommended for the Image.",
                        "type": "number"
                      },
                      "minRecommendedVcpuCount": {
                        "description": "Minimum count of vCPUs recommended for the Image.",
                        "type": "number"
                      },
                      "osType": {
                        "description": "The type of Operating System present in this Shared Image. Possible values are Linux and Windows. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "privacyStatementUri": {
                        "description": "The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "purchasePlan": {
                        "description": "A purchase_plan block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The Purchase Plan Name for this Shared Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            },
                            "product": {
                              "description": "The Purchase Plan Product for this Gallery Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            },
                            "publisher": {
                              "description": "The Purchase Plan Publisher for this Gallery Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "releaseNoteUri": {
                        "description": "The URI containing the Release Notes associated with this Shared Image.",
                        "type": "string"
                      },
                      "specialized": {
                        "description": "Specifies that the Operating System used inside this Image has not been Generalized (for example, sysprep on Windows has not been run). Changing this forces a new resource to be created.",
                        "type": "boolean"
                      },
                      "tags": {
                        "description": "A mapping of tags to assign to the Shared Image.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "trustedLaunchEnabled": {
                        "description": "Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.",
                        "type": "boolean"
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.identifier) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.identifier))",
                    "message": "spec.forProvider.identifier is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
                    "message": "spec.forProvider.location is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.osType) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.osType))",
                    "message": "spec.forProvider.osType is a required parameter"
                  }
                ]
              },
              "status": {
                "description": "SharedImageStatus defines the observed state of SharedImage.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "acceleratedNetworkSupportEnabled": {
                        "description": "Specifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.",
                        "type": "boolean"
                      },
                      "architecture": {
                        "description": "CPU architecture supported by an OS. Possible values are x64 and Arm64. Defaults to x64. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "confidentialVmEnabled": {
                        "description": "Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.",
                        "type": "boolean"
                      },
                      "confidentialVmSupported": {
                        "description": "Specifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.",
                        "type": "boolean"
                      },
                      "description": {
                        "description": "A description of this Shared Image.",
                        "type": "string"
                      },
                      "diskTypesNotAllowed": {
                        "description": "One or more Disk Types not allowed for the Image. Possible values include Standard_LRS and Premium_LRS.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "endOfLifeDate": {
                        "description": "The end of life date in RFC3339 format of the Image.",
                        "type": "string"
                      },
                      "eula": {
                        "description": "The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "galleryName": {
                        "description": "Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "hyperVGeneration": {
                        "description": "The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are V1 and V2. Defaults to V1. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The ID of the Shared Image.",
                        "type": "string"
                      },
                      "identifier": {
                        "description": "An identifier block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "offer": {
                              "description": "The Offer Name for this Shared Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            },
                            "publisher": {
                              "description": "The Publisher Name for this Gallery Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            },
                            "sku": {
                              "description": "The Name of the SKU for this Gallery Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "maxRecommendedMemoryInGb": {
                        "description": "Maximum memory in GB recommended for the Image.",
                        "type": "number"
                      },
                      "maxRecommendedVcpuCount": {
                        "description": "Maximum count of vCPUs recommended for the Image.",
                        "type": "number"
                      },
                      "minRecommendedMemoryInGb": {
                        "description": "Minimum memory in GB recommended for the Image.",
                        "type": "number"
                      },
                      "minRecommendedVcpuCount": {
                        "description": "Minimum count of vCPUs recommended for the Image.",
                        "type": "number"
                      },
                      "osType": {
                        "description": "The type of Operating System present in this Shared Image. Possible values are Linux and Windows. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "privacyStatementUri": {
                        "description": "The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "purchasePlan": {
                        "description": "A purchase_plan block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "The Purchase Plan Name for this Shared Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            },
                            "product": {
                              "description": "The Purchase Plan Product for this Gallery Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            },
                            "publisher": {
                              "description": "The Purchase Plan Publisher for this Gallery Image. Changing this forces a new resource to be created.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "releaseNoteUri": {
                        "description": "The URI containing the Release Notes associated with this Shared Image.",
                        "type": "string"
                      },
                      "resourceGroupName": {
                        "description": "The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "specialized": {
                        "description": "Specifies that the Operating System used inside this Image has not been Generalized (for example, sysprep on Windows has not been run). Changing this forces a new resource to be created.",
                        "type": "boolean"
                      },
                      "tags": {
                        "description": "A mapping of tags to assign to the Shared Image.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "trustedLaunchEnabled": {
                        "description": "Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.",
                        "type": "boolean"
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}