{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "firewallpolicies.network.azure.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "network.azure.upbound.io",
    "names": {
      "plural": "firewallpolicies",
      "singular": "firewallpolicy",
      "kind": "FirewallPolicy",
      "listKind": "FirewallPolicyList",
      "categories": [
        "crossplane",
        "managed",
        "azure"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "FirewallPolicy is the Schema for the FirewallPolicys API. Manages a Firewall Policy.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "FirewallPolicySpec defines the desired state of FirewallPolicy",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "properties": {
                      "autoLearnPrivateRangesEnabled": {
                        "description": "Whether enable auto learn private ip range.",
                        "type": "boolean"
                      },
                      "basePolicyId": {
                        "description": "The ID of the base Firewall Policy.",
                        "type": "string"
                      },
                      "dns": {
                        "description": "A dns block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "proxyEnabled": {
                              "description": "Whether to enable DNS proxy on Firewalls attached to this Firewall Policy? Defaults to false.",
                              "type": "boolean"
                            },
                            "servers": {
                              "description": "A list of custom DNS servers' IP addresses.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "explicitProxy": {
                        "description": "A explicit_proxy block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enablePacFile": {
                              "description": "Whether the pac file port and url need to be provided.",
                              "type": "boolean"
                            },
                            "enabled": {
                              "description": "Whether the explicit proxy is enabled for this Firewall Policy.",
                              "type": "boolean"
                            },
                            "httpPort": {
                              "description": "The port number for explicit http protocol.",
                              "type": "number"
                            },
                            "httpsPort": {
                              "description": "The port number for explicit proxy https protocol.",
                              "type": "number"
                            },
                            "pacFile": {
                              "description": "Specifies a SAS URL for PAC file.",
                              "type": "string"
                            },
                            "pacFilePort": {
                              "description": "Specifies a port number for firewall to serve PAC file.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "An identity block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identityIds": {
                              "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this Firewall Policy.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "description": "Specifies the type of Managed Service Identity that should be configured on this Firewall Policy. Only possible value is UserAssigned.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "insights": {
                        "description": "An insights block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "defaultLogAnalyticsWorkspaceId": {
                              "description": "The ID of the default Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to, when there is no location matches in the log_analytics_workspace.",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Whether the insights functionality is enabled for this Firewall Policy.",
                              "type": "boolean"
                            },
                            "logAnalyticsWorkspace": {
                              "description": "A list of log_analytics_workspace block as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "firewallLocation": {
                                    "description": "The location of the Firewalls, that when matches this Log Analytics Workspace will be used to consume their logs.",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "12-digit number (id) which identifies your signature.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "retentionInDays": {
                              "description": "The log retention period in days.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "intrusionDetection": {
                        "description": "A intrusion_detection block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "In which mode you want to run intrusion detection: Off, Alert or Deny.",
                              "type": "string"
                            },
                            "privateRanges": {
                              "description": "A list of Private IP address ranges to identify traffic direction. By default, only ranges defined by IANA RFC 1918 are considered private IP addresses.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "signatureOverrides": {
                              "description": "One or more signature_overrides blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "12-digit number (id) which identifies your signature.",
                                    "type": "string"
                                  },
                                  "state": {
                                    "description": "state can be any of Off, Alert or Deny.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "trafficBypass": {
                              "description": "One or more traffic_bypass blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "description": "The description for this bypass traffic setting.",
                                    "type": "string"
                                  },
                                  "destinationAddresses": {
                                    "description": "Specifies a list of destination IP addresses that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "destinationIpGroups": {
                                    "description": "Specifies a list of destination IP groups that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "destinationPorts": {
                                    "description": "Specifies a list of destination IP ports that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "name": {
                                    "description": "The name which should be used for this bypass traffic setting.",
                                    "type": "string"
                                  },
                                  "protocol": {
                                    "description": "The protocols any of ANY, TCP, ICMP, UDP that shall be bypassed by intrusion detection.",
                                    "type": "string"
                                  },
                                  "sourceAddresses": {
                                    "description": "Specifies a list of source addresses that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "sourceIpGroups": {
                                    "description": "Specifies a list of source IP groups that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.",
                        "type": "string"
                      },
                      "privateIpRanges": {
                        "description": "A list of private IP ranges to which traffic will not be SNAT.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "resourceGroupName": {
                        "description": "The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.",
                        "type": "string"
                      },
                      "resourceGroupNameRef": {
                        "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "resourceGroupNameSelector": {
                        "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "The SKU Tier of the Firewall Policy. Possible values are Standard, Premium and Basic. Changing this forces a new Firewall Policy to be created.",
                        "type": "string"
                      },
                      "sqlRedirectAllowed": {
                        "description": "Whether SQL Redirect traffic filtering is allowed. Enabling this flag requires no rule using ports between 11000-11999.",
                        "type": "boolean"
                      },
                      "tags": {
                        "description": "A mapping of tags which should be assigned to the Firewall Policy.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "threatIntelligenceAllowlist": {
                        "description": "A threat_intelligence_allowlist block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fqdns": {
                              "description": "A list of FQDNs that will be skipped for threat detection.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ipAddresses": {
                              "description": "A list of IP addresses or CIDR ranges that will be skipped for threat detection.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "threatIntelligenceMode": {
                        "description": "The operation mode for Threat Intelligence. Possible values are Alert, Deny and Off. Defaults to Alert.",
                        "type": "string"
                      },
                      "tlsCertificate": {
                        "description": "A tls_certificate block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyVaultSecretId": {
                              "description": "The ID of the Key Vault, where the secret or certificate is stored.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the certificate.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "autoLearnPrivateRangesEnabled": {
                        "description": "Whether enable auto learn private ip range.",
                        "type": "boolean"
                      },
                      "basePolicyId": {
                        "description": "The ID of the base Firewall Policy.",
                        "type": "string"
                      },
                      "dns": {
                        "description": "A dns block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "proxyEnabled": {
                              "description": "Whether to enable DNS proxy on Firewalls attached to this Firewall Policy? Defaults to false.",
                              "type": "boolean"
                            },
                            "servers": {
                              "description": "A list of custom DNS servers' IP addresses.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "explicitProxy": {
                        "description": "A explicit_proxy block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enablePacFile": {
                              "description": "Whether the pac file port and url need to be provided.",
                              "type": "boolean"
                            },
                            "enabled": {
                              "description": "Whether the explicit proxy is enabled for this Firewall Policy.",
                              "type": "boolean"
                            },
                            "httpPort": {
                              "description": "The port number for explicit http protocol.",
                              "type": "number"
                            },
                            "httpsPort": {
                              "description": "The port number for explicit proxy https protocol.",
                              "type": "number"
                            },
                            "pacFile": {
                              "description": "Specifies a SAS URL for PAC file.",
                              "type": "string"
                            },
                            "pacFilePort": {
                              "description": "Specifies a port number for firewall to serve PAC file.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "An identity block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identityIds": {
                              "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this Firewall Policy.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "description": "Specifies the type of Managed Service Identity that should be configured on this Firewall Policy. Only possible value is UserAssigned.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "insights": {
                        "description": "An insights block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "defaultLogAnalyticsWorkspaceId": {
                              "description": "The ID of the default Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to, when there is no location matches in the log_analytics_workspace.",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Whether the insights functionality is enabled for this Firewall Policy.",
                              "type": "boolean"
                            },
                            "logAnalyticsWorkspace": {
                              "description": "A list of log_analytics_workspace block as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "firewallLocation": {
                                    "description": "The location of the Firewalls, that when matches this Log Analytics Workspace will be used to consume their logs.",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "12-digit number (id) which identifies your signature.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "retentionInDays": {
                              "description": "The log retention period in days.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "intrusionDetection": {
                        "description": "A intrusion_detection block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "In which mode you want to run intrusion detection: Off, Alert or Deny.",
                              "type": "string"
                            },
                            "privateRanges": {
                              "description": "A list of Private IP address ranges to identify traffic direction. By default, only ranges defined by IANA RFC 1918 are considered private IP addresses.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "signatureOverrides": {
                              "description": "One or more signature_overrides blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "12-digit number (id) which identifies your signature.",
                                    "type": "string"
                                  },
                                  "state": {
                                    "description": "state can be any of Off, Alert or Deny.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "trafficBypass": {
                              "description": "One or more traffic_bypass blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "description": "The description for this bypass traffic setting.",
                                    "type": "string"
                                  },
                                  "destinationAddresses": {
                                    "description": "Specifies a list of destination IP addresses that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "destinationIpGroups": {
                                    "description": "Specifies a list of destination IP groups that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "destinationPorts": {
                                    "description": "Specifies a list of destination IP ports that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "name": {
                                    "description": "The name which should be used for this bypass traffic setting.",
                                    "type": "string"
                                  },
                                  "protocol": {
                                    "description": "The protocols any of ANY, TCP, ICMP, UDP that shall be bypassed by intrusion detection.",
                                    "type": "string"
                                  },
                                  "sourceAddresses": {
                                    "description": "Specifies a list of source addresses that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "sourceIpGroups": {
                                    "description": "Specifies a list of source IP groups that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.",
                        "type": "string"
                      },
                      "privateIpRanges": {
                        "description": "A list of private IP ranges to which traffic will not be SNAT.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "sku": {
                        "description": "The SKU Tier of the Firewall Policy. Possible values are Standard, Premium and Basic. Changing this forces a new Firewall Policy to be created.",
                        "type": "string"
                      },
                      "sqlRedirectAllowed": {
                        "description": "Whether SQL Redirect traffic filtering is allowed. Enabling this flag requires no rule using ports between 11000-11999.",
                        "type": "boolean"
                      },
                      "tags": {
                        "description": "A mapping of tags which should be assigned to the Firewall Policy.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "threatIntelligenceAllowlist": {
                        "description": "A threat_intelligence_allowlist block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fqdns": {
                              "description": "A list of FQDNs that will be skipped for threat detection.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ipAddresses": {
                              "description": "A list of IP addresses or CIDR ranges that will be skipped for threat detection.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "threatIntelligenceMode": {
                        "description": "The operation mode for Threat Intelligence. Possible values are Alert, Deny and Off. Defaults to Alert.",
                        "type": "string"
                      },
                      "tlsCertificate": {
                        "description": "A tls_certificate block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyVaultSecretId": {
                              "description": "The ID of the Key Vault, where the secret or certificate is stored.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the certificate.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
                    "message": "spec.forProvider.location is a required parameter"
                  }
                ]
              },
              "status": {
                "description": "FirewallPolicyStatus defines the observed state of FirewallPolicy.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "autoLearnPrivateRangesEnabled": {
                        "description": "Whether enable auto learn private ip range.",
                        "type": "boolean"
                      },
                      "basePolicyId": {
                        "description": "The ID of the base Firewall Policy.",
                        "type": "string"
                      },
                      "childPolicies": {
                        "description": "A list of reference to child Firewall Policies of this Firewall Policy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "dns": {
                        "description": "A dns block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "proxyEnabled": {
                              "description": "Whether to enable DNS proxy on Firewalls attached to this Firewall Policy? Defaults to false.",
                              "type": "boolean"
                            },
                            "servers": {
                              "description": "A list of custom DNS servers' IP addresses.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "explicitProxy": {
                        "description": "A explicit_proxy block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enablePacFile": {
                              "description": "Whether the pac file port and url need to be provided.",
                              "type": "boolean"
                            },
                            "enabled": {
                              "description": "Whether the explicit proxy is enabled for this Firewall Policy.",
                              "type": "boolean"
                            },
                            "httpPort": {
                              "description": "The port number for explicit http protocol.",
                              "type": "number"
                            },
                            "httpsPort": {
                              "description": "The port number for explicit proxy https protocol.",
                              "type": "number"
                            },
                            "pacFile": {
                              "description": "Specifies a SAS URL for PAC file.",
                              "type": "string"
                            },
                            "pacFilePort": {
                              "description": "Specifies a port number for firewall to serve PAC file.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "firewalls": {
                        "description": "A list of references to Azure Firewalls that this Firewall Policy is associated with.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "id": {
                        "description": "The ID of the Firewall Policy.",
                        "type": "string"
                      },
                      "identity": {
                        "description": "An identity block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identityIds": {
                              "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this Firewall Policy.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "description": "Specifies the type of Managed Service Identity that should be configured on this Firewall Policy. Only possible value is UserAssigned.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "insights": {
                        "description": "An insights block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "defaultLogAnalyticsWorkspaceId": {
                              "description": "The ID of the default Log Analytics Workspace that the Firewalls associated with this Firewall Policy will send their logs to, when there is no location matches in the log_analytics_workspace.",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Whether the insights functionality is enabled for this Firewall Policy.",
                              "type": "boolean"
                            },
                            "logAnalyticsWorkspace": {
                              "description": "A list of log_analytics_workspace block as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "firewallLocation": {
                                    "description": "The location of the Firewalls, that when matches this Log Analytics Workspace will be used to consume their logs.",
                                    "type": "string"
                                  },
                                  "id": {
                                    "description": "12-digit number (id) which identifies your signature.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "retentionInDays": {
                              "description": "The log retention period in days.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "intrusionDetection": {
                        "description": "A intrusion_detection block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "In which mode you want to run intrusion detection: Off, Alert or Deny.",
                              "type": "string"
                            },
                            "privateRanges": {
                              "description": "A list of Private IP address ranges to identify traffic direction. By default, only ranges defined by IANA RFC 1918 are considered private IP addresses.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "signatureOverrides": {
                              "description": "One or more signature_overrides blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "description": "12-digit number (id) which identifies your signature.",
                                    "type": "string"
                                  },
                                  "state": {
                                    "description": "state can be any of Off, Alert or Deny.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "trafficBypass": {
                              "description": "One or more traffic_bypass blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "description": {
                                    "description": "The description for this bypass traffic setting.",
                                    "type": "string"
                                  },
                                  "destinationAddresses": {
                                    "description": "Specifies a list of destination IP addresses that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "destinationIpGroups": {
                                    "description": "Specifies a list of destination IP groups that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "destinationPorts": {
                                    "description": "Specifies a list of destination IP ports that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "name": {
                                    "description": "The name which should be used for this bypass traffic setting.",
                                    "type": "string"
                                  },
                                  "protocol": {
                                    "description": "The protocols any of ANY, TCP, ICMP, UDP that shall be bypassed by intrusion detection.",
                                    "type": "string"
                                  },
                                  "sourceAddresses": {
                                    "description": "Specifies a list of source addresses that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "sourceIpGroups": {
                                    "description": "Specifies a list of source IP groups that shall be bypassed by intrusion detection.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "The Azure Region where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.",
                        "type": "string"
                      },
                      "privateIpRanges": {
                        "description": "A list of private IP ranges to which traffic will not be SNAT.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "resourceGroupName": {
                        "description": "The name of the Resource Group where the Firewall Policy should exist. Changing this forces a new Firewall Policy to be created.",
                        "type": "string"
                      },
                      "ruleCollectionGroups": {
                        "description": "A list of references to Firewall Policy Rule Collection Groups that belongs to this Firewall Policy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "sku": {
                        "description": "The SKU Tier of the Firewall Policy. Possible values are Standard, Premium and Basic. Changing this forces a new Firewall Policy to be created.",
                        "type": "string"
                      },
                      "sqlRedirectAllowed": {
                        "description": "Whether SQL Redirect traffic filtering is allowed. Enabling this flag requires no rule using ports between 11000-11999.",
                        "type": "boolean"
                      },
                      "tags": {
                        "description": "A mapping of tags which should be assigned to the Firewall Policy.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "threatIntelligenceAllowlist": {
                        "description": "A threat_intelligence_allowlist block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "fqdns": {
                              "description": "A list of FQDNs that will be skipped for threat detection.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ipAddresses": {
                              "description": "A list of IP addresses or CIDR ranges that will be skipped for threat detection.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "threatIntelligenceMode": {
                        "description": "The operation mode for Threat Intelligence. Possible values are Alert, Deny and Off. Defaults to Alert.",
                        "type": "string"
                      },
                      "tlsCertificate": {
                        "description": "A tls_certificate block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyVaultSecretId": {
                              "description": "The ID of the Key Vault, where the secret or certificate is stored.",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of the certificate.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}