{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "frontdoorfirewallpolicies.network.azure.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "network.azure.upbound.io",
    "names": {
      "plural": "frontdoorfirewallpolicies",
      "singular": "frontdoorfirewallpolicy",
      "kind": "FrontdoorFirewallPolicy",
      "listKind": "FrontdoorFirewallPolicyList",
      "categories": [
        "crossplane",
        "managed",
        "azure"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "FrontdoorFirewallPolicy is the Schema for the FrontdoorFirewallPolicys API. Manages an Azure Front Door (classic) Web Application Firewall Policy instance.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "FrontdoorFirewallPolicySpec defines the desired state of FrontdoorFirewallPolicy",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "properties": {
                      "customBlockResponseBody": {
                        "description": "If a custom_rule block's action type is block, this is the response body. The body must be specified in base64 encoding.",
                        "type": "string"
                      },
                      "customBlockResponseStatusCode": {
                        "description": "If a custom_rule block's action type is block, this is the response status code. Possible values are 200, 403, 405, 406, or 429.",
                        "type": "number"
                      },
                      "customRule": {
                        "description": "One or more custom_rule blocks as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "action": {
                              "description": "The action to perform when the rule is matched. Possible values are Allow, Block, Log, or Redirect.",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Is the rule is enabled or disabled? Defaults to true.",
                              "type": "boolean"
                            },
                            "matchCondition": {
                              "description": "One or more match_condition block defined below. Can support up to 10 match_condition blocks.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "matchValues": {
                                    "description": "Up to 600 possible values to match. Limit is in total across all match_condition blocks and match_values arguments. String value itself can be up to 256 characters long.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "matchVariable": {
                                    "description": "The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.",
                                    "type": "string"
                                  },
                                  "negationCondition": {
                                    "description": "Should the result of the condition be negated.",
                                    "type": "boolean"
                                  },
                                  "operator": {
                                    "description": "Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.",
                                    "type": "string"
                                  },
                                  "selector": {
                                    "description": "Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.",
                                    "type": "string"
                                  },
                                  "transforms": {
                                    "description": "Up to 5 transforms to apply. Possible values are Lowercase, RemoveNulls, Trim, Uppercase, URLDecode orURLEncode.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "name": {
                              "description": "Gets name of the resource that is unique within a policy. This name can be used to access the resource.",
                              "type": "string"
                            },
                            "priority": {
                              "description": "The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to 1.",
                              "type": "number"
                            },
                            "rateLimitDurationInMinutes": {
                              "description": "The rate limit duration in minutes. Defaults to 1.",
                              "type": "number"
                            },
                            "rateLimitThreshold": {
                              "description": "The rate limit threshold. Defaults to 10.",
                              "type": "number"
                            },
                            "type": {
                              "description": "The type of rule. Possible values are MatchRule or RateLimitRule.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "enabled": {
                        "description": "Is the policy a enabled state or disabled state. Defaults to true.",
                        "type": "boolean"
                      },
                      "managedRule": {
                        "description": "One or more managed_rule blocks as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "exclusion": {
                              "description": "One or more exclusion blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "matchVariable": {
                                    "description": "The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.",
                                    "type": "string"
                                  },
                                  "selector": {
                                    "description": "Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "override": {
                              "description": "One or more override blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "exclusion": {
                                    "description": "One or more exclusion blocks as defined below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "matchVariable": {
                                          "description": "The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.",
                                          "type": "string"
                                        },
                                        "selector": {
                                          "description": "Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "rule": {
                                    "description": "One or more rule blocks as defined below. If none are specified, all of the rules in the group will be disabled.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "action": {
                                          "description": "The action to be applied when the rule matches. Possible values are Allow, Block, Log, or Redirect.",
                                          "type": "string"
                                        },
                                        "enabled": {
                                          "description": "Is the managed rule override enabled or disabled. Defaults to false",
                                          "type": "boolean"
                                        },
                                        "exclusion": {
                                          "description": "One or more exclusion blocks as defined below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "matchVariable": {
                                                "description": "The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.",
                                                "type": "string"
                                              },
                                              "operator": {
                                                "description": "Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.",
                                                "type": "string"
                                              },
                                              "selector": {
                                                "description": "Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "ruleId": {
                                          "description": "Identifier for the managed rule.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "ruleGroupName": {
                                    "description": "The managed rule group to override.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "type": {
                              "description": "The name of the managed rule to use with this resource.",
                              "type": "string"
                            },
                            "version": {
                              "description": "The version on the managed rule to use with this resource.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "mode": {
                        "description": "The firewall policy mode. Possible values are Detection, Prevention and defaults to Prevention.",
                        "type": "string"
                      },
                      "redirectUrl": {
                        "description": "If action type is redirect, this field represents redirect URL for the client.",
                        "type": "string"
                      },
                      "resourceGroupName": {
                        "description": "The name of the resource group. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "resourceGroupNameRef": {
                        "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "resourceGroupNameSelector": {
                        "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "tags": {
                        "description": "A mapping of tags to assign to the Web Application Firewall Policy.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "customBlockResponseBody": {
                        "description": "If a custom_rule block's action type is block, this is the response body. The body must be specified in base64 encoding.",
                        "type": "string"
                      },
                      "customBlockResponseStatusCode": {
                        "description": "If a custom_rule block's action type is block, this is the response status code. Possible values are 200, 403, 405, 406, or 429.",
                        "type": "number"
                      },
                      "customRule": {
                        "description": "One or more custom_rule blocks as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "action": {
                              "description": "The action to perform when the rule is matched. Possible values are Allow, Block, Log, or Redirect.",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Is the rule is enabled or disabled? Defaults to true.",
                              "type": "boolean"
                            },
                            "matchCondition": {
                              "description": "One or more match_condition block defined below. Can support up to 10 match_condition blocks.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "matchValues": {
                                    "description": "Up to 600 possible values to match. Limit is in total across all match_condition blocks and match_values arguments. String value itself can be up to 256 characters long.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "matchVariable": {
                                    "description": "The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.",
                                    "type": "string"
                                  },
                                  "negationCondition": {
                                    "description": "Should the result of the condition be negated.",
                                    "type": "boolean"
                                  },
                                  "operator": {
                                    "description": "Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.",
                                    "type": "string"
                                  },
                                  "selector": {
                                    "description": "Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.",
                                    "type": "string"
                                  },
                                  "transforms": {
                                    "description": "Up to 5 transforms to apply. Possible values are Lowercase, RemoveNulls, Trim, Uppercase, URLDecode orURLEncode.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "name": {
                              "description": "Gets name of the resource that is unique within a policy. This name can be used to access the resource.",
                              "type": "string"
                            },
                            "priority": {
                              "description": "The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to 1.",
                              "type": "number"
                            },
                            "rateLimitDurationInMinutes": {
                              "description": "The rate limit duration in minutes. Defaults to 1.",
                              "type": "number"
                            },
                            "rateLimitThreshold": {
                              "description": "The rate limit threshold. Defaults to 10.",
                              "type": "number"
                            },
                            "type": {
                              "description": "The type of rule. Possible values are MatchRule or RateLimitRule.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "enabled": {
                        "description": "Is the policy a enabled state or disabled state. Defaults to true.",
                        "type": "boolean"
                      },
                      "managedRule": {
                        "description": "One or more managed_rule blocks as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "exclusion": {
                              "description": "One or more exclusion blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "matchVariable": {
                                    "description": "The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.",
                                    "type": "string"
                                  },
                                  "selector": {
                                    "description": "Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "override": {
                              "description": "One or more override blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "exclusion": {
                                    "description": "One or more exclusion blocks as defined below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "matchVariable": {
                                          "description": "The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.",
                                          "type": "string"
                                        },
                                        "selector": {
                                          "description": "Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "rule": {
                                    "description": "One or more rule blocks as defined below. If none are specified, all of the rules in the group will be disabled.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "action": {
                                          "description": "The action to be applied when the rule matches. Possible values are Allow, Block, Log, or Redirect.",
                                          "type": "string"
                                        },
                                        "enabled": {
                                          "description": "Is the managed rule override enabled or disabled. Defaults to false",
                                          "type": "boolean"
                                        },
                                        "exclusion": {
                                          "description": "One or more exclusion blocks as defined below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "matchVariable": {
                                                "description": "The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.",
                                                "type": "string"
                                              },
                                              "operator": {
                                                "description": "Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.",
                                                "type": "string"
                                              },
                                              "selector": {
                                                "description": "Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "ruleId": {
                                          "description": "Identifier for the managed rule.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "ruleGroupName": {
                                    "description": "The managed rule group to override.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "type": {
                              "description": "The name of the managed rule to use with this resource.",
                              "type": "string"
                            },
                            "version": {
                              "description": "The version on the managed rule to use with this resource.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "mode": {
                        "description": "The firewall policy mode. Possible values are Detection, Prevention and defaults to Prevention.",
                        "type": "string"
                      },
                      "redirectUrl": {
                        "description": "If action type is redirect, this field represents redirect URL for the client.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "A mapping of tags to assign to the Web Application Firewall Policy.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "FrontdoorFirewallPolicyStatus defines the observed state of FrontdoorFirewallPolicy.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "customBlockResponseBody": {
                        "description": "If a custom_rule block's action type is block, this is the response body. The body must be specified in base64 encoding.",
                        "type": "string"
                      },
                      "customBlockResponseStatusCode": {
                        "description": "If a custom_rule block's action type is block, this is the response status code. Possible values are 200, 403, 405, 406, or 429.",
                        "type": "number"
                      },
                      "customRule": {
                        "description": "One or more custom_rule blocks as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "action": {
                              "description": "The action to perform when the rule is matched. Possible values are Allow, Block, Log, or Redirect.",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Is the rule is enabled or disabled? Defaults to true.",
                              "type": "boolean"
                            },
                            "matchCondition": {
                              "description": "One or more match_condition block defined below. Can support up to 10 match_condition blocks.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "matchValues": {
                                    "description": "Up to 600 possible values to match. Limit is in total across all match_condition blocks and match_values arguments. String value itself can be up to 256 characters long.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "matchVariable": {
                                    "description": "The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.",
                                    "type": "string"
                                  },
                                  "negationCondition": {
                                    "description": "Should the result of the condition be negated.",
                                    "type": "boolean"
                                  },
                                  "operator": {
                                    "description": "Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.",
                                    "type": "string"
                                  },
                                  "selector": {
                                    "description": "Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.",
                                    "type": "string"
                                  },
                                  "transforms": {
                                    "description": "Up to 5 transforms to apply. Possible values are Lowercase, RemoveNulls, Trim, Uppercase, URLDecode orURLEncode.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "name": {
                              "description": "Gets name of the resource that is unique within a policy. This name can be used to access the resource.",
                              "type": "string"
                            },
                            "priority": {
                              "description": "The priority of the rule. Rules with a lower value will be evaluated before rules with a higher value. Defaults to 1.",
                              "type": "number"
                            },
                            "rateLimitDurationInMinutes": {
                              "description": "The rate limit duration in minutes. Defaults to 1.",
                              "type": "number"
                            },
                            "rateLimitThreshold": {
                              "description": "The rate limit threshold. Defaults to 10.",
                              "type": "number"
                            },
                            "type": {
                              "description": "The type of rule. Possible values are MatchRule or RateLimitRule.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "enabled": {
                        "description": "Is the policy a enabled state or disabled state. Defaults to true.",
                        "type": "boolean"
                      },
                      "frontendEndpointIds": {
                        "description": "The Frontend Endpoints associated with this Front Door Web Application Firewall policy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "id": {
                        "description": "The ID of the Front Door Firewall Policy.",
                        "type": "string"
                      },
                      "location": {
                        "description": "The Azure Region where this Front Door Firewall Policy exists.",
                        "type": "string"
                      },
                      "managedRule": {
                        "description": "One or more managed_rule blocks as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "exclusion": {
                              "description": "One or more exclusion blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "matchVariable": {
                                    "description": "The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.",
                                    "type": "string"
                                  },
                                  "selector": {
                                    "description": "Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "override": {
                              "description": "One or more override blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "exclusion": {
                                    "description": "One or more exclusion blocks as defined below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "matchVariable": {
                                          "description": "The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.",
                                          "type": "string"
                                        },
                                        "selector": {
                                          "description": "Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "rule": {
                                    "description": "One or more rule blocks as defined below. If none are specified, all of the rules in the group will be disabled.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "action": {
                                          "description": "The action to be applied when the rule matches. Possible values are Allow, Block, Log, or Redirect.",
                                          "type": "string"
                                        },
                                        "enabled": {
                                          "description": "Is the managed rule override enabled or disabled. Defaults to false",
                                          "type": "boolean"
                                        },
                                        "exclusion": {
                                          "description": "One or more exclusion blocks as defined below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "matchVariable": {
                                                "description": "The request variable to compare with. Possible values are Cookies, PostArgs, QueryString, RemoteAddr, RequestBody, RequestHeader, RequestMethod, RequestUri, or SocketAddr.",
                                                "type": "string"
                                              },
                                              "operator": {
                                                "description": "Comparison type to use for matching with the variable value. Possible values are Any, BeginsWith, Contains, EndsWith, Equal, GeoMatch, GreaterThan, GreaterThanOrEqual, IPMatch, LessThan, LessThanOrEqual or RegEx.",
                                                "type": "string"
                                              },
                                              "selector": {
                                                "description": "Match against a specific key if the match_variable is QueryString, PostArgs, RequestHeader or Cookies.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "ruleId": {
                                          "description": "Identifier for the managed rule.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "ruleGroupName": {
                                    "description": "The managed rule group to override.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "type": {
                              "description": "The name of the managed rule to use with this resource.",
                              "type": "string"
                            },
                            "version": {
                              "description": "The version on the managed rule to use with this resource.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "mode": {
                        "description": "The firewall policy mode. Possible values are Detection, Prevention and defaults to Prevention.",
                        "type": "string"
                      },
                      "redirectUrl": {
                        "description": "If action type is redirect, this field represents redirect URL for the client.",
                        "type": "string"
                      },
                      "resourceGroupName": {
                        "description": "The name of the resource group. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "A mapping of tags to assign to the Web Application Firewall Policy.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}