{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "vpnserverconfigurations.network.azure.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "network.azure.upbound.io",
    "names": {
      "plural": "vpnserverconfigurations",
      "singular": "vpnserverconfiguration",
      "kind": "VPNServerConfiguration",
      "listKind": "VPNServerConfigurationList",
      "categories": [
        "crossplane",
        "managed",
        "azure"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "VPNServerConfiguration is the Schema for the VPNServerConfigurations API. Manages a VPN Server Configuration.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "VPNServerConfigurationSpec defines the desired state of VPNServerConfiguration",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "properties": {
                      "azureActiveDirectoryAuthentication": {
                        "description": "A azure_active_directory_authentication block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "audience": {
                              "description": "The Audience which should be used for authentication.",
                              "type": "string"
                            },
                            "issuer": {
                              "description": "The Issuer which should be used for authentication.",
                              "type": "string"
                            },
                            "tenant": {
                              "description": "The Tenant which should be used for authentication.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "clientRevokedCertificate": {
                        "description": "One or more client_revoked_certificate blocks as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "A name used to uniquely identify this certificate.",
                              "type": "string"
                            },
                            "thumbprint": {
                              "description": "The Thumbprint of the Certificate.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "clientRootCertificate": {
                        "description": "One or more client_root_certificate blocks as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "A name used to uniquely identify this certificate.",
                              "type": "string"
                            },
                            "publicCertData": {
                              "description": "The Public Key Data associated with the Certificate.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ipsecPolicy": {
                        "description": "A ipsec_policy block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dhGroup": {
                              "description": "The DH Group, used in IKE Phase 1. Possible values include DHGroup1, DHGroup2, DHGroup14, DHGroup24, DHGroup2048, ECP256, ECP384 and None.",
                              "type": "string"
                            },
                            "ikeEncryption": {
                              "description": "The IKE encryption algorithm, used for IKE Phase 2. Possible values include AES128, AES192, AES256, DES, DES3, GCMAES128 and GCMAES256.",
                              "type": "string"
                            },
                            "ikeIntegrity": {
                              "description": "The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values include GCMAES128, GCMAES256, MD5, SHA1, SHA256 and SHA384.",
                              "type": "string"
                            },
                            "ipsecEncryption": {
                              "description": "The IPSec encryption algorithm, used for IKE phase 1. Possible values include AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256 and None.",
                              "type": "string"
                            },
                            "ipsecIntegrity": {
                              "description": "The IPSec integrity algorithm, used for IKE phase 1. Possible values include GCMAES128, GCMAES192, GCMAES256, MD5, SHA1 and SHA256.",
                              "type": "string"
                            },
                            "pfsGroup": {
                              "description": "The Pfs Group, used in IKE Phase 2. Possible values include ECP256, ECP384, PFS1, PFS2, PFS14, PFS24, PFS2048, PFSMM and None.",
                              "type": "string"
                            },
                            "saDataSizeKilobytes": {
                              "description": "The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel.",
                              "type": "number"
                            },
                            "saLifetimeSeconds": {
                              "description": "The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "radius": {
                        "description": "A radius block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "clientRootCertificate": {
                              "description": "One or more client_root_certificate blocks as defined above.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "A name used to uniquely identify this certificate.",
                                    "type": "string"
                                  },
                                  "thumbprint": {
                                    "description": "The Thumbprint of the Certificate.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "server": {
                              "description": "One or more server blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "secretSecretRef"
                                ],
                                "properties": {
                                  "address": {
                                    "description": "The Address of the Radius Server.",
                                    "type": "string"
                                  },
                                  "score": {
                                    "description": "The Score of the Radius Server determines the priority of the server. Ranges from 1 to 30.",
                                    "type": "number"
                                  },
                                  "secretSecretRef": {
                                    "description": "The Secret used to communicate with the Radius Server.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "name",
                                      "namespace"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "The key to select.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name of the secret.",
                                        "type": "string"
                                      },
                                      "namespace": {
                                        "description": "Namespace of the secret.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "serverRootCertificate": {
                              "description": "One or more server_root_certificate blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "A name used to uniquely identify this certificate.",
                                    "type": "string"
                                  },
                                  "publicCertData": {
                                    "description": "The Public Key Data associated with the Certificate.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "resourceGroupName": {
                        "description": "The Name of the Resource Group in which this VPN Server Configuration should be created. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "resourceGroupNameRef": {
                        "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "resourceGroupNameSelector": {
                        "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "tags": {
                        "description": "A mapping of tags to assign to the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "vpnAuthenticationTypes": {
                        "description": "A list of Authentication Types applicable for this VPN Server Configuration. Possible values are AAD (Azure Active Directory), Certificate and Radius.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "vpnProtocols": {
                        "description": "A list of VPN Protocols to use for this Server Configuration. Possible values are IkeV2 and OpenVPN.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "azureActiveDirectoryAuthentication": {
                        "description": "A azure_active_directory_authentication block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "audience": {
                              "description": "The Audience which should be used for authentication.",
                              "type": "string"
                            },
                            "issuer": {
                              "description": "The Issuer which should be used for authentication.",
                              "type": "string"
                            },
                            "tenant": {
                              "description": "The Tenant which should be used for authentication.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "clientRevokedCertificate": {
                        "description": "One or more client_revoked_certificate blocks as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "A name used to uniquely identify this certificate.",
                              "type": "string"
                            },
                            "thumbprint": {
                              "description": "The Thumbprint of the Certificate.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "clientRootCertificate": {
                        "description": "One or more client_root_certificate blocks as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "A name used to uniquely identify this certificate.",
                              "type": "string"
                            },
                            "publicCertData": {
                              "description": "The Public Key Data associated with the Certificate.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ipsecPolicy": {
                        "description": "A ipsec_policy block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dhGroup": {
                              "description": "The DH Group, used in IKE Phase 1. Possible values include DHGroup1, DHGroup2, DHGroup14, DHGroup24, DHGroup2048, ECP256, ECP384 and None.",
                              "type": "string"
                            },
                            "ikeEncryption": {
                              "description": "The IKE encryption algorithm, used for IKE Phase 2. Possible values include AES128, AES192, AES256, DES, DES3, GCMAES128 and GCMAES256.",
                              "type": "string"
                            },
                            "ikeIntegrity": {
                              "description": "The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values include GCMAES128, GCMAES256, MD5, SHA1, SHA256 and SHA384.",
                              "type": "string"
                            },
                            "ipsecEncryption": {
                              "description": "The IPSec encryption algorithm, used for IKE phase 1. Possible values include AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256 and None.",
                              "type": "string"
                            },
                            "ipsecIntegrity": {
                              "description": "The IPSec integrity algorithm, used for IKE phase 1. Possible values include GCMAES128, GCMAES192, GCMAES256, MD5, SHA1 and SHA256.",
                              "type": "string"
                            },
                            "pfsGroup": {
                              "description": "The Pfs Group, used in IKE Phase 2. Possible values include ECP256, ECP384, PFS1, PFS2, PFS14, PFS24, PFS2048, PFSMM and None.",
                              "type": "string"
                            },
                            "saDataSizeKilobytes": {
                              "description": "The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel.",
                              "type": "number"
                            },
                            "saLifetimeSeconds": {
                              "description": "The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "radius": {
                        "description": "A radius block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "clientRootCertificate": {
                              "description": "One or more client_root_certificate blocks as defined above.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "A name used to uniquely identify this certificate.",
                                    "type": "string"
                                  },
                                  "thumbprint": {
                                    "description": "The Thumbprint of the Certificate.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "server": {
                              "description": "One or more server blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "description": "The Address of the Radius Server.",
                                    "type": "string"
                                  },
                                  "score": {
                                    "description": "The Score of the Radius Server determines the priority of the server. Ranges from 1 to 30.",
                                    "type": "number"
                                  }
                                }
                              }
                            },
                            "serverRootCertificate": {
                              "description": "One or more server_root_certificate blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "A name used to uniquely identify this certificate.",
                                    "type": "string"
                                  },
                                  "publicCertData": {
                                    "description": "The Public Key Data associated with the Certificate.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "tags": {
                        "description": "A mapping of tags to assign to the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "vpnAuthenticationTypes": {
                        "description": "A list of Authentication Types applicable for this VPN Server Configuration. Possible values are AAD (Azure Active Directory), Certificate and Radius.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "vpnProtocols": {
                        "description": "A list of VPN Protocols to use for this Server Configuration. Possible values are IkeV2 and OpenVPN.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
                    "message": "spec.forProvider.location is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.vpnAuthenticationTypes) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.vpnAuthenticationTypes))",
                    "message": "spec.forProvider.vpnAuthenticationTypes is a required parameter"
                  }
                ]
              },
              "status": {
                "description": "VPNServerConfigurationStatus defines the observed state of VPNServerConfiguration.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "azureActiveDirectoryAuthentication": {
                        "description": "A azure_active_directory_authentication block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "audience": {
                              "description": "The Audience which should be used for authentication.",
                              "type": "string"
                            },
                            "issuer": {
                              "description": "The Issuer which should be used for authentication.",
                              "type": "string"
                            },
                            "tenant": {
                              "description": "The Tenant which should be used for authentication.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "clientRevokedCertificate": {
                        "description": "One or more client_revoked_certificate blocks as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "A name used to uniquely identify this certificate.",
                              "type": "string"
                            },
                            "thumbprint": {
                              "description": "The Thumbprint of the Certificate.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "clientRootCertificate": {
                        "description": "One or more client_root_certificate blocks as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "A name used to uniquely identify this certificate.",
                              "type": "string"
                            },
                            "publicCertData": {
                              "description": "The Public Key Data associated with the Certificate.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "id": {
                        "description": "The ID of the VPN Server Configuration.",
                        "type": "string"
                      },
                      "ipsecPolicy": {
                        "description": "A ipsec_policy block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dhGroup": {
                              "description": "The DH Group, used in IKE Phase 1. Possible values include DHGroup1, DHGroup2, DHGroup14, DHGroup24, DHGroup2048, ECP256, ECP384 and None.",
                              "type": "string"
                            },
                            "ikeEncryption": {
                              "description": "The IKE encryption algorithm, used for IKE Phase 2. Possible values include AES128, AES192, AES256, DES, DES3, GCMAES128 and GCMAES256.",
                              "type": "string"
                            },
                            "ikeIntegrity": {
                              "description": "The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values include GCMAES128, GCMAES256, MD5, SHA1, SHA256 and SHA384.",
                              "type": "string"
                            },
                            "ipsecEncryption": {
                              "description": "The IPSec encryption algorithm, used for IKE phase 1. Possible values include AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256 and None.",
                              "type": "string"
                            },
                            "ipsecIntegrity": {
                              "description": "The IPSec integrity algorithm, used for IKE phase 1. Possible values include GCMAES128, GCMAES192, GCMAES256, MD5, SHA1 and SHA256.",
                              "type": "string"
                            },
                            "pfsGroup": {
                              "description": "The Pfs Group, used in IKE Phase 2. Possible values include ECP256, ECP384, PFS1, PFS2, PFS14, PFS24, PFS2048, PFSMM and None.",
                              "type": "string"
                            },
                            "saDataSizeKilobytes": {
                              "description": "The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel.",
                              "type": "number"
                            },
                            "saLifetimeSeconds": {
                              "description": "The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "radius": {
                        "description": "A radius block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "clientRootCertificate": {
                              "description": "One or more client_root_certificate blocks as defined above.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "A name used to uniquely identify this certificate.",
                                    "type": "string"
                                  },
                                  "thumbprint": {
                                    "description": "The Thumbprint of the Certificate.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "server": {
                              "description": "One or more server blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "address": {
                                    "description": "The Address of the Radius Server.",
                                    "type": "string"
                                  },
                                  "score": {
                                    "description": "The Score of the Radius Server determines the priority of the server. Ranges from 1 to 30.",
                                    "type": "number"
                                  }
                                }
                              }
                            },
                            "serverRootCertificate": {
                              "description": "One or more server_root_certificate blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "A name used to uniquely identify this certificate.",
                                    "type": "string"
                                  },
                                  "publicCertData": {
                                    "description": "The Public Key Data associated with the Certificate.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "resourceGroupName": {
                        "description": "The Name of the Resource Group in which this VPN Server Configuration should be created. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "A mapping of tags to assign to the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "vpnAuthenticationTypes": {
                        "description": "A list of Authentication Types applicable for this VPN Server Configuration. Possible values are AAD (Azure Active Directory), Certificate and Radius.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "vpnProtocols": {
                        "description": "A list of VPN Protocols to use for this Server Configuration. Possible values are IkeV2 and OpenVPN.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}