{
  "$schema": "http://json-schema.org/schema#",
  "description": "ClusterGateway is an extension model for ManagedCluster which implements\nthe Tier-II cluster model based on OCM's original abstraction of\nManagedCluster. The Tier-II cluster model should be highly protected under\nRBAC policies and only the admin shall have the access to view the content\nof cluster credentials.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "gateway.open-cluster-management.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "ClusterGateway"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "ClusterGatewaySpec defines the desired state of ClusterGateway",
      "type": "object",
      "required": [
        "access"
      ],
      "properties": {
        "access": {
          "type": "object",
          "required": [
            "endpoint"
          ],
          "properties": {
            "credential": {
              "description": "Credential holds authentication configuration for\naccessing the target cluster.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "type": {
                  "description": "Type is the union discriminator for credential contents.",
                  "type": "string"
                }
              }
            },
            "endpoint": {
              "description": "Endpoint is a qualified URL string for accessing the cluster.\ne.g. https://example.com:6443/",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "const": {
                  "description": "Const prescribes fixed endpoint for requesting target clusters.",
                  "type": "object",
                  "required": [
                    "address"
                  ],
                  "properties": {
                    "address": {
                      "description": "Address is a qualified hostname for accessing the local kube-apiserver.",
                      "type": "string"
                    },
                    "caBundle": {
                      "description": "CABundle is used for verifying cluster's serving CA certificate.",
                      "type": "string",
                      "format": "byte"
                    },
                    "insecure": {
                      "description": "Insecure indicates the cluster should be access'd w/o verifying\nCA certificate at client-side.",
                      "type": "boolean"
                    },
                    "proxy-url": {
                      "description": "ProxyURL indicates the proxy url of the server",
                      "type": "string"
                    }
                  }
                },
                "type": {
                  "description": "Type is the union discriminator for prescribing apiserver endpoint.",
                  "type": "string"
                }
              }
            }
          }
        },
        "proxyConfig": {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "apiVersion": {
              "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
              "type": "string"
            },
            "kind": {
              "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "spec": {
              "type": "object",
              "required": [
                "clientIdentityExchanger"
              ],
              "properties": {
                "clientIdentityExchanger": {
                  "type": "object",
                  "properties": {
                    "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "source",
                          "type"
                        ],
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "source": {
                            "type": "object",
                            "properties": {
                              "cluster": {
                                "type": "string"
                              },
                              "clusterPattern": {
                                "type": "string"
                              },
                              "group": {
                                "type": "string"
                              },
                              "groupPattern": {
                                "type": "string"
                              },
                              "uid": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              },
                              "userPattern": {
                                "type": "string"
                              }
                            }
                          },
                          "target": {
                            "type": "object",
                            "properties": {
                              "groups": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "uid": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            }
                          },
                          "type": {
                            "type": "string"
                          },
                          "url": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}