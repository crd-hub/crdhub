{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "spotinstancerequests.ec2.aws.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "ec2.aws.upbound.io",
    "names": {
      "plural": "spotinstancerequests",
      "singular": "spotinstancerequest",
      "kind": "SpotInstanceRequest",
      "listKind": "SpotInstanceRequestList",
      "categories": [
        "crossplane",
        "managed",
        "aws"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "SpotInstanceRequest is the Schema for the SpotInstanceRequests API. Provides a Spot Instance Request resource.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "SpotInstanceRequestSpec defines the desired state of SpotInstanceRequest",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "required": [
                      "region"
                    ],
                    "properties": {
                      "ami": {
                        "type": "string"
                      },
                      "associatePublicIpAddress": {
                        "type": "boolean"
                      },
                      "availabilityZone": {
                        "type": "string"
                      },
                      "blockDurationMinutes": {
                        "description": "The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360). The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates. Note that you can't specify an Availability Zone group or a launch group if you specify a duration.",
                        "type": "number"
                      },
                      "capacityReservationSpecification": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "capacityReservationPreference": {
                              "type": "string"
                            },
                            "capacityReservationTarget": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "capacityReservationId": {
                                    "description": "The Spot Instance Request ID.",
                                    "type": "string"
                                  },
                                  "capacityReservationResourceGroupArn": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "cpuCoreCount": {
                        "type": "number"
                      },
                      "cpuOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "amdSevSnp": {
                              "type": "string"
                            },
                            "coreCount": {
                              "type": "number"
                            },
                            "threadsPerCore": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      "cpuThreadsPerCore": {
                        "type": "number"
                      },
                      "creditSpecification": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cpuCredits": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "disableApiStop": {
                        "type": "boolean"
                      },
                      "disableApiTermination": {
                        "type": "boolean"
                      },
                      "ebsBlockDevice": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "type": "boolean"
                            },
                            "deviceName": {
                              "type": "string"
                            },
                            "encrypted": {
                              "type": "boolean"
                            },
                            "iops": {
                              "type": "number"
                            },
                            "kmsKeyId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "snapshotId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "tags": {
                              "description": "Key-value map of resource tags.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "throughput": {
                              "type": "number"
                            },
                            "volumeSize": {
                              "type": "number"
                            },
                            "volumeType": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ebsOptimized": {
                        "type": "boolean"
                      },
                      "enclaveOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "ephemeralBlockDevice": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deviceName": {
                              "type": "string"
                            },
                            "noDevice": {
                              "type": "boolean"
                            },
                            "virtualName": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "getPasswordData": {
                        "type": "boolean"
                      },
                      "hibernation": {
                        "type": "boolean"
                      },
                      "hostId": {
                        "description": "The Spot Instance Request ID.",
                        "type": "string"
                      },
                      "hostResourceGroupArn": {
                        "type": "string"
                      },
                      "iamInstanceProfile": {
                        "type": "string"
                      },
                      "instanceInitiatedShutdownBehavior": {
                        "type": "string"
                      },
                      "instanceInterruptionBehavior": {
                        "description": "Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.",
                        "type": "string"
                      },
                      "instanceType": {
                        "type": "string"
                      },
                      "ipv6AddressCount": {
                        "type": "number"
                      },
                      "ipv6Addresses": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "keyName": {
                        "type": "string"
                      },
                      "launchGroup": {
                        "description": "A launch group is a group of spot instances that launch together and terminate together. If left empty instances are launched and terminated individually.",
                        "type": "string"
                      },
                      "launchTemplate": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "maintenanceOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "autoRecovery": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "metadataOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "httpEndpoint": {
                              "type": "string"
                            },
                            "httpPutResponseHopLimit": {
                              "type": "number"
                            },
                            "httpTokens": {
                              "type": "string"
                            },
                            "instanceMetadataTags": {
                              "description": "Key-value map of resource tags.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "monitoring": {
                        "type": "boolean"
                      },
                      "networkInterface": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "type": "boolean"
                            },
                            "deviceIndex": {
                              "type": "number"
                            },
                            "networkCardIndex": {
                              "type": "number"
                            },
                            "networkInterfaceId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "placementGroup": {
                        "type": "string"
                      },
                      "placementPartitionNumber": {
                        "type": "number"
                      },
                      "privateDnsNameOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enableResourceNameDnsARecord": {
                              "type": "boolean"
                            },
                            "enableResourceNameDnsAaaaRecord": {
                              "type": "boolean"
                            },
                            "hostnameType": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "privateIp": {
                        "description": "The private IP address assigned to the instance",
                        "type": "string"
                      },
                      "region": {
                        "description": "Region is the region you'd like your resource to be created in.",
                        "type": "string"
                      },
                      "rootBlockDevice": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "type": "boolean"
                            },
                            "encrypted": {
                              "type": "boolean"
                            },
                            "iops": {
                              "type": "number"
                            },
                            "kmsKeyId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "tags": {
                              "description": "Key-value map of resource tags.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "throughput": {
                              "type": "number"
                            },
                            "volumeSize": {
                              "type": "number"
                            },
                            "volumeType": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "secondaryPrivateIps": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "securityGroups": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "sourceDestCheck": {
                        "type": "boolean"
                      },
                      "spotPrice": {
                        "description": "The maximum price to request on the spot market.",
                        "type": "string"
                      },
                      "spotType": {
                        "description": "If set to one-time, after the instance is terminated, the spot request will be closed.",
                        "type": "string"
                      },
                      "subnetId": {
                        "description": "The Spot Instance Request ID.",
                        "type": "string"
                      },
                      "subnetIdRef": {
                        "description": "Reference to a Subnet in ec2 to populate subnetId.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "subnetIdSelector": {
                        "description": "Selector for a Subnet in ec2 to populate subnetId.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "tags": {
                        "description": "Key-value map of resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "tenancy": {
                        "type": "string"
                      },
                      "userData": {
                        "type": "string"
                      },
                      "userDataBase64": {
                        "type": "string"
                      },
                      "userDataReplaceOnChange": {
                        "type": "boolean"
                      },
                      "validFrom": {
                        "description": "The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.",
                        "type": "string"
                      },
                      "validUntil": {
                        "description": "The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.",
                        "type": "string"
                      },
                      "volumeTags": {
                        "description": "Key-value map of resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "vpcSecurityGroupIdRefs": {
                        "description": "References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.",
                        "type": "array",
                        "items": {
                          "description": "A Reference to a named object.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      },
                      "vpcSecurityGroupIdSelector": {
                        "description": "Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "vpcSecurityGroupIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "waitForFulfillment": {
                        "type": "boolean"
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "ami": {
                        "type": "string"
                      },
                      "associatePublicIpAddress": {
                        "type": "boolean"
                      },
                      "availabilityZone": {
                        "type": "string"
                      },
                      "blockDurationMinutes": {
                        "description": "The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360). The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates. Note that you can't specify an Availability Zone group or a launch group if you specify a duration.",
                        "type": "number"
                      },
                      "capacityReservationSpecification": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "capacityReservationPreference": {
                              "type": "string"
                            },
                            "capacityReservationTarget": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "capacityReservationId": {
                                    "description": "The Spot Instance Request ID.",
                                    "type": "string"
                                  },
                                  "capacityReservationResourceGroupArn": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "cpuCoreCount": {
                        "type": "number"
                      },
                      "cpuOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "amdSevSnp": {
                              "type": "string"
                            },
                            "coreCount": {
                              "type": "number"
                            },
                            "threadsPerCore": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      "cpuThreadsPerCore": {
                        "type": "number"
                      },
                      "creditSpecification": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cpuCredits": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "disableApiStop": {
                        "type": "boolean"
                      },
                      "disableApiTermination": {
                        "type": "boolean"
                      },
                      "ebsBlockDevice": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "type": "boolean"
                            },
                            "deviceName": {
                              "type": "string"
                            },
                            "encrypted": {
                              "type": "boolean"
                            },
                            "iops": {
                              "type": "number"
                            },
                            "kmsKeyId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "snapshotId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "tags": {
                              "description": "Key-value map of resource tags.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "throughput": {
                              "type": "number"
                            },
                            "volumeSize": {
                              "type": "number"
                            },
                            "volumeType": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ebsOptimized": {
                        "type": "boolean"
                      },
                      "enclaveOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "ephemeralBlockDevice": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deviceName": {
                              "type": "string"
                            },
                            "noDevice": {
                              "type": "boolean"
                            },
                            "virtualName": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "getPasswordData": {
                        "type": "boolean"
                      },
                      "hibernation": {
                        "type": "boolean"
                      },
                      "hostId": {
                        "description": "The Spot Instance Request ID.",
                        "type": "string"
                      },
                      "hostResourceGroupArn": {
                        "type": "string"
                      },
                      "iamInstanceProfile": {
                        "type": "string"
                      },
                      "instanceInitiatedShutdownBehavior": {
                        "type": "string"
                      },
                      "instanceInterruptionBehavior": {
                        "description": "Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.",
                        "type": "string"
                      },
                      "instanceType": {
                        "type": "string"
                      },
                      "ipv6AddressCount": {
                        "type": "number"
                      },
                      "ipv6Addresses": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "keyName": {
                        "type": "string"
                      },
                      "launchGroup": {
                        "description": "A launch group is a group of spot instances that launch together and terminate together. If left empty instances are launched and terminated individually.",
                        "type": "string"
                      },
                      "launchTemplate": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "maintenanceOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "autoRecovery": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "metadataOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "httpEndpoint": {
                              "type": "string"
                            },
                            "httpPutResponseHopLimit": {
                              "type": "number"
                            },
                            "httpTokens": {
                              "type": "string"
                            },
                            "instanceMetadataTags": {
                              "description": "Key-value map of resource tags.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "monitoring": {
                        "type": "boolean"
                      },
                      "networkInterface": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "type": "boolean"
                            },
                            "deviceIndex": {
                              "type": "number"
                            },
                            "networkCardIndex": {
                              "type": "number"
                            },
                            "networkInterfaceId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "placementGroup": {
                        "type": "string"
                      },
                      "placementPartitionNumber": {
                        "type": "number"
                      },
                      "privateDnsNameOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enableResourceNameDnsARecord": {
                              "type": "boolean"
                            },
                            "enableResourceNameDnsAaaaRecord": {
                              "type": "boolean"
                            },
                            "hostnameType": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "privateIp": {
                        "description": "The private IP address assigned to the instance",
                        "type": "string"
                      },
                      "rootBlockDevice": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "type": "boolean"
                            },
                            "encrypted": {
                              "type": "boolean"
                            },
                            "iops": {
                              "type": "number"
                            },
                            "kmsKeyId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "tags": {
                              "description": "Key-value map of resource tags.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "throughput": {
                              "type": "number"
                            },
                            "volumeSize": {
                              "type": "number"
                            },
                            "volumeType": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "secondaryPrivateIps": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "securityGroups": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "sourceDestCheck": {
                        "type": "boolean"
                      },
                      "spotPrice": {
                        "description": "The maximum price to request on the spot market.",
                        "type": "string"
                      },
                      "spotType": {
                        "description": "If set to one-time, after the instance is terminated, the spot request will be closed.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Key-value map of resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "tenancy": {
                        "type": "string"
                      },
                      "userData": {
                        "type": "string"
                      },
                      "userDataBase64": {
                        "type": "string"
                      },
                      "userDataReplaceOnChange": {
                        "type": "boolean"
                      },
                      "validFrom": {
                        "description": "The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.",
                        "type": "string"
                      },
                      "validUntil": {
                        "description": "The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.",
                        "type": "string"
                      },
                      "volumeTags": {
                        "description": "Key-value map of resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "waitForFulfillment": {
                        "type": "boolean"
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "SpotInstanceRequestStatus defines the observed state of SpotInstanceRequest.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "ami": {
                        "type": "string"
                      },
                      "arn": {
                        "type": "string"
                      },
                      "associatePublicIpAddress": {
                        "type": "boolean"
                      },
                      "availabilityZone": {
                        "type": "string"
                      },
                      "blockDurationMinutes": {
                        "description": "The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360). The duration period starts as soon as your Spot instance receives its instance ID. At the end of the duration period, Amazon EC2 marks the Spot instance for termination and provides a Spot instance termination notice, which gives the instance a two-minute warning before it terminates. Note that you can't specify an Availability Zone group or a launch group if you specify a duration.",
                        "type": "number"
                      },
                      "capacityReservationSpecification": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "capacityReservationPreference": {
                              "type": "string"
                            },
                            "capacityReservationTarget": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "capacityReservationId": {
                                    "description": "The Spot Instance Request ID.",
                                    "type": "string"
                                  },
                                  "capacityReservationResourceGroupArn": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "cpuCoreCount": {
                        "type": "number"
                      },
                      "cpuOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "amdSevSnp": {
                              "type": "string"
                            },
                            "coreCount": {
                              "type": "number"
                            },
                            "threadsPerCore": {
                              "type": "number"
                            }
                          }
                        }
                      },
                      "cpuThreadsPerCore": {
                        "type": "number"
                      },
                      "creditSpecification": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cpuCredits": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "disableApiStop": {
                        "type": "boolean"
                      },
                      "disableApiTermination": {
                        "type": "boolean"
                      },
                      "ebsBlockDevice": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "type": "boolean"
                            },
                            "deviceName": {
                              "type": "string"
                            },
                            "encrypted": {
                              "type": "boolean"
                            },
                            "iops": {
                              "type": "number"
                            },
                            "kmsKeyId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "snapshotId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "tags": {
                              "description": "Key-value map of resource tags.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "throughput": {
                              "type": "number"
                            },
                            "volumeId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "volumeSize": {
                              "type": "number"
                            },
                            "volumeType": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ebsOptimized": {
                        "type": "boolean"
                      },
                      "enclaveOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "ephemeralBlockDevice": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deviceName": {
                              "type": "string"
                            },
                            "noDevice": {
                              "type": "boolean"
                            },
                            "virtualName": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "getPasswordData": {
                        "type": "boolean"
                      },
                      "hibernation": {
                        "type": "boolean"
                      },
                      "hostId": {
                        "description": "The Spot Instance Request ID.",
                        "type": "string"
                      },
                      "hostResourceGroupArn": {
                        "type": "string"
                      },
                      "iamInstanceProfile": {
                        "type": "string"
                      },
                      "id": {
                        "description": "The Spot Instance Request ID.",
                        "type": "string"
                      },
                      "instanceInitiatedShutdownBehavior": {
                        "type": "string"
                      },
                      "instanceInterruptionBehavior": {
                        "description": "Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.",
                        "type": "string"
                      },
                      "instanceState": {
                        "type": "string"
                      },
                      "instanceType": {
                        "type": "string"
                      },
                      "ipv6AddressCount": {
                        "type": "number"
                      },
                      "ipv6Addresses": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "keyName": {
                        "type": "string"
                      },
                      "launchGroup": {
                        "description": "A launch group is a group of spot instances that launch together and terminate together. If left empty instances are launched and terminated individually.",
                        "type": "string"
                      },
                      "launchTemplate": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "maintenanceOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "autoRecovery": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "metadataOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "httpEndpoint": {
                              "type": "string"
                            },
                            "httpPutResponseHopLimit": {
                              "type": "number"
                            },
                            "httpTokens": {
                              "type": "string"
                            },
                            "instanceMetadataTags": {
                              "description": "Key-value map of resource tags.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "monitoring": {
                        "type": "boolean"
                      },
                      "networkInterface": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "type": "boolean"
                            },
                            "deviceIndex": {
                              "type": "number"
                            },
                            "networkCardIndex": {
                              "type": "number"
                            },
                            "networkInterfaceId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "outpostArn": {
                        "type": "string"
                      },
                      "passwordData": {
                        "type": "string"
                      },
                      "placementGroup": {
                        "type": "string"
                      },
                      "placementPartitionNumber": {
                        "type": "number"
                      },
                      "primaryNetworkInterfaceId": {
                        "description": "The Spot Instance Request ID.",
                        "type": "string"
                      },
                      "privateDns": {
                        "description": "The private DNS name assigned to the instance. Can only be used inside the Amazon EC2, and only available if you've enabled DNS hostnames for your VPC",
                        "type": "string"
                      },
                      "privateDnsNameOptions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enableResourceNameDnsARecord": {
                              "type": "boolean"
                            },
                            "enableResourceNameDnsAaaaRecord": {
                              "type": "boolean"
                            },
                            "hostnameType": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "privateIp": {
                        "description": "The private IP address assigned to the instance",
                        "type": "string"
                      },
                      "publicDns": {
                        "description": "The public DNS name assigned to the instance. For EC2-VPC, this is only available if you've enabled DNS hostnames for your VPC",
                        "type": "string"
                      },
                      "publicIp": {
                        "description": "The public IP address assigned to the instance, if applicable.",
                        "type": "string"
                      },
                      "rootBlockDevice": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "type": "boolean"
                            },
                            "deviceName": {
                              "type": "string"
                            },
                            "encrypted": {
                              "type": "boolean"
                            },
                            "iops": {
                              "type": "number"
                            },
                            "kmsKeyId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "tags": {
                              "description": "Key-value map of resource tags.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "throughput": {
                              "type": "number"
                            },
                            "volumeId": {
                              "description": "The Spot Instance Request ID.",
                              "type": "string"
                            },
                            "volumeSize": {
                              "type": "number"
                            },
                            "volumeType": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "secondaryPrivateIps": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "securityGroups": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "sourceDestCheck": {
                        "type": "boolean"
                      },
                      "spotBidStatus": {
                        "description": "The current bid status of the Spot Instance Request.",
                        "type": "string"
                      },
                      "spotInstanceId": {
                        "description": "The Instance ID (if any) that is currently fulfilling the Spot Instance request.",
                        "type": "string"
                      },
                      "spotPrice": {
                        "description": "The maximum price to request on the spot market.",
                        "type": "string"
                      },
                      "spotRequestState": {
                        "description": "The current request state of the Spot Instance Request.",
                        "type": "string"
                      },
                      "spotType": {
                        "description": "If set to one-time, after the instance is terminated, the spot request will be closed.",
                        "type": "string"
                      },
                      "subnetId": {
                        "description": "The Spot Instance Request ID.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Key-value map of resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "tagsAll": {
                        "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "tenancy": {
                        "type": "string"
                      },
                      "userData": {
                        "type": "string"
                      },
                      "userDataBase64": {
                        "type": "string"
                      },
                      "userDataReplaceOnChange": {
                        "type": "boolean"
                      },
                      "validFrom": {
                        "description": "The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.",
                        "type": "string"
                      },
                      "validUntil": {
                        "description": "The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.",
                        "type": "string"
                      },
                      "volumeTags": {
                        "description": "Key-value map of resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "vpcSecurityGroupIds": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "waitForFulfillment": {
                        "type": "boolean"
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "type"
                    ],
                    "x-kubernetes-list-type": "map"
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}