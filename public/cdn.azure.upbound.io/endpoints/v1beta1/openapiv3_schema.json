{
  "$schema": "http://json-schema.org/schema#",
  "description": "Endpoint is the Schema for the Endpoints API. Manages a CDN Endpoint.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "cdn.azure.upbound.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "Endpoint"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "EndpointSpec defines the desired state of Endpoint",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "contentTypesToCompress": {
              "description": "An array of strings that indicates a content types on which compression will be applied. The value for the elements should be MIME types.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deliveryRule": {
              "description": "Rules for the rules engine. An endpoint can contain up until 4 of those rules that consist of conditions and actions. A delivery_rule blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cacheExpirationAction": {
                    "description": "A cache_expiration_action block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "behavior": {
                          "description": "The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Duration of the cache. Only allowed when behavior is set to Override or SetIfMissing. Format: [d.]hh:mm:ss",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "cacheKeyQueryStringAction": {
                    "description": "A cache_key_query_string_action block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "behavior": {
                          "description": "The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.",
                          "type": "string"
                        },
                        "parameters": {
                          "description": "Comma separated list of parameter values.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "cookiesCondition": {
                    "description": "A cookies_condition block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "selector": {
                          "description": "Header name.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "deviceCondition": {
                    "description": "A device_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "httpVersionCondition": {
                    "description": "A http_version_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "modifyRequestHeaderAction": {
                    "description": "A modify_request_header_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to be executed on a header value. Valid values are Append, Delete and Overwrite.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the header. Only needed when action is set to Append or overwrite.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "modifyResponseHeaderAction": {
                    "description": "A modify_response_header_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to be executed on a header value. Valid values are Append, Delete and Overwrite.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the header. Only needed when action is set to Append or overwrite.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "name": {
                    "description": "The Name which should be used for this Delivery Rule.",
                    "type": "string"
                  },
                  "order": {
                    "description": "The order used for this rule. The order values should be sequential and begin at 1.",
                    "type": "number"
                  },
                  "postArgCondition": {
                    "description": "A post_arg_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "selector": {
                          "description": "Header name.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "queryStringCondition": {
                    "description": "A query_string_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "remoteAddressCondition": {
                    "description": "A remote_address_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "requestBodyCondition": {
                    "description": "A request_body_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "requestHeaderCondition": {
                    "description": "A request_header_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "selector": {
                          "description": "Header name.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "requestMethodCondition": {
                    "description": "A request_method_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "requestSchemeCondition": {
                    "description": "A request_scheme_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "requestUriCondition": {
                    "description": "A request_uri_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "urlFileExtensionCondition": {
                    "description": "A url_file_extension_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "urlFileNameCondition": {
                    "description": "A url_file_name_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "urlPathCondition": {
                    "description": "A url_path_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "urlRedirectAction": {
                    "description": "A url_redirect_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fragment": {
                          "description": "Specifies the fragment part of the URL. This value must not start with a #.",
                          "type": "string"
                        },
                        "hostname": {
                          "description": "Specifies the hostname part of the URL.",
                          "type": "string"
                        },
                        "path": {
                          "description": "Specifies the path part of the URL. This value must begin with a /.",
                          "type": "string"
                        },
                        "protocol": {
                          "description": "Specifies the protocol part of the URL. Valid values are MatchRequest, Http and Https.",
                          "type": "string"
                        },
                        "queryString": {
                          "description": "Specifies the query string part of the URL. This value must not start with a ? or \u0026 and must be in \u003ckey\u003e=\u003cvalue\u003e format separated by \u0026.",
                          "type": "string"
                        },
                        "redirectType": {
                          "description": "Type of the redirect. Valid values are Found, Moved, PermanentRedirect and TemporaryRedirect.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "urlRewriteAction": {
                    "description": "A url_rewrite_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "destination": {
                          "description": "This value must start with a / and can't be longer than 260 characters.",
                          "type": "string"
                        },
                        "preserveUnmatchedPath": {
                          "description": "Defaults to true.",
                          "type": "boolean"
                        },
                        "sourcePattern": {
                          "description": "This value must start with a / and can't be longer than 260 characters.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "geoFilter": {
              "description": "A set of Geo Filters for this CDN Endpoint. Each geo_filter block supports fields documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "action": {
                    "description": "The Action of the Geo Filter. Possible values include Allow and Block.",
                    "type": "string"
                  },
                  "countryCodes": {
                    "description": "A List of two letter country codes (e.g. US, GB) to be associated with this Geo Filter.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "relativePath": {
                    "description": "The relative path applicable to geo filter.",
                    "type": "string"
                  }
                }
              }
            },
            "globalDeliveryRule": {
              "description": "Actions that are valid for all resources regardless of any conditions. A global_delivery_rule block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cacheExpirationAction": {
                    "description": "A cache_expiration_action block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "behavior": {
                          "description": "The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Duration of the cache. Only allowed when behavior is set to Override or SetIfMissing. Format: [d.]hh:mm:ss",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "cacheKeyQueryStringAction": {
                    "description": "A cache_key_query_string_action block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "behavior": {
                          "description": "The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.",
                          "type": "string"
                        },
                        "parameters": {
                          "description": "Comma separated list of parameter values.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "modifyRequestHeaderAction": {
                    "description": "A modify_request_header_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to be executed on a header value. Valid values are Append, Delete and Overwrite.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the header. Only needed when action is set to Append or overwrite.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "modifyResponseHeaderAction": {
                    "description": "A modify_response_header_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to be executed on a header value. Valid values are Append, Delete and Overwrite.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the header. Only needed when action is set to Append or overwrite.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "urlRedirectAction": {
                    "description": "A url_redirect_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fragment": {
                          "description": "Specifies the fragment part of the URL. This value must not start with a #.",
                          "type": "string"
                        },
                        "hostname": {
                          "description": "Specifies the hostname part of the URL.",
                          "type": "string"
                        },
                        "path": {
                          "description": "Specifies the path part of the URL. This value must begin with a /.",
                          "type": "string"
                        },
                        "protocol": {
                          "description": "Specifies the protocol part of the URL. Valid values are MatchRequest, Http and Https.",
                          "type": "string"
                        },
                        "queryString": {
                          "description": "Specifies the query string part of the URL. This value must not start with a ? or \u0026 and must be in \u003ckey\u003e=\u003cvalue\u003e format separated by \u0026.",
                          "type": "string"
                        },
                        "redirectType": {
                          "description": "Type of the redirect. Valid values are Found, Moved, PermanentRedirect and TemporaryRedirect.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "urlRewriteAction": {
                    "description": "A url_rewrite_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "destination": {
                          "description": "This value must start with a / and can't be longer than 260 characters.",
                          "type": "string"
                        },
                        "preserveUnmatchedPath": {
                          "description": "Defaults to true.",
                          "type": "boolean"
                        },
                        "sourcePattern": {
                          "description": "This value must start with a / and can't be longer than 260 characters.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "isCompressionEnabled": {
              "description": "Indicates whether compression is to be enabled.",
              "type": "boolean"
            },
            "isHttpAllowed": {
              "description": "Defaults to true.",
              "type": "boolean"
            },
            "isHttpsAllowed": {
              "description": "Defaults to true.",
              "type": "boolean"
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "optimizationType": {
              "description": "What types of optimization should this CDN Endpoint optimize for? Possible values include DynamicSiteAcceleration, GeneralMediaStreaming, GeneralWebDelivery, LargeFileDownload and VideoOnDemandMediaStreaming.",
              "type": "string"
            },
            "origin": {
              "description": "The set of origins of the CDN endpoint. When multiple origins exist, the first origin will be used as primary and rest will be used as failover options. Each origin block supports fields documented below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hostName": {
                    "description": "A string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "httpPort": {
                    "description": "The HTTP port of the origin. Defaults to 80. Changing this forces a new resource to be created.",
                    "type": "number"
                  },
                  "httpsPort": {
                    "description": "The HTTPS port of the origin. Defaults to 443. Changing this forces a new resource to be created.",
                    "type": "number"
                  },
                  "name": {
                    "description": "The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                }
              }
            },
            "originHostHeader": {
              "description": "The host header CDN provider will send along with content requests to origins.",
              "type": "string"
            },
            "originPath": {
              "description": "The path used at for origin requests.",
              "type": "string"
            },
            "probePath": {
              "description": "the path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin_path.",
              "type": "string"
            },
            "profileName": {
              "description": "The CDN Profile to which to attach the CDN Endpoint. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "profileNameRef": {
              "description": "Reference to a Profile in cdn to populate profileName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "profileNameSelector": {
              "description": "Selector for a Profile in cdn to populate profileName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "querystringCachingBehaviour": {
              "description": "Sets query string caching behavior. Allowed values are IgnoreQueryString, BypassCaching and UseQueryString. NotSet value can be used for Premium Verizon CDN profile. Defaults to IgnoreQueryString.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which to create the CDN Endpoint. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "initProvider": {
          "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "type": "object",
          "properties": {
            "contentTypesToCompress": {
              "description": "An array of strings that indicates a content types on which compression will be applied. The value for the elements should be MIME types.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deliveryRule": {
              "description": "Rules for the rules engine. An endpoint can contain up until 4 of those rules that consist of conditions and actions. A delivery_rule blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cacheExpirationAction": {
                    "description": "A cache_expiration_action block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "behavior": {
                          "description": "The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Duration of the cache. Only allowed when behavior is set to Override or SetIfMissing. Format: [d.]hh:mm:ss",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "cacheKeyQueryStringAction": {
                    "description": "A cache_key_query_string_action block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "behavior": {
                          "description": "The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.",
                          "type": "string"
                        },
                        "parameters": {
                          "description": "Comma separated list of parameter values.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "cookiesCondition": {
                    "description": "A cookies_condition block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "selector": {
                          "description": "Header name.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "deviceCondition": {
                    "description": "A device_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "httpVersionCondition": {
                    "description": "A http_version_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "modifyRequestHeaderAction": {
                    "description": "A modify_request_header_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to be executed on a header value. Valid values are Append, Delete and Overwrite.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the header. Only needed when action is set to Append or overwrite.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "modifyResponseHeaderAction": {
                    "description": "A modify_response_header_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to be executed on a header value. Valid values are Append, Delete and Overwrite.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the header. Only needed when action is set to Append or overwrite.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "name": {
                    "description": "The Name which should be used for this Delivery Rule.",
                    "type": "string"
                  },
                  "order": {
                    "description": "The order used for this rule. The order values should be sequential and begin at 1.",
                    "type": "number"
                  },
                  "postArgCondition": {
                    "description": "A post_arg_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "selector": {
                          "description": "Header name.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "queryStringCondition": {
                    "description": "A query_string_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "remoteAddressCondition": {
                    "description": "A remote_address_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "requestBodyCondition": {
                    "description": "A request_body_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "requestHeaderCondition": {
                    "description": "A request_header_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "selector": {
                          "description": "Header name.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "requestMethodCondition": {
                    "description": "A request_method_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "requestSchemeCondition": {
                    "description": "A request_scheme_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "requestUriCondition": {
                    "description": "A request_uri_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "urlFileExtensionCondition": {
                    "description": "A url_file_extension_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "urlFileNameCondition": {
                    "description": "A url_file_name_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "urlPathCondition": {
                    "description": "A url_path_condition block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchValues": {
                          "description": "List of string values. This is required if operator is not Any.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "negateCondition": {
                          "description": "Defaults to false.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Valid values are Any, BeginsWith, Contains, EndsWith, Equal, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual, RegEx and Wildcard.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "A list of transforms. Valid values are Lowercase and Uppercase.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "urlRedirectAction": {
                    "description": "A url_redirect_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fragment": {
                          "description": "Specifies the fragment part of the URL. This value must not start with a #.",
                          "type": "string"
                        },
                        "hostname": {
                          "description": "Specifies the hostname part of the URL.",
                          "type": "string"
                        },
                        "path": {
                          "description": "Specifies the path part of the URL. This value must begin with a /.",
                          "type": "string"
                        },
                        "protocol": {
                          "description": "Specifies the protocol part of the URL. Valid values are MatchRequest, Http and Https.",
                          "type": "string"
                        },
                        "queryString": {
                          "description": "Specifies the query string part of the URL. This value must not start with a ? or \u0026 and must be in \u003ckey\u003e=\u003cvalue\u003e format separated by \u0026.",
                          "type": "string"
                        },
                        "redirectType": {
                          "description": "Type of the redirect. Valid values are Found, Moved, PermanentRedirect and TemporaryRedirect.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "urlRewriteAction": {
                    "description": "A url_rewrite_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "destination": {
                          "description": "This value must start with a / and can't be longer than 260 characters.",
                          "type": "string"
                        },
                        "preserveUnmatchedPath": {
                          "description": "Defaults to true.",
                          "type": "boolean"
                        },
                        "sourcePattern": {
                          "description": "This value must start with a / and can't be longer than 260 characters.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "geoFilter": {
              "description": "A set of Geo Filters for this CDN Endpoint. Each geo_filter block supports fields documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "action": {
                    "description": "The Action of the Geo Filter. Possible values include Allow and Block.",
                    "type": "string"
                  },
                  "countryCodes": {
                    "description": "A List of two letter country codes (e.g. US, GB) to be associated with this Geo Filter.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "relativePath": {
                    "description": "The relative path applicable to geo filter.",
                    "type": "string"
                  }
                }
              }
            },
            "globalDeliveryRule": {
              "description": "Actions that are valid for all resources regardless of any conditions. A global_delivery_rule block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cacheExpirationAction": {
                    "description": "A cache_expiration_action block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "behavior": {
                          "description": "The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.",
                          "type": "string"
                        },
                        "duration": {
                          "description": "Duration of the cache. Only allowed when behavior is set to Override or SetIfMissing. Format: [d.]hh:mm:ss",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "cacheKeyQueryStringAction": {
                    "description": "A cache_key_query_string_action block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "behavior": {
                          "description": "The behavior of the cache key for query strings. Valid values are Exclude, ExcludeAll, Include and IncludeAll.",
                          "type": "string"
                        },
                        "parameters": {
                          "description": "Comma separated list of parameter values.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "modifyRequestHeaderAction": {
                    "description": "A modify_request_header_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to be executed on a header value. Valid values are Append, Delete and Overwrite.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the header. Only needed when action is set to Append or overwrite.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "modifyResponseHeaderAction": {
                    "description": "A modify_response_header_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to be executed on a header value. Valid values are Append, Delete and Overwrite.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the header. Only needed when action is set to Append or overwrite.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "urlRedirectAction": {
                    "description": "A url_redirect_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fragment": {
                          "description": "Specifies the fragment part of the URL. This value must not start with a #.",
                          "type": "string"
                        },
                        "hostname": {
                          "description": "Specifies the hostname part of the URL.",
                          "type": "string"
                        },
                        "path": {
                          "description": "Specifies the path part of the URL. This value must begin with a /.",
                          "type": "string"
                        },
                        "protocol": {
                          "description": "Specifies the protocol part of the URL. Valid values are MatchRequest, Http and Https.",
                          "type": "string"
                        },
                        "queryString": {
                          "description": "Specifies the query string part of the URL. This value must not start with a ? or \u0026 and must be in \u003ckey\u003e=\u003cvalue\u003e format separated by \u0026.",
                          "type": "string"
                        },
                        "redirectType": {
                          "description": "Type of the redirect. Valid values are Found, Moved, PermanentRedirect and TemporaryRedirect.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "urlRewriteAction": {
                    "description": "A url_rewrite_action block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "destination": {
                          "description": "This value must start with a / and can't be longer than 260 characters.",
                          "type": "string"
                        },
                        "preserveUnmatchedPath": {
                          "description": "Defaults to true.",
                          "type": "boolean"
                        },
                        "sourcePattern": {
                          "description": "This value must start with a / and can't be longer than 260 characters.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "isCompressionEnabled": {
              "description": "Indicates whether compression is to be enabled.",
              "type": "boolean"
            },
            "isHttpAllowed": {
              "description": "Defaults to true.",
              "type": "boolean"
            },
            "isHttpsAllowed": {
              "description": "Defaults to true.",
              "type": "boolean"
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "optimizationType": {
              "description": "What types of optimization should this CDN Endpoint optimize for? Possible values include DynamicSiteAcceleration, GeneralMediaStreaming, GeneralWebDelivery, LargeFileDownload and VideoOnDemandMediaStreaming.",
              "type": "string"
            },
            "origin": {
              "description": "The set of origins of the CDN endpoint. When multiple origins exist, the first origin will be used as primary and rest will be used as failover options. Each origin block supports fields documented below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hostName": {
                    "description": "A string that determines the hostname/IP address of the origin server. This string can be a domain name, Storage Account endpoint, Web App endpoint, IPv4 address or IPv6 address. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "httpPort": {
                    "description": "The HTTP port of the origin. Defaults to 80. Changing this forces a new resource to be created.",
                    "type": "number"
                  },
                  "httpsPort": {
                    "description": "The HTTPS port of the origin. Defaults to 443. Changing this forces a new resource to be created.",
                    "type": "number"
                  },
                  "name": {
                    "description": "The name of the origin. This is an arbitrary value. However, this value needs to be unique under the endpoint. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                }
              }
            },
            "originHostHeader": {
              "description": "The host header CDN provider will send along with content requests to origins.",
              "type": "string"
            },
            "originPath": {
              "description": "The path used at for origin requests.",
              "type": "string"
            },
            "probePath": {
              "description": "the path to a file hosted on the origin which helps accelerate delivery of the dynamic content and calculate the most optimal routes for the CDN. This is relative to the origin_path.",
              "type": "string"
            },
            "querystringCachingBehaviour": {
              "description": "Sets query string caching behavior. Allowed values are IgnoreQueryString, BypassCaching and UseQueryString. NotSet value can be used for Premium Verizon CDN profile. Defaults to IgnoreQueryString.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "managementPolicies": {
          "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              }
            }
          }
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              }
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          }
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          }
        }
      },
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.origin) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.origin))",
          "message": "spec.forProvider.origin is a required parameter"
        }
      ]
    }
  }
}