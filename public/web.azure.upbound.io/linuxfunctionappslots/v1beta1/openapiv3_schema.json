{
  "$schema": "http://json-schema.org/schema#",
  "description": "LinuxFunctionAppSlot is the Schema for the LinuxFunctionAppSlots API. Manages a Linux Function App Slot.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "web.azure.upbound.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "LinuxFunctionAppSlot"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "LinuxFunctionAppSlotSpec defines the desired state of LinuxFunctionAppSlot",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "appSettings": {
              "description": "A map of key-value pairs for App Settings and custom values. A map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "authSettings": {
              "description": "an auth_settings block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeDirectory": {
                    "description": "an active_directory block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication. Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The ID of the Client to use to authenticate with Azure Active Directory.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name. The Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          }
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalLoginParameters": {
                    "description": "Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in. Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "allowedExternalRedirectUrls": {
                    "description": "an allowed_external_redirect_urls block as detailed below. Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "defaultProvider": {
                    "description": "The default authentication provider to use when multiple providers are configured. Possible values include: AzureActiveDirectory, Facebook, Google, MicrosoftAccount, Twitter, Github. The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "Should the Authentication / Authorization feature be enabled? Should the Authentication / Authorization feature be enabled?",
                    "type": "boolean"
                  },
                  "facebook": {
                    "description": "a facebook block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "appId": {
                          "description": "The App ID of the Facebook app used for login. The App ID of the Facebook app used for login.",
                          "type": "string"
                        },
                        "appSecretSecretRef": {
                          "description": "The App Secret of the Facebook app used for Facebook login. Cannot be specified with app_secret_setting_name. The App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          }
                        },
                        "appSecretSettingName": {
                          "description": "The app setting name that contains the app_secret value used for Facebook Login. The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope. Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "github": {
                    "description": "a github block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The ID of the GitHub app used for login.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name. The Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          }
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope. Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "google": {
                    "description": "a google block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The OpenID Connect Client ID for the Google web application.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name. The client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          }
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope. Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "issuer": {
                    "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens. The OpenID Connect Issuer URI that represents the entity which issues access tokens.",
                    "type": "string"
                  },
                  "microsoft": {
                    "description": "a microsoft block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The OAuth 2.0 client ID that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name. The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          }
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope. The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "runtimeVersion": {
                    "description": "The RuntimeVersion of the Authentication / Authorization feature in use. The RuntimeVersion of the Authentication / Authorization feature in use.",
                    "type": "string"
                  },
                  "tokenRefreshExtensionHours": {
                    "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours. The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                    "type": "number"
                  },
                  "tokenStoreEnabled": {
                    "description": "Should the Linux Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to false. Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.",
                    "type": "boolean"
                  },
                  "twitter": {
                    "description": "a twitter block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "consumerKey": {
                          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in. The OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                          "type": "string"
                        },
                        "consumerSecretSecretRef": {
                          "description": "The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with consumer_secret_setting_name. The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          }
                        },
                        "consumerSecretSettingName": {
                          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "unauthenticatedClientAction": {
                    "description": "The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous. The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.",
                    "type": "string"
                  }
                }
              }
            },
            "authSettingsV2": {
              "description": "an auth_settings_v2 block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeDirectoryV2": {
                    "description": "An active_directory_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedApplications": {
                          "description": "The list of allowed Applications for the Default Authorisation Policy. The list of allowed Applications for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication. Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedGroups": {
                          "description": "The list of allowed Group Names for the Default Authorisation Policy. The list of allowed Group Names for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedIdentities": {
                          "description": "The list of allowed Identities for the Default Authorisation Policy. The list of allowed Identities for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The ID of the Client to use to authenticate with Azure Active Directory.",
                          "type": "string"
                        },
                        "clientSecretCertificateThumbprint": {
                          "description": "The thumbprint of the certificate used for signing purposes. The thumbprint of the certificate used for signing purposes.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The App Setting name that contains the client secret of the Client.",
                          "type": "string"
                        },
                        "jwtAllowedClientApplications": {
                          "description": "A list of Allowed Client Applications in the JWT Claim. A list of Allowed Client Applications in the JWT Claim.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "jwtAllowedGroups": {
                          "description": "A list of Allowed Groups in the JWT Claim. A list of Allowed Groups in the JWT Claim.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "loginParameters": {
                          "description": "A map of key-value pairs to send to the Authorisation Endpoint when a user logs in. A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "tenantAuthEndpoint": {
                          "description": "The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/ The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.",
                          "type": "string"
                        },
                        "wwwAuthenticationDisabled": {
                          "description": "Should the www-authenticate provider should be omitted from the request? Defaults to false Should the www-authenticate provider should be omitted from the request? Defaults to `false`",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "appleV2": {
                    "description": "An apple_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The OpenID Connect Client ID for the Apple web application.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name that contains the `client_secret` value used for Apple Login.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "authEnabled": {
                    "description": "Should the AuthV2 Settings be enabled. Defaults to false. Should the AuthV2 Settings be enabled. Defaults to `false`",
                    "type": "boolean"
                  },
                  "azureStaticWebAppV2": {
                    "description": "An azure_static_web_app_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The ID of the Client to use to authenticate with Azure Static Web App Authentication.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "configFilePath": {
                    "description": "The path to the App Auth settings. The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.",
                    "type": "string"
                  },
                  "customOidcV2": {
                    "description": "Zero or more custom_oidc_v2 blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The ID of the Client to use to authenticate with this Custom OIDC.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account. The name of the Custom OIDC Authentication Provider.",
                          "type": "string"
                        },
                        "nameClaimType": {
                          "description": "The name of the claim that contains the users name. The name of the claim that contains the users name.",
                          "type": "string"
                        },
                        "openidConfigurationEndpoint": {
                          "description": "The app setting name that contains the client_secret value used for the Custom OIDC Login. The endpoint that contains all the configuration endpoints for this Custom OIDC provider.",
                          "type": "string"
                        },
                        "scopes": {
                          "description": "The list of the scopes that should be requested while authenticating. The list of the scopes that should be requested while authenticating.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "defaultProvider": {
                    "description": "The Default Authentication Provider to use when more than one Authentication Provider is configured and the unauthenticated_action is set to RedirectToLoginPage. The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`.",
                    "type": "string"
                  },
                  "excludedPaths": {
                    "description": "The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage. The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "facebookV2": {
                    "description": "A facebook_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "appId": {
                          "description": "The App ID of the Facebook app used for login. The App ID of the Facebook app used for login.",
                          "type": "string"
                        },
                        "appSecretSettingName": {
                          "description": "The app setting name that contains the app_secret value used for Facebook Login. The app setting name that contains the `app_secret` value used for Facebook Login.",
                          "type": "string"
                        },
                        "graphApiVersion": {
                          "description": "The version of the Facebook API to be used while logging in. The version of the Facebook API to be used while logging in.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication. Specifies a list of scopes to be requested as part of Facebook Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "forwardProxyConvention": {
                    "description": "The convention used to determine the url of the request made. Possible values include ForwardProxyConventionNoProxy, ForwardProxyConventionStandard, ForwardProxyConventionCustom. Defaults to ForwardProxyConventionNoProxy. The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`",
                    "type": "string"
                  },
                  "forwardProxyCustomHostHeaderName": {
                    "description": "The name of the custom header containing the host of the request. The name of the header containing the host of the request.",
                    "type": "string"
                  },
                  "forwardProxyCustomSchemeHeaderName": {
                    "description": "The name of the custom header containing the scheme of the request. The name of the header containing the scheme of the request.",
                    "type": "string"
                  },
                  "githubV2": {
                    "description": "A github_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The ID of the GitHub app used for login.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name that contains the `client_secret` value used for GitHub Login.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication. Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "googleV2": {
                    "description": "A google_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication. Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The OpenID Connect Client ID for the Google web application.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name that contains the `client_secret` value used for Google Login.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication. Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "httpRouteApiPrefix": {
                    "description": "The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth. The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`",
                    "type": "string"
                  },
                  "login": {
                    "description": "A login block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedExternalRedirectUrls": {
                          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cookieExpirationConvention": {
                          "description": "The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime. The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.",
                          "type": "string"
                        },
                        "cookieExpirationTime": {
                          "description": "The time after the request is made when the session cookie should expire. Defaults to 08:00:00. The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.",
                          "type": "string"
                        },
                        "logoutEndpoint": {
                          "description": "The endpoint to which logout requests should be made. The endpoint to which logout requests should be made.",
                          "type": "string"
                        },
                        "nonceExpirationTime": {
                          "description": "The time after the request is made when the nonce should expire. Defaults to 00:05:00. The time after the request is made when the nonce should expire. Defaults to `00:05:00`.",
                          "type": "string"
                        },
                        "preserveUrlFragmentsForLogins": {
                          "description": "Should the fragments from the request be preserved after the login request is made. Defaults to false. Should the fragments from the request be preserved after the login request is made. Defaults to `false`.",
                          "type": "boolean"
                        },
                        "tokenRefreshExtensionTime": {
                          "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours. The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                          "type": "number"
                        },
                        "tokenStoreEnabled": {
                          "description": "Should the Token Store configuration Enabled. Defaults to false Should the Token Store configuration Enabled. Defaults to `false`",
                          "type": "boolean"
                        },
                        "tokenStorePath": {
                          "description": "The directory path in the App Filesystem in which the tokens will be stored. The directory path in the App Filesystem in which the tokens will be stored.",
                          "type": "string"
                        },
                        "tokenStoreSasSettingName": {
                          "description": "The name of the app setting which contains the SAS URL of the blob storage containing the tokens. The name of the app setting which contains the SAS URL of the blob storage containing the tokens.",
                          "type": "string"
                        },
                        "validateNonce": {
                          "description": "Should the nonce be validated while completing the login flow. Defaults to true. Should the nonce be validated while completing the login flow. Defaults to `true`.",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "microsoftV2": {
                    "description": "A microsoft_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication. Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The OAuth 2.0 client ID that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication. The list of Login scopes that will be requested as part of Microsoft Account authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "requireAuthentication": {
                    "description": "Should the authentication flow be used for all requests. Should the authentication flow be used for all requests.",
                    "type": "boolean"
                  },
                  "requireHttps": {
                    "description": "Should HTTPS be required on connections? Defaults to true. Should HTTPS be required on connections? Defaults to true.",
                    "type": "boolean"
                  },
                  "runtimeVersion": {
                    "description": "The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1. The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`",
                    "type": "string"
                  },
                  "twitterV2": {
                    "description": "A twitter_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "consumerKey": {
                          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in. The OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                          "type": "string"
                        },
                        "consumerSecretSettingName": {
                          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "unauthenticatedAction": {
                    "description": "The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage. The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.",
                    "type": "string"
                  }
                }
              }
            },
            "backup": {
              "description": "a backup block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "storageAccountUrlSecretRef"
                ],
                "properties": {
                  "enabled": {
                    "description": "Should this backup job be enabled? Defaults to true. Should this backup job be enabled?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "The name which should be used for this Backup. The name which should be used for this Backup.",
                    "type": "string"
                  },
                  "schedule": {
                    "description": "a schedule block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "frequencyInterval": {
                          "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and frequency_unit should be set to Day). How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).",
                          "type": "number"
                        },
                        "frequencyUnit": {
                          "description": "The unit of time for how often the backup should take place. Possible values include: Day and Hour. The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.",
                          "type": "string"
                        },
                        "keepAtLeastOneBackup": {
                          "description": "Should the service keep at least one backup, regardless of age of backup. Defaults to false. Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.",
                          "type": "boolean"
                        },
                        "retentionPeriodDays": {
                          "description": "After how many days backups should be deleted. Defaults to 30. After how many days backups should be deleted.",
                          "type": "number"
                        },
                        "startTime": {
                          "description": "When the schedule should start working in RFC-3339 format. When the schedule should start working in RFC-3339 format.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "storageAccountUrlSecretRef": {
                    "description": "The SAS URL to the container. The SAS URL to the container.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "builtinLoggingEnabled": {
              "description": "Should built in logging be enabled. Configures AzureWebJobsDashboard app setting based on the configured storage setting. Defaults to true. Should built in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting.",
              "type": "boolean"
            },
            "clientCertificateEnabled": {
              "description": "Should the Function App Slot use Client Certificates. Should the Function App Slot use Client Certificates.",
              "type": "boolean"
            },
            "clientCertificateExclusionPaths": {
              "description": "Paths to exclude when using client certificates, separated by ; Paths to exclude when using client certificates, separated by ;",
              "type": "string"
            },
            "clientCertificateMode": {
              "description": "The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are Required, Optional, and OptionalInteractiveUser. The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`.",
              "type": "string"
            },
            "connectionString": {
              "description": "a connection_string block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "valueSecretRef"
                ],
                "properties": {
                  "name": {
                    "description": "The name which should be used for this Connection. The name which should be used for this Connection.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of database. Possible values include: APIHub, Custom, DocDb, EventHub, MySQL, NotificationHub, PostgreSQL, RedisCache, ServiceBus, SQLAzure, and SQLServer. Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.",
                    "type": "string"
                  },
                  "valueSecretRef": {
                    "description": "The connection string value. The connection string value.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "contentShareForceDisabled": {
              "description": "Force disable the content share settings. Force disable the content share settings.",
              "type": "boolean"
            },
            "dailyMemoryTimeQuota": {
              "description": "The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to 0. The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans.",
              "type": "number"
            },
            "enabled": {
              "description": "Is the Linux Function App Slot enabled. Defaults to true. Is the Linux Function App Slot enabled.",
              "type": "boolean"
            },
            "functionAppId": {
              "description": "The ID of the Linux Function App this Slot is a member of. Changing this forces a new resource to be created. The ID of the Linux Function App this Slot is a member of.",
              "type": "string"
            },
            "functionAppIdRef": {
              "description": "Reference to a LinuxFunctionApp in web to populate functionAppId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "functionAppIdSelector": {
              "description": "Selector for a LinuxFunctionApp in web to populate functionAppId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "functionsExtensionVersion": {
              "description": "The runtime version associated with the Function App Slot. Defaults to ~4. The runtime version associated with the Function App Slot.",
              "type": "string"
            },
            "httpsOnly": {
              "description": "Can the Function App Slot only be accessed via HTTPS? Can the Function App Slot only be accessed via HTTPS?",
              "type": "boolean"
            },
            "identity": {
              "description": "An identity block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "A list of User Assigned Managed Identity IDs to be assigned to this Linux Function App Slot.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "type": {
                    "description": "Specifies the type of Managed Service Identity that should be configured on this Linux Function App Slot. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                    "type": "string"
                  }
                }
              }
            },
            "keyVaultReferenceIdentityId": {
              "description": "The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the identity block. For more information see - Access vaults with a user-assigned identity The User Assigned Identity to use for Key Vault access.",
              "type": "string"
            },
            "servicePlanId": {
              "description": "The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Linux Function App will be used.",
              "type": "string"
            },
            "siteConfig": {
              "description": "a site_config block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alwaysOn": {
                    "description": "If this Linux Web App is Always On enabled. Defaults to false. If this Linux Web App is Always On enabled. Defaults to `false`.",
                    "type": "boolean"
                  },
                  "apiDefinitionUrl": {
                    "description": "The URL of the API definition that describes this Linux Function App. The URL of the API definition that describes this Linux Function App.",
                    "type": "string"
                  },
                  "apiManagementApiId": {
                    "description": "The ID of the API Management API for this Linux Function App. The ID of the API Management API for this Linux Function App.",
                    "type": "string"
                  },
                  "appCommandLine": {
                    "description": "The program and any arguments used to launch this app via the command line. (Example node myapp.js). The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).",
                    "type": "string"
                  },
                  "appScaleLimit": {
                    "description": "The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan. The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.",
                    "type": "number"
                  },
                  "appServiceLogs": {
                    "description": "an app_service_logs block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "diskQuotaMb": {
                          "description": "The amount of disk space to use for logs. Valid values are between 25 and 100. Defaults to 35. The amount of disk space to use for logs. Valid values are between `25` and `100`.",
                          "type": "number"
                        },
                        "retentionPeriodDays": {
                          "description": "After how many days backups should be deleted. Defaults to 30. The retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "applicationInsightsConnectionStringSecretRef": {
                    "description": "The Connection String for linking the Linux Function App to Application Insights. The Connection String for linking the Linux Function App to Application Insights.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  },
                  "applicationInsightsKeySecretRef": {
                    "description": "The Instrumentation Key for connecting the Linux Function App to Application Insights. The Instrumentation Key for connecting the Linux Function App to Application Insights.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  },
                  "applicationStack": {
                    "description": "an application_stack block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "docker": {
                          "description": "a docker block as detailed below. A docker block",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "imageName": {
                                "description": "The name of the Docker image to use. The name of the Docker image to use.",
                                "type": "string"
                              },
                              "imageTag": {
                                "description": "The image tag of the image to use. The image tag of the image to use.",
                                "type": "string"
                              },
                              "registryPasswordSecretRef": {
                                "description": "The password for the account to use to connect to the registry. The password for the account to use to connect to the registry.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "name",
                                  "namespace"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the secret.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the secret.",
                                    "type": "string"
                                  }
                                }
                              },
                              "registryUrl": {
                                "description": "The URL of the docker registry. The URL of the docker registry.",
                                "type": "string"
                              },
                              "registryUsernameSecretRef": {
                                "description": "The username to use for connections to the registry. The username to use for connections to the registry.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "name",
                                  "namespace"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the secret.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the secret.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "dotnetVersion": {
                          "description": "The version of .Net. Possible values are 3.1, 6.0 and 7.0. The version of .Net. Possible values are `3.1`, `6.0` and `7.0`",
                          "type": "string"
                        },
                        "javaVersion": {
                          "description": "The version of Java to use. Possible values are 8, 11 \u0026 17 (In-Preview). The version of Java to use. Possible values are `8`, `11`, and `17`",
                          "type": "string"
                        },
                        "nodeVersion": {
                          "description": "The version of Node to use. Possible values include 12, 14, 16 and 18 The version of Node to use. Possible values include `12`, `14`, `16` and `18`",
                          "type": "string"
                        },
                        "powershellCoreVersion": {
                          "description": "The version of PowerShell Core to use. Possibles values are 7 , and 7.2. The version of PowerShell Core to use. Possibles values are `7`, and `7.2`",
                          "type": "string"
                        },
                        "pythonVersion": {
                          "description": "The version of Python to use. Possible values are 3.10, 3.9, 3.8 and 3.7. The version of Python to use. Possible values include `3.10`, `3.9`, `3.8`, and `3.7`.",
                          "type": "string"
                        },
                        "useCustomRuntime": {
                          "description": "Should the Linux Function App use a custom runtime?",
                          "type": "boolean"
                        },
                        "useDotnetIsolatedRuntime": {
                          "description": "Should the DotNet process use an isolated runtime. Defaults to false. Should the DotNet process use an isolated runtime. Defaults to `false`.",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "autoSwapSlotName": {
                    "description": "The name of the slot to automatically swap with when this slot is successfully deployed.",
                    "type": "string"
                  },
                  "containerRegistryManagedIdentityClientId": {
                    "description": "The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry. The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.",
                    "type": "string"
                  },
                  "containerRegistryUseManagedIdentity": {
                    "description": "Should connections for Azure Container Registry use Managed Identity. Should connections for Azure Container Registry use Managed Identity.",
                    "type": "boolean"
                  },
                  "cors": {
                    "description": "a cors block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedOrigins": {
                          "description": "an allowed_origins block as detailed below. Specifies a list of origins that should be allowed to make cross-origin calls.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "supportCredentials": {
                          "description": "Are credentials allowed in CORS requests? Defaults to false. Are credentials allowed in CORS requests? Defaults to `false`.",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "defaultDocuments": {
                    "description": "a default_documents block as detailed below. Specifies a list of Default Documents for the Linux Web App.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "elasticInstanceMinimum": {
                    "description": "The number of minimum instances for this Linux Function App. Only affects apps on Elastic Premium plans. The number of minimum instances for this Linux Function App. Only affects apps on Elastic Premium plans.",
                    "type": "number"
                  },
                  "ftpsState": {
                    "description": "State of FTP / FTPS service for this function app. Possible values include: AllAllowed, FtpsOnly and Disabled. Defaults to Disabled. State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.",
                    "type": "string"
                  },
                  "healthCheckEvictionTimeInMin": {
                    "description": "The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Defaults to 10. Only valid in conjunction with health_check_path The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Defaults to `10`. Only valid in conjunction with `health_check_path`",
                    "type": "number"
                  },
                  "healthCheckPath": {
                    "description": "The path to be checked for this function app health. The path to be checked for this function app health.",
                    "type": "string"
                  },
                  "http2Enabled": {
                    "description": "Specifies if the HTTP2 protocol should be enabled. Defaults to false. Specifies if the http2 protocol should be enabled. Defaults to `false`.",
                    "type": "boolean"
                  },
                  "ipRestriction": {
                    "description": "an ip_restriction block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Possible values are Allow or Deny. The action to take. Possible values are `Allow` or `Deny`.",
                          "type": "string"
                        },
                        "headers": {
                          "description": "a headers block as detailed below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "xAzureFdid": {
                                "description": "Specifies a list of Azure Front Door IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xFdHealthProbe": {
                                "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedFor": {
                                "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedHost": {
                                "description": "Specifies a list of Hosts for which matching should be applied.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "ipAddress": {
                          "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32 The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account. The name which should be used for this `ip_restriction`.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The priority value of this ip_restriction. Defaults to 65000. The priority value of this `ip_restriction`.",
                          "type": "number"
                        },
                        "serviceTag": {
                          "description": "The Service Tag used for this IP Restriction. The Service Tag used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetId": {
                          "description": "The subnet id which will be used by this Function App Slot for regional virtual network integration. The Virtual Network Subnet ID used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetIdRef": {
                          "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "virtualNetworkSubnetIdSelector": {
                          "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "loadBalancingMode": {
                    "description": "The Site load balancing mode. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted. The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.",
                    "type": "string"
                  },
                  "managedPipelineMode": {
                    "description": "The Managed Pipeline mode. Possible values include: Integrated, Classic. Defaults to Integrated. The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.",
                    "type": "string"
                  },
                  "minimumTlsVersion": {
                    "description": "The configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2. The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.",
                    "type": "string"
                  },
                  "preWarmedInstanceCount": {
                    "description": "The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan. The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.",
                    "type": "number"
                  },
                  "remoteDebuggingEnabled": {
                    "description": "Should Remote Debugging be enabled. Defaults to false. Should Remote Debugging be enabled. Defaults to `false`.",
                    "type": "boolean"
                  },
                  "remoteDebuggingVersion": {
                    "description": "The Remote Debugging Version. Possible values include VS2017, VS2019, and VS2022 The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022`",
                    "type": "string"
                  },
                  "runtimeScaleMonitoringEnabled": {
                    "description": "Should Functions Runtime Scale Monitoring be enabled. Should Functions Runtime Scale Monitoring be enabled.",
                    "type": "boolean"
                  },
                  "scmIpRestriction": {
                    "description": "a scm_ip_restriction block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Possible values are Allow or Deny. The action to take. Possible values are `Allow` or `Deny`.",
                          "type": "string"
                        },
                        "headers": {
                          "description": "a headers block as detailed below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "xAzureFdid": {
                                "description": "Specifies a list of Azure Front Door IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xFdHealthProbe": {
                                "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedFor": {
                                "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedHost": {
                                "description": "Specifies a list of Hosts for which matching should be applied.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "ipAddress": {
                          "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32 The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account. The name which should be used for this `ip_restriction`.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The priority value of this ip_restriction. Defaults to 65000. The priority value of this `ip_restriction`.",
                          "type": "number"
                        },
                        "serviceTag": {
                          "description": "The Service Tag used for this IP Restriction. The Service Tag used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetId": {
                          "description": "The subnet id which will be used by this Function App Slot for regional virtual network integration. The Virtual Network Subnet ID used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetIdRef": {
                          "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "virtualNetworkSubnetIdSelector": {
                          "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "scmMinimumTlsVersion": {
                    "description": "Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2. Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.",
                    "type": "string"
                  },
                  "scmUseMainIpRestriction": {
                    "description": "Should the Linux Function App ip_restriction configuration be used for the SCM also. Should the Linux Function App `ip_restriction` configuration be used for the SCM also.",
                    "type": "boolean"
                  },
                  "use32BitWorker": {
                    "description": "Should the Linux Web App use a 32-bit worker. Should the Linux Web App use a 32-bit worker.",
                    "type": "boolean"
                  },
                  "vnetRouteAllEnabled": {
                    "description": "Should all outbound traffic to have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to false. Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.",
                    "type": "boolean"
                  },
                  "websocketsEnabled": {
                    "description": "Should Web Sockets be enabled. Defaults to false. Should Web Sockets be enabled. Defaults to `false`.",
                    "type": "boolean"
                  },
                  "workerCount": {
                    "description": "The number of Workers for this Linux Function App. The number of Workers for this Linux Function App.",
                    "type": "number"
                  }
                }
              }
            },
            "storageAccount": {
              "description": "One or more storage_account blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "accessKeySecretRef"
                ],
                "properties": {
                  "accessKeySecretRef": {
                    "description": "The Access key for the storage account.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  },
                  "accountName": {
                    "description": "The Name of the Storage Account.",
                    "type": "string"
                  },
                  "mountPath": {
                    "description": "The path at which to mount the storage share.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name which should be used for this Storage Account.",
                    "type": "string"
                  },
                  "shareName": {
                    "description": "The Name of the File Share or Container Name for Blob storage.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The Azure Storage Type. Possible values include AzureFiles and AzureBlob.",
                    "type": "string"
                  }
                }
              }
            },
            "storageAccountAccessKeySecretRef": {
              "description": "The access key which will be used to access the storage account for the Function App Slot. The access key which will be used to access the storage account for the Function App Slot.",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              }
            },
            "storageAccountName": {
              "description": "The backend storage account name which will be used by this Function App Slot. The backend storage account name which will be used by this Function App Slot.",
              "type": "string"
            },
            "storageAccountNameRef": {
              "description": "Reference to a Account in storage to populate storageAccountName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "storageAccountNameSelector": {
              "description": "Selector for a Account in storage to populate storageAccountName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "storageKeyVaultSecretId": {
              "description": "The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App. The Key Vault Secret ID, including version, that contains the Connection String to connect to the storage account for this Function App.",
              "type": "string"
            },
            "storageUsesManagedIdentity": {
              "description": "Should the Function App Slot use its Managed Identity to access storage. Should the Function App Slot use its Managed Identity to access storage?",
              "type": "boolean"
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Linux Function App.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "virtualNetworkSubnetId": {
              "description": "The subnet id which will be used by this Function App Slot for regional virtual network integration.",
              "type": "string"
            },
            "virtualNetworkSubnetIdRef": {
              "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "virtualNetworkSubnetIdSelector": {
              "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "initProvider": {
          "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "type": "object",
          "properties": {
            "appSettings": {
              "description": "A map of key-value pairs for App Settings and custom values. A map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "authSettings": {
              "description": "an auth_settings block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeDirectory": {
                    "description": "an active_directory block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication. Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The ID of the Client to use to authenticate with Azure Active Directory.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalLoginParameters": {
                    "description": "Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in. Specifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "allowedExternalRedirectUrls": {
                    "description": "an allowed_external_redirect_urls block as detailed below. Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "defaultProvider": {
                    "description": "The default authentication provider to use when multiple providers are configured. Possible values include: AzureActiveDirectory, Facebook, Google, MicrosoftAccount, Twitter, Github. The default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "Should the Authentication / Authorization feature be enabled? Should the Authentication / Authorization feature be enabled?",
                    "type": "boolean"
                  },
                  "facebook": {
                    "description": "a facebook block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "appId": {
                          "description": "The App ID of the Facebook app used for login. The App ID of the Facebook app used for login.",
                          "type": "string"
                        },
                        "appSecretSettingName": {
                          "description": "The app setting name that contains the app_secret value used for Facebook Login. The app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope. Specifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "github": {
                    "description": "a github block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The ID of the GitHub app used for login.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope. Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "google": {
                    "description": "a google block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The OpenID Connect Client ID for the Google web application.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope. Specifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "issuer": {
                    "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens. The OpenID Connect Issuer URI that represents the entity which issues access tokens.",
                    "type": "string"
                  },
                  "microsoft": {
                    "description": "a microsoft block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The OAuth 2.0 client ID that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope. The list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "runtimeVersion": {
                    "description": "The RuntimeVersion of the Authentication / Authorization feature in use. The RuntimeVersion of the Authentication / Authorization feature in use.",
                    "type": "string"
                  },
                  "tokenRefreshExtensionHours": {
                    "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours. The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                    "type": "number"
                  },
                  "tokenStoreEnabled": {
                    "description": "Should the Linux Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to false. Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.",
                    "type": "boolean"
                  },
                  "twitter": {
                    "description": "a twitter block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "consumerKey": {
                          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in. The OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                          "type": "string"
                        },
                        "consumerSecretSettingName": {
                          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "unauthenticatedClientAction": {
                    "description": "The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous. The action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.",
                    "type": "string"
                  }
                }
              }
            },
            "authSettingsV2": {
              "description": "an auth_settings_v2 block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeDirectoryV2": {
                    "description": "An active_directory_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedApplications": {
                          "description": "The list of allowed Applications for the Default Authorisation Policy. The list of allowed Applications for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication. Specifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedGroups": {
                          "description": "The list of allowed Group Names for the Default Authorisation Policy. The list of allowed Group Names for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedIdentities": {
                          "description": "The list of allowed Identities for the Default Authorisation Policy. The list of allowed Identities for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The ID of the Client to use to authenticate with Azure Active Directory.",
                          "type": "string"
                        },
                        "clientSecretCertificateThumbprint": {
                          "description": "The thumbprint of the certificate used for signing purposes. The thumbprint of the certificate used for signing purposes.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The App Setting name that contains the client secret of the Client.",
                          "type": "string"
                        },
                        "jwtAllowedClientApplications": {
                          "description": "A list of Allowed Client Applications in the JWT Claim. A list of Allowed Client Applications in the JWT Claim.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "jwtAllowedGroups": {
                          "description": "A list of Allowed Groups in the JWT Claim. A list of Allowed Groups in the JWT Claim.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "loginParameters": {
                          "description": "A map of key-value pairs to send to the Authorisation Endpoint when a user logs in. A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "tenantAuthEndpoint": {
                          "description": "The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/v2.0/{tenant-guid}/ The Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.",
                          "type": "string"
                        },
                        "wwwAuthenticationDisabled": {
                          "description": "Should the www-authenticate provider should be omitted from the request? Defaults to false Should the www-authenticate provider should be omitted from the request? Defaults to `false`",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "appleV2": {
                    "description": "An apple_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The OpenID Connect Client ID for the Apple web application.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name that contains the `client_secret` value used for Apple Login.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "authEnabled": {
                    "description": "Should the AuthV2 Settings be enabled. Defaults to false. Should the AuthV2 Settings be enabled. Defaults to `false`",
                    "type": "boolean"
                  },
                  "azureStaticWebAppV2": {
                    "description": "An azure_static_web_app_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The ID of the Client to use to authenticate with Azure Static Web App Authentication.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "configFilePath": {
                    "description": "The path to the App Auth settings. The path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.",
                    "type": "string"
                  },
                  "customOidcV2": {
                    "description": "Zero or more custom_oidc_v2 blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The ID of the Client to use to authenticate with this Custom OIDC.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account. The name of the Custom OIDC Authentication Provider.",
                          "type": "string"
                        },
                        "nameClaimType": {
                          "description": "The name of the claim that contains the users name. The name of the claim that contains the users name.",
                          "type": "string"
                        },
                        "openidConfigurationEndpoint": {
                          "description": "The app setting name that contains the client_secret value used for the Custom OIDC Login. The endpoint that contains all the configuration endpoints for this Custom OIDC provider.",
                          "type": "string"
                        },
                        "scopes": {
                          "description": "The list of the scopes that should be requested while authenticating. The list of the scopes that should be requested while authenticating.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "defaultProvider": {
                    "description": "The Default Authentication Provider to use when more than one Authentication Provider is configured and the unauthenticated_action is set to RedirectToLoginPage. The Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`.",
                    "type": "string"
                  },
                  "excludedPaths": {
                    "description": "The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage. The paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "facebookV2": {
                    "description": "A facebook_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "appId": {
                          "description": "The App ID of the Facebook app used for login. The App ID of the Facebook app used for login.",
                          "type": "string"
                        },
                        "appSecretSettingName": {
                          "description": "The app setting name that contains the app_secret value used for Facebook Login. The app setting name that contains the `app_secret` value used for Facebook Login.",
                          "type": "string"
                        },
                        "graphApiVersion": {
                          "description": "The version of the Facebook API to be used while logging in. The version of the Facebook API to be used while logging in.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication. Specifies a list of scopes to be requested as part of Facebook Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "forwardProxyConvention": {
                    "description": "The convention used to determine the url of the request made. Possible values include ForwardProxyConventionNoProxy, ForwardProxyConventionStandard, ForwardProxyConventionCustom. Defaults to ForwardProxyConventionNoProxy. The convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`",
                    "type": "string"
                  },
                  "forwardProxyCustomHostHeaderName": {
                    "description": "The name of the custom header containing the host of the request. The name of the header containing the host of the request.",
                    "type": "string"
                  },
                  "forwardProxyCustomSchemeHeaderName": {
                    "description": "The name of the custom header containing the scheme of the request. The name of the header containing the scheme of the request.",
                    "type": "string"
                  },
                  "githubV2": {
                    "description": "A github_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The ID of the GitHub app used for login.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name that contains the `client_secret` value used for GitHub Login.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication. Specifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "googleV2": {
                    "description": "A google_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication. Specifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The OpenID Connect Client ID for the Google web application.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name that contains the `client_secret` value used for Google Login.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication. Specifies a list of Login scopes that will be requested as part of Google Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "httpRouteApiPrefix": {
                    "description": "The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth. The prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`",
                    "type": "string"
                  },
                  "login": {
                    "description": "A login block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedExternalRedirectUrls": {
                          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cookieExpirationConvention": {
                          "description": "The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime. The method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.",
                          "type": "string"
                        },
                        "cookieExpirationTime": {
                          "description": "The time after the request is made when the session cookie should expire. Defaults to 08:00:00. The time after the request is made when the session cookie should expire. Defaults to `08:00:00`.",
                          "type": "string"
                        },
                        "logoutEndpoint": {
                          "description": "The endpoint to which logout requests should be made. The endpoint to which logout requests should be made.",
                          "type": "string"
                        },
                        "nonceExpirationTime": {
                          "description": "The time after the request is made when the nonce should expire. Defaults to 00:05:00. The time after the request is made when the nonce should expire. Defaults to `00:05:00`.",
                          "type": "string"
                        },
                        "preserveUrlFragmentsForLogins": {
                          "description": "Should the fragments from the request be preserved after the login request is made. Defaults to false. Should the fragments from the request be preserved after the login request is made. Defaults to `false`.",
                          "type": "boolean"
                        },
                        "tokenRefreshExtensionTime": {
                          "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours. The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                          "type": "number"
                        },
                        "tokenStoreEnabled": {
                          "description": "Should the Token Store configuration Enabled. Defaults to false Should the Token Store configuration Enabled. Defaults to `false`",
                          "type": "boolean"
                        },
                        "tokenStorePath": {
                          "description": "The directory path in the App Filesystem in which the tokens will be stored. The directory path in the App Filesystem in which the tokens will be stored.",
                          "type": "string"
                        },
                        "tokenStoreSasSettingName": {
                          "description": "The name of the app setting which contains the SAS URL of the blob storage containing the tokens. The name of the app setting which contains the SAS URL of the blob storage containing the tokens.",
                          "type": "string"
                        },
                        "validateNonce": {
                          "description": "Should the nonce be validated while completing the login flow. Defaults to true. Should the nonce be validated while completing the login flow. Defaults to `true`.",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "microsoftV2": {
                    "description": "A microsoft_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication. Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication. The OAuth 2.0 client ID that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication. The list of Login scopes that will be requested as part of Microsoft Account authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "requireAuthentication": {
                    "description": "Should the authentication flow be used for all requests. Should the authentication flow be used for all requests.",
                    "type": "boolean"
                  },
                  "requireHttps": {
                    "description": "Should HTTPS be required on connections? Defaults to true. Should HTTPS be required on connections? Defaults to true.",
                    "type": "boolean"
                  },
                  "runtimeVersion": {
                    "description": "The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1. The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`",
                    "type": "string"
                  },
                  "twitterV2": {
                    "description": "A twitter_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "consumerKey": {
                          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in. The OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                          "type": "string"
                        },
                        "consumerSecretSettingName": {
                          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "unauthenticatedAction": {
                    "description": "The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage. The action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.",
                    "type": "string"
                  }
                }
              }
            },
            "backup": {
              "description": "a backup block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Should this backup job be enabled? Defaults to true. Should this backup job be enabled?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "The name which should be used for this Backup. The name which should be used for this Backup.",
                    "type": "string"
                  },
                  "schedule": {
                    "description": "a schedule block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "frequencyInterval": {
                          "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and frequency_unit should be set to Day). How often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).",
                          "type": "number"
                        },
                        "frequencyUnit": {
                          "description": "The unit of time for how often the backup should take place. Possible values include: Day and Hour. The unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.",
                          "type": "string"
                        },
                        "keepAtLeastOneBackup": {
                          "description": "Should the service keep at least one backup, regardless of age of backup. Defaults to false. Should the service keep at least one backup, regardless of age of backup. Defaults to `false`.",
                          "type": "boolean"
                        },
                        "retentionPeriodDays": {
                          "description": "After how many days backups should be deleted. Defaults to 30. After how many days backups should be deleted.",
                          "type": "number"
                        },
                        "startTime": {
                          "description": "When the schedule should start working in RFC-3339 format. When the schedule should start working in RFC-3339 format.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "builtinLoggingEnabled": {
              "description": "Should built in logging be enabled. Configures AzureWebJobsDashboard app setting based on the configured storage setting. Defaults to true. Should built in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting.",
              "type": "boolean"
            },
            "clientCertificateEnabled": {
              "description": "Should the Function App Slot use Client Certificates. Should the Function App Slot use Client Certificates.",
              "type": "boolean"
            },
            "clientCertificateExclusionPaths": {
              "description": "Paths to exclude when using client certificates, separated by ; Paths to exclude when using client certificates, separated by ;",
              "type": "string"
            },
            "clientCertificateMode": {
              "description": "The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are Required, Optional, and OptionalInteractiveUser. The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`.",
              "type": "string"
            },
            "connectionString": {
              "description": "a connection_string block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name which should be used for this Connection. The name which should be used for this Connection.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of database. Possible values include: APIHub, Custom, DocDb, EventHub, MySQL, NotificationHub, PostgreSQL, RedisCache, ServiceBus, SQLAzure, and SQLServer. Type of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.",
                    "type": "string"
                  }
                }
              }
            },
            "contentShareForceDisabled": {
              "description": "Force disable the content share settings. Force disable the content share settings.",
              "type": "boolean"
            },
            "dailyMemoryTimeQuota": {
              "description": "The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to 0. The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans.",
              "type": "number"
            },
            "enabled": {
              "description": "Is the Linux Function App Slot enabled. Defaults to true. Is the Linux Function App Slot enabled.",
              "type": "boolean"
            },
            "functionsExtensionVersion": {
              "description": "The runtime version associated with the Function App Slot. Defaults to ~4. The runtime version associated with the Function App Slot.",
              "type": "string"
            },
            "httpsOnly": {
              "description": "Can the Function App Slot only be accessed via HTTPS? Can the Function App Slot only be accessed via HTTPS?",
              "type": "boolean"
            },
            "identity": {
              "description": "An identity block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "A list of User Assigned Managed Identity IDs to be assigned to this Linux Function App Slot.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "type": {
                    "description": "Specifies the type of Managed Service Identity that should be configured on this Linux Function App Slot. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                    "type": "string"
                  }
                }
              }
            },
            "keyVaultReferenceIdentityId": {
              "description": "The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the identity block. For more information see - Access vaults with a user-assigned identity The User Assigned Identity to use for Key Vault access.",
              "type": "string"
            },
            "servicePlanId": {
              "description": "The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Linux Function App will be used.",
              "type": "string"
            },
            "siteConfig": {
              "description": "a site_config block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alwaysOn": {
                    "description": "If this Linux Web App is Always On enabled. Defaults to false. If this Linux Web App is Always On enabled. Defaults to `false`.",
                    "type": "boolean"
                  },
                  "apiDefinitionUrl": {
                    "description": "The URL of the API definition that describes this Linux Function App. The URL of the API definition that describes this Linux Function App.",
                    "type": "string"
                  },
                  "apiManagementApiId": {
                    "description": "The ID of the API Management API for this Linux Function App. The ID of the API Management API for this Linux Function App.",
                    "type": "string"
                  },
                  "appCommandLine": {
                    "description": "The program and any arguments used to launch this app via the command line. (Example node myapp.js). The program and any arguments used to launch this app via the command line. (Example `node myapp.js`).",
                    "type": "string"
                  },
                  "appScaleLimit": {
                    "description": "The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan. The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.",
                    "type": "number"
                  },
                  "appServiceLogs": {
                    "description": "an app_service_logs block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "diskQuotaMb": {
                          "description": "The amount of disk space to use for logs. Valid values are between 25 and 100. Defaults to 35. The amount of disk space to use for logs. Valid values are between `25` and `100`.",
                          "type": "number"
                        },
                        "retentionPeriodDays": {
                          "description": "After how many days backups should be deleted. Defaults to 30. The retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "applicationStack": {
                    "description": "an application_stack block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "docker": {
                          "description": "a docker block as detailed below. A docker block",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "imageName": {
                                "description": "The name of the Docker image to use. The name of the Docker image to use.",
                                "type": "string"
                              },
                              "imageTag": {
                                "description": "The image tag of the image to use. The image tag of the image to use.",
                                "type": "string"
                              },
                              "registryUrl": {
                                "description": "The URL of the docker registry. The URL of the docker registry.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "dotnetVersion": {
                          "description": "The version of .Net. Possible values are 3.1, 6.0 and 7.0. The version of .Net. Possible values are `3.1`, `6.0` and `7.0`",
                          "type": "string"
                        },
                        "javaVersion": {
                          "description": "The version of Java to use. Possible values are 8, 11 \u0026 17 (In-Preview). The version of Java to use. Possible values are `8`, `11`, and `17`",
                          "type": "string"
                        },
                        "nodeVersion": {
                          "description": "The version of Node to use. Possible values include 12, 14, 16 and 18 The version of Node to use. Possible values include `12`, `14`, `16` and `18`",
                          "type": "string"
                        },
                        "powershellCoreVersion": {
                          "description": "The version of PowerShell Core to use. Possibles values are 7 , and 7.2. The version of PowerShell Core to use. Possibles values are `7`, and `7.2`",
                          "type": "string"
                        },
                        "pythonVersion": {
                          "description": "The version of Python to use. Possible values are 3.10, 3.9, 3.8 and 3.7. The version of Python to use. Possible values include `3.10`, `3.9`, `3.8`, and `3.7`.",
                          "type": "string"
                        },
                        "useCustomRuntime": {
                          "description": "Should the Linux Function App use a custom runtime?",
                          "type": "boolean"
                        },
                        "useDotnetIsolatedRuntime": {
                          "description": "Should the DotNet process use an isolated runtime. Defaults to false. Should the DotNet process use an isolated runtime. Defaults to `false`.",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "autoSwapSlotName": {
                    "description": "The name of the slot to automatically swap with when this slot is successfully deployed.",
                    "type": "string"
                  },
                  "containerRegistryManagedIdentityClientId": {
                    "description": "The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry. The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.",
                    "type": "string"
                  },
                  "containerRegistryUseManagedIdentity": {
                    "description": "Should connections for Azure Container Registry use Managed Identity. Should connections for Azure Container Registry use Managed Identity.",
                    "type": "boolean"
                  },
                  "cors": {
                    "description": "a cors block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedOrigins": {
                          "description": "an allowed_origins block as detailed below. Specifies a list of origins that should be allowed to make cross-origin calls.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "supportCredentials": {
                          "description": "Are credentials allowed in CORS requests? Defaults to false. Are credentials allowed in CORS requests? Defaults to `false`.",
                          "type": "boolean"
                        }
                      }
                    }
                  },
                  "defaultDocuments": {
                    "description": "a default_documents block as detailed below. Specifies a list of Default Documents for the Linux Web App.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "elasticInstanceMinimum": {
                    "description": "The number of minimum instances for this Linux Function App. Only affects apps on Elastic Premium plans. The number of minimum instances for this Linux Function App. Only affects apps on Elastic Premium plans.",
                    "type": "number"
                  },
                  "ftpsState": {
                    "description": "State of FTP / FTPS service for this function app. Possible values include: AllAllowed, FtpsOnly and Disabled. Defaults to Disabled. State of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.",
                    "type": "string"
                  },
                  "healthCheckEvictionTimeInMin": {
                    "description": "The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Defaults to 10. Only valid in conjunction with health_check_path The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Defaults to `10`. Only valid in conjunction with `health_check_path`",
                    "type": "number"
                  },
                  "healthCheckPath": {
                    "description": "The path to be checked for this function app health. The path to be checked for this function app health.",
                    "type": "string"
                  },
                  "http2Enabled": {
                    "description": "Specifies if the HTTP2 protocol should be enabled. Defaults to false. Specifies if the http2 protocol should be enabled. Defaults to `false`.",
                    "type": "boolean"
                  },
                  "ipRestriction": {
                    "description": "an ip_restriction block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Possible values are Allow or Deny. The action to take. Possible values are `Allow` or `Deny`.",
                          "type": "string"
                        },
                        "headers": {
                          "description": "a headers block as detailed below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "xAzureFdid": {
                                "description": "Specifies a list of Azure Front Door IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xFdHealthProbe": {
                                "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedFor": {
                                "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedHost": {
                                "description": "Specifies a list of Hosts for which matching should be applied.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "ipAddress": {
                          "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32 The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account. The name which should be used for this `ip_restriction`.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The priority value of this ip_restriction. Defaults to 65000. The priority value of this `ip_restriction`.",
                          "type": "number"
                        },
                        "serviceTag": {
                          "description": "The Service Tag used for this IP Restriction. The Service Tag used for this IP Restriction.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "loadBalancingMode": {
                    "description": "The Site load balancing mode. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted. The Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.",
                    "type": "string"
                  },
                  "managedPipelineMode": {
                    "description": "The Managed Pipeline mode. Possible values include: Integrated, Classic. Defaults to Integrated. The Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.",
                    "type": "string"
                  },
                  "minimumTlsVersion": {
                    "description": "The configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2. The configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.",
                    "type": "string"
                  },
                  "preWarmedInstanceCount": {
                    "description": "The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan. The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.",
                    "type": "number"
                  },
                  "remoteDebuggingEnabled": {
                    "description": "Should Remote Debugging be enabled. Defaults to false. Should Remote Debugging be enabled. Defaults to `false`.",
                    "type": "boolean"
                  },
                  "remoteDebuggingVersion": {
                    "description": "The Remote Debugging Version. Possible values include VS2017, VS2019, and VS2022 The Remote Debugging Version. Possible values include `VS2017`, `VS2019`, and `VS2022`",
                    "type": "string"
                  },
                  "runtimeScaleMonitoringEnabled": {
                    "description": "Should Functions Runtime Scale Monitoring be enabled. Should Functions Runtime Scale Monitoring be enabled.",
                    "type": "boolean"
                  },
                  "scmIpRestriction": {
                    "description": "a scm_ip_restriction block as detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Possible values are Allow or Deny. The action to take. Possible values are `Allow` or `Deny`.",
                          "type": "string"
                        },
                        "headers": {
                          "description": "a headers block as detailed below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "xAzureFdid": {
                                "description": "Specifies a list of Azure Front Door IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xFdHealthProbe": {
                                "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedFor": {
                                "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedHost": {
                                "description": "Specifies a list of Hosts for which matching should be applied.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "ipAddress": {
                          "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32 The CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account. The name which should be used for this `ip_restriction`.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The priority value of this ip_restriction. Defaults to 65000. The priority value of this `ip_restriction`.",
                          "type": "number"
                        },
                        "serviceTag": {
                          "description": "The Service Tag used for this IP Restriction. The Service Tag used for this IP Restriction.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "scmMinimumTlsVersion": {
                    "description": "Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2. Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, and  `1.2`. Defaults to `1.2`.",
                    "type": "string"
                  },
                  "scmUseMainIpRestriction": {
                    "description": "Should the Linux Function App ip_restriction configuration be used for the SCM also. Should the Linux Function App `ip_restriction` configuration be used for the SCM also.",
                    "type": "boolean"
                  },
                  "use32BitWorker": {
                    "description": "Should the Linux Web App use a 32-bit worker. Should the Linux Web App use a 32-bit worker.",
                    "type": "boolean"
                  },
                  "vnetRouteAllEnabled": {
                    "description": "Should all outbound traffic to have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to false. Should all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.",
                    "type": "boolean"
                  },
                  "websocketsEnabled": {
                    "description": "Should Web Sockets be enabled. Defaults to false. Should Web Sockets be enabled. Defaults to `false`.",
                    "type": "boolean"
                  },
                  "workerCount": {
                    "description": "The number of Workers for this Linux Function App. The number of Workers for this Linux Function App.",
                    "type": "number"
                  }
                }
              }
            },
            "storageAccount": {
              "description": "One or more storage_account blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accountName": {
                    "description": "The Name of the Storage Account.",
                    "type": "string"
                  },
                  "mountPath": {
                    "description": "The path at which to mount the storage share.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name which should be used for this Storage Account.",
                    "type": "string"
                  },
                  "shareName": {
                    "description": "The Name of the File Share or Container Name for Blob storage.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The Azure Storage Type. Possible values include AzureFiles and AzureBlob.",
                    "type": "string"
                  }
                }
              }
            },
            "storageKeyVaultSecretId": {
              "description": "The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App. The Key Vault Secret ID, including version, that contains the Connection String to connect to the storage account for this Function App.",
              "type": "string"
            },
            "storageUsesManagedIdentity": {
              "description": "Should the Function App Slot use its Managed Identity to access storage. Should the Function App Slot use its Managed Identity to access storage?",
              "type": "boolean"
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Linux Function App.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "managementPolicies": {
          "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              }
            }
          }
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              }
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          }
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          }
        }
      },
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.siteConfig) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.siteConfig))",
          "message": "spec.forProvider.siteConfig is a required parameter"
        }
      ]
    }
  }
}