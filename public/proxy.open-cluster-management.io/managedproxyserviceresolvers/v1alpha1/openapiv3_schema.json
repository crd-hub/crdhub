{
  "$schema": "http://json-schema.org/schema#",
  "description": "ManagedProxyServiceResolver defines a target service that need to expose from a set of managed clusters to the hub.\nTo access a target service on a managed cluster from hub. First, users need to apply a proper ManagedProxyServiceResolver.\nThe managed cluster should match the ManagedClusterSet in the ManagedProxyServiceResolver.Spec. The serviceNamespace and serviceName should also match the target service.\nA usage example: /examples/access-other-services/main.go",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "proxy.open-cluster-management.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "ManagedProxyServiceResolver"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "ManagedProxyServiceResolverSpec defines the desired state of ManagedProxyServiceResolver.",
      "type": "object",
      "required": [
        "managedClusterSelector",
        "serviceSelector"
      ],
      "properties": {
        "managedClusterSelector": {
          "description": "ManagedClusterSelector selects a set of managed clusters.",
          "type": "object",
          "properties": {
            "managedClusterSet": {
              "description": "ManagedClusterSet defines a set of managed clusters that need to expose the service.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name is the name of the managed cluster set.",
                  "type": "string"
                }
              }
            },
            "type": {
              "description": "Type represents the type of the selector. Now only ManagedClusterSet is supported.",
              "type": "string",
              "default": "ManagedClusterSet",
              "enum": [
                "ManagedClusterSet"
              ]
            }
          }
        },
        "serviceSelector": {
          "description": "ServiceSelector selects a service.",
          "type": "object",
          "properties": {
            "serviceRef": {
              "description": "ServiceRef defines a service in a namespace.",
              "type": "object",
              "required": [
                "name",
                "namespace"
              ],
              "properties": {
                "name": {
                  "description": "Name represents the name of the service.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace represents the namespace of the service.",
                  "type": "string"
                }
              }
            },
            "type": {
              "description": "Type represents the type of the selector. Now only ServiceRef type is supported.",
              "type": "string",
              "default": "ServiceRef",
              "enum": [
                "ServiceRef"
              ]
            }
          }
        }
      }
    }
  }
}