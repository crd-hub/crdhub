{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "secretproviderclasses.secrets-store.csi.x-k8s.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.11.4"
    }
  },
  "spec": {
    "group": "secrets-store.csi.x-k8s.io",
    "names": {
      "plural": "secretproviderclasses",
      "singular": "secretproviderclass",
      "kind": "SecretProviderClass",
      "listKind": "SecretProviderClassList"
    },
    "scope": "Namespaced",
    "versions": [
      {
        "name": "v1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "SecretProviderClass is the Schema for the secretproviderclasses API",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "SecretProviderClassSpec defines the desired state of SecretProviderClass",
                "type": "object",
                "properties": {
                  "parameters": {
                    "description": "Configuration for specific provider",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "provider": {
                    "description": "Configuration for provider name",
                    "type": "string"
                  },
                  "secretObjects": {
                    "type": "array",
                    "items": {
                      "description": "SecretObject defines the desired state of synced K8s secret objects",
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "description": "annotations of k8s secret object",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "description": "SecretObjectData defines the desired state of synced K8s secret object data",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "data field to populate",
                                "type": "string"
                              },
                              "objectName": {
                                "description": "name of the object to sync",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "labels": {
                          "description": "labels of K8s secret object",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "secretName": {
                          "description": "name of the K8s secret object",
                          "type": "string"
                        },
                        "type": {
                          "description": "type of K8s secret object",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "SecretProviderClassStatus defines the observed state of SecretProviderClass",
                "type": "object",
                "properties": {
                  "byPod": {
                    "type": "array",
                    "items": {
                      "description": "ByPodStatus defines the state of SecretProviderClass as seen by an individual controller",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "id of the pod that wrote the status",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "namespace of the pod that wrote the status",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "v1alpha1",
        "served": true,
        "storage": false,
        "deprecated": true,
        "deprecationWarning": "secrets-store.csi.x-k8s.io/v1alpha1 is deprecated. Use secrets-store.csi.x-k8s.io/v1 instead.",
        "schema": {
          "openAPIV3Schema": {
            "description": "SecretProviderClass is the Schema for the secretproviderclasses API",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "SecretProviderClassSpec defines the desired state of SecretProviderClass",
                "type": "object",
                "properties": {
                  "parameters": {
                    "description": "Configuration for specific provider",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "provider": {
                    "description": "Configuration for provider name",
                    "type": "string"
                  },
                  "secretObjects": {
                    "type": "array",
                    "items": {
                      "description": "SecretObject defines the desired state of synced K8s secret objects",
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "description": "annotations of k8s secret object",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "description": "SecretObjectData defines the desired state of synced K8s secret object data",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "data field to populate",
                                "type": "string"
                              },
                              "objectName": {
                                "description": "name of the object to sync",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "labels": {
                          "description": "labels of K8s secret object",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "secretName": {
                          "description": "name of the K8s secret object",
                          "type": "string"
                        },
                        "type": {
                          "description": "type of K8s secret object",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "SecretProviderClassStatus defines the observed state of SecretProviderClass",
                "type": "object",
                "properties": {
                  "byPod": {
                    "type": "array",
                    "items": {
                      "description": "ByPodStatus defines the state of SecretProviderClass as seen by an individual controller",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "id of the pod that wrote the status",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "namespace of the pod that wrote the status",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}