{
  "$schema": "http://json-schema.org/schema#",
  "description": "ClusterBinding represents a bound consumer class. It lives in a service provider cluster and is a singleton named \"cluster\".",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "kube-bind.appscode.com/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "ClusterBinding"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "spec represents the data in the newly created ClusterBinding.",
      "type": "object",
      "required": [
        "kubeconfigSecretRef",
        "providerClusterName"
      ],
      "properties": {
        "kubeconfigSecretRef": {
          "description": "kubeconfigSecretName is the secret ref that contains the kubeconfig of the service cluster.",
          "type": "object",
          "required": [
            "key",
            "name"
          ],
          "properties": {
            "key": {
              "description": "The key of the secret to select from.  Must be \"kubeconfig\".",
              "type": "string",
              "enum": [
                "kubeconfig"
              ]
            },
            "name": {
              "description": "Name of the referent.",
              "type": "string",
              "minLength": 1
            }
          },
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "kubeconfigSecretRef is immutable"
            }
          ]
        },
        "providerClusterName": {
          "description": "providerClusterName is the cluster name of the service provider cluster. This can be shared among different ServiceBindings.",
          "type": "string",
          "minLength": 1
        },
        "serviceProviderSpec": {
          "description": "serviceProviderSpec contains all the data and information about the service which has been bound to the service binding request. The service providers decide what they need and what to configure based on what then include in this field, such as service region, type, tiers, etc...",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        }
      }
    }
  },
  "x-kubernetes-validations": [
    {
      "rule": "self.metadata.name == \"cluster\"",
      "message": "cluster binding name should be cluster"
    }
  ]
}