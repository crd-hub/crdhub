{
  "$schema": "http://json-schema.org/schema#",
  "description": "OCIRepository is the Schema for the ocirepositories API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "source.toolkit.fluxcd.io/v1beta2"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "OCIRepository"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "OCIRepositorySpec defines the desired state of OCIRepository",
      "type": "object",
      "required": [
        "interval",
        "url"
      ],
      "properties": {
        "certSecretRef": {
          "description": "CertSecretRef can be given the name of a Secret containing\neither or both of\n\n\n- a PEM-encoded client certificate (`tls.crt`) and private\nkey (`tls.key`);\n- a PEM-encoded CA certificate (`ca.crt`)\n\n\nand whichever are supplied, will be used for connecting to the\nregistry. The client cert and key are useful if you are\nauthenticating with a certificate; the CA cert is useful if\nyou are using a self-signed server certificate. The Secret must\nbe of type `Opaque` or `kubernetes.io/tls`.\n\n\nNote: Support for the `caFile`, `certFile` and `keyFile` keys have\nbeen deprecated.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referent.",
              "type": "string"
            }
          }
        },
        "ignore": {
          "description": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.",
          "type": "string"
        },
        "insecure": {
          "description": "Insecure allows connecting to a non-TLS HTTP container registry.",
          "type": "boolean"
        },
        "interval": {
          "description": "Interval at which the OCIRepository URL is checked for updates.\nThis interval is approximate and may be subject to jitter to ensure\nefficient use of resources.",
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$"
        },
        "layerSelector": {
          "description": "LayerSelector specifies which layer should be extracted from the OCI artifact.\nWhen not specified, the first layer found in the artifact is selected.",
          "type": "object",
          "properties": {
            "mediaType": {
              "description": "MediaType specifies the OCI media type of the layer\nwhich should be extracted from the OCI Artifact. The\nfirst layer matching this type is selected.",
              "type": "string"
            },
            "operation": {
              "description": "Operation specifies how the selected layer should be processed.\nBy default, the layer compressed content is extracted to storage.\nWhen the operation is set to 'copy', the layer compressed content\nis persisted to storage as it is.",
              "type": "string",
              "enum": [
                "extract",
                "copy"
              ]
            }
          }
        },
        "provider": {
          "description": "The provider used for authentication, can be 'aws', 'azure', 'gcp' or 'generic'.\nWhen not specified, defaults to 'generic'.",
          "type": "string",
          "default": "generic",
          "enum": [
            "generic",
            "aws",
            "azure",
            "gcp"
          ]
        },
        "ref": {
          "description": "The OCI reference to pull and monitor for changes,\ndefaults to the latest tag.",
          "type": "object",
          "properties": {
            "digest": {
              "description": "Digest is the image digest to pull, takes precedence over SemVer.\nThe value should be in the format 'sha256:\u003cHASH\u003e'.",
              "type": "string"
            },
            "semver": {
              "description": "SemVer is the range of tags to pull selecting the latest within\nthe range, takes precedence over Tag.",
              "type": "string"
            },
            "semverFilter": {
              "description": "SemverFilter is a regex pattern to filter the tags within the SemVer range.",
              "type": "string"
            },
            "tag": {
              "description": "Tag is the image tag to pull, defaults to latest.",
              "type": "string"
            }
          }
        },
        "secretRef": {
          "description": "SecretRef contains the secret name containing the registry login\ncredentials to resolve image metadata.\nThe secret must be of type kubernetes.io/dockerconfigjson.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referent.",
              "type": "string"
            }
          }
        },
        "serviceAccountName": {
          "description": "ServiceAccountName is the name of the Kubernetes ServiceAccount used to authenticate\nthe image pull if the service account has attached pull secrets. For more information:\nhttps://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#add-imagepullsecrets-to-a-service-account",
          "type": "string"
        },
        "suspend": {
          "description": "This flag tells the controller to suspend the reconciliation of this source.",
          "type": "boolean"
        },
        "timeout": {
          "description": "The timeout for remote OCI Repository operations like pulling, defaults to 60s.",
          "type": "string",
          "default": "60s",
          "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m))+$"
        },
        "url": {
          "description": "URL is a reference to an OCI artifact repository hosted\non a remote container registry.",
          "type": "string",
          "pattern": "^oci://.*$"
        },
        "verify": {
          "description": "Verify contains the secret name containing the trusted public keys\nused to verify the signature and specifies which provider to use to check\nwhether OCI image is authentic.",
          "type": "object",
          "required": [
            "provider"
          ],
          "properties": {
            "matchOIDCIdentity": {
              "description": "MatchOIDCIdentity specifies the identity matching criteria to use\nwhile verifying an OCI artifact which was signed using Cosign keyless\nsigning. The artifact's identity is deemed to be verified if any of the\nspecified matchers match against the identity.",
              "type": "array",
              "items": {
                "description": "OIDCIdentityMatch specifies options for verifying the certificate identity,\ni.e. the issuer and the subject of the certificate.",
                "type": "object",
                "required": [
                  "issuer",
                  "subject"
                ],
                "properties": {
                  "issuer": {
                    "description": "Issuer specifies the regex pattern to match against to verify\nthe OIDC issuer in the Fulcio certificate. The pattern must be a\nvalid Go regular expression.",
                    "type": "string"
                  },
                  "subject": {
                    "description": "Subject specifies the regex pattern to match against to verify\nthe identity subject in the Fulcio certificate. The pattern must\nbe a valid Go regular expression.",
                    "type": "string"
                  }
                }
              }
            },
            "provider": {
              "description": "Provider specifies the technology used to sign the OCI Artifact.",
              "type": "string",
              "default": "cosign",
              "enum": [
                "cosign",
                "notation"
              ]
            },
            "secretRef": {
              "description": "SecretRef specifies the Kubernetes Secret containing the\ntrusted public keys.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referent.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}