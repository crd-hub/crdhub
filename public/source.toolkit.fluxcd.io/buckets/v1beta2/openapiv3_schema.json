{
  "$schema": "http://json-schema.org/schema#",
  "description": "Bucket is the Schema for the buckets API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "source.toolkit.fluxcd.io/v1beta2"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "Bucket"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "BucketSpec specifies the required configuration to produce an Artifact for an object storage bucket.",
      "type": "object",
      "required": [
        "bucketName",
        "endpoint",
        "interval"
      ],
      "properties": {
        "accessFrom": {
          "description": "AccessFrom specifies an Access Control List for allowing cross-namespace references to this object. NOTE: Not implemented, provisional as of https://github.com/fluxcd/flux2/pull/2092",
          "type": "object",
          "required": [
            "namespaceSelectors"
          ],
          "properties": {
            "namespaceSelectors": {
              "description": "NamespaceSelectors is the list of namespace selectors to which this ACL applies. Items in this list are evaluated using a logical OR operation.",
              "type": "array",
              "items": {
                "description": "NamespaceSelector selects the namespaces to which this ACL applies. An empty map of MatchLabels matches all namespaces in a cluster.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "bucketName": {
          "description": "BucketName is the name of the object storage bucket.",
          "type": "string"
        },
        "endpoint": {
          "description": "Endpoint is the object storage address the BucketName is located at.",
          "type": "string"
        },
        "ignore": {
          "description": "Ignore overrides the set of excluded patterns in the .sourceignore format (which is the same as .gitignore). If not provided, a default will be used, consult the documentation for your version to find out what those are.",
          "type": "string"
        },
        "insecure": {
          "description": "Insecure allows connecting to a non-TLS HTTP Endpoint.",
          "type": "boolean"
        },
        "interval": {
          "description": "Interval at which to check the Endpoint for updates.",
          "type": "string",
          "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$"
        },
        "provider": {
          "description": "Provider of the object storage bucket. Defaults to 'generic', which expects an S3 (API) compatible object storage.",
          "type": "string",
          "default": "generic",
          "enum": [
            "generic",
            "aws",
            "gcp",
            "azure"
          ]
        },
        "region": {
          "description": "Region of the Endpoint where the BucketName is located in.",
          "type": "string"
        },
        "secretRef": {
          "description": "SecretRef specifies the Secret containing authentication credentials for the Bucket.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referent.",
              "type": "string"
            }
          }
        },
        "suspend": {
          "description": "Suspend tells the controller to suspend the reconciliation of this Bucket.",
          "type": "boolean"
        },
        "timeout": {
          "description": "Timeout for fetch operations, defaults to 60s.",
          "type": "string",
          "default": "60s",
          "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m))+$"
        }
      }
    }
  }
}