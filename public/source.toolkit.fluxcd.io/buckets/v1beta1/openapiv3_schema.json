{
  "$schema": "http://json-schema.org/schema#",
  "description": "Bucket is the Schema for the buckets API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "source.toolkit.fluxcd.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "Bucket"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "BucketSpec defines the desired state of an S3 compatible bucket",
      "type": "object",
      "required": [
        "bucketName",
        "endpoint",
        "interval"
      ],
      "properties": {
        "accessFrom": {
          "description": "AccessFrom defines an Access Control List for allowing cross-namespace references to this object.",
          "type": "object",
          "required": [
            "namespaceSelectors"
          ],
          "properties": {
            "namespaceSelectors": {
              "description": "NamespaceSelectors is the list of namespace selectors to which this ACL applies.\nItems in this list are evaluated using a logical OR operation.",
              "type": "array",
              "items": {
                "description": "NamespaceSelector selects the namespaces to which this ACL applies.\nAn empty map of MatchLabels matches all namespaces in a cluster.",
                "type": "object",
                "properties": {
                  "matchLabels": {
                    "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "bucketName": {
          "description": "The bucket name.",
          "type": "string"
        },
        "endpoint": {
          "description": "The bucket endpoint address.",
          "type": "string"
        },
        "ignore": {
          "description": "Ignore overrides the set of excluded patterns in the .sourceignore format\n(which is the same as .gitignore). If not provided, a default will be used,\nconsult the documentation for your version to find out what those are.",
          "type": "string"
        },
        "insecure": {
          "description": "Insecure allows connecting to a non-TLS S3 HTTP endpoint.",
          "type": "boolean"
        },
        "interval": {
          "description": "The interval at which to check for bucket updates.",
          "type": "string"
        },
        "provider": {
          "description": "The S3 compatible storage provider name, default ('generic').",
          "type": "string",
          "default": "generic",
          "enum": [
            "generic",
            "aws",
            "gcp"
          ]
        },
        "region": {
          "description": "The bucket region.",
          "type": "string"
        },
        "secretRef": {
          "description": "The name of the secret containing authentication credentials\nfor the Bucket.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referent.",
              "type": "string"
            }
          }
        },
        "suspend": {
          "description": "This flag tells the controller to suspend the reconciliation of this source.",
          "type": "boolean"
        },
        "timeout": {
          "description": "The timeout for download operations, defaults to 60s.",
          "type": "string",
          "default": "60s"
        }
      }
    }
  }
}