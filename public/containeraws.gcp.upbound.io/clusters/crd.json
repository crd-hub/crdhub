{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "clusters.containeraws.gcp.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "containeraws.gcp.upbound.io",
    "names": {
      "plural": "clusters",
      "singular": "cluster",
      "kind": "Cluster",
      "listKind": "ClusterList",
      "categories": [
        "crossplane",
        "managed",
        "gcp"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "Cluster is the Schema for the Clusters API. An Anthos cluster running on AWS.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "ClusterSpec defines the desired state of Cluster",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "required": [
                      "location"
                    ],
                    "properties": {
                      "annotations": {
                        "description": "Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "authorization": {
                        "description": "Configuration related to the cluster RBAC settings.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "adminUsers": {
                              "description": "Users to perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the cluster-admin ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "username": {
                                    "description": "The name of the user, e.g. my-gcp-id@gmail.com.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "awsRegion": {
                        "description": "The AWS region where the cluster runs. Each Google Cloud region supports a subset of nearby AWS regions. You can call to list all supported AWS regions within a given Google Cloud region.",
                        "type": "string"
                      },
                      "controlPlane": {
                        "description": "Configuration related to the cluster control plane.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "awsServicesAuthentication": {
                              "description": "Authentication configuration for management of AWS resources.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "roleArn": {
                                    "description": "The Amazon Resource Name (ARN) of the role that the Anthos Multi-Cloud API will assume when managing AWS resources on your account.",
                                    "type": "string"
                                  },
                                  "roleSessionName": {
                                    "description": "Optional. An identifier for the assumed role session. When unspecified, it defaults to multicloud-service-agent.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "configEncryption": {
                              "description": "The ARN of the AWS KMS key used to encrypt cluster configuration.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "kmsKeyArn": {
                                    "description": "Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "databaseEncryption": {
                              "description": "The ARN of the AWS KMS key used to encrypt cluster secrets.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "kmsKeyArn": {
                                    "description": "Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "iamInstanceProfile": {
                              "description": "The name of the AWS IAM instance pofile to assign to each control plane replica.",
                              "type": "string"
                            },
                            "instanceType": {
                              "description": "Optional. The AWS instance type. When unspecified, it defaults to m5.large.",
                              "type": "string"
                            },
                            "mainVolume": {
                              "description": "Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 8 GiB with the GP2 volume type.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "iops": {
                                    "description": "Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.",
                                    "type": "number"
                                  },
                                  "kmsKeyArn": {
                                    "description": "Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.",
                                    "type": "string"
                                  },
                                  "sizeGib": {
                                    "description": "Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.",
                                    "type": "number"
                                  },
                                  "throughput": {
                                    "description": "Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3.",
                                    "type": "number"
                                  },
                                  "volumeType": {
                                    "description": "Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "proxyConfig": {
                              "description": "Proxy configuration for outbound HTTP(S) traffic.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "secretArn": {
                                    "description": "The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.",
                                    "type": "string"
                                  },
                                  "secretVersion": {
                                    "description": "The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "rootVolume": {
                              "description": "Optional. Configuration related to the root volume provisioned for each control plane replica. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "iops": {
                                    "description": "Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.",
                                    "type": "number"
                                  },
                                  "kmsKeyArn": {
                                    "description": "Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.",
                                    "type": "string"
                                  },
                                  "sizeGib": {
                                    "description": "Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.",
                                    "type": "number"
                                  },
                                  "throughput": {
                                    "description": "Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3.",
                                    "type": "number"
                                  },
                                  "volumeType": {
                                    "description": "Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "securityGroupIds": {
                              "description": "Optional. The IDs of additional security groups to add to control plane replicas. The Anthos Multi-Cloud API will automatically create and manage security groups with the minimum rules needed for a functioning cluster.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "sshConfig": {
                              "description": "Optional. SSH configuration for how to access the underlying control plane machines.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ec2KeyPair": {
                                    "description": "The name of the EC2 key pair used to login into cluster machines.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "subnetIds": {
                              "description": "The list of subnets where control plane replicas will run. A replica will be provisioned on each subnet and up to three values can be provided. Each subnet must be in a different AWS Availability Zone (AZ).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tags": {
                              "description": "Optional. A set of AWS resource tags to propagate to all underlying managed AWS resources. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "version": {
                              "description": "The Kubernetes version to run on control plane replicas (e.g. 1.19.10-gke.1000). You can list all supported versions on a given Google Cloud region by calling .",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "description": {
                        "description": "Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.",
                        "type": "string"
                      },
                      "fleet": {
                        "description": "Fleet configuration.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "project": {
                              "description": "The number of the Fleet host project where this cluster will be registered.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "The location for the resource",
                        "type": "string"
                      },
                      "networking": {
                        "description": "Cluster-wide networking configuration.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "perNodePoolSgRulesDisabled": {
                              "description": "Disable the per node pool subnet security group rules on the control plane security group. When set to true, you must also provide one or more security groups that ensure node pools are able to send requests to the control plane on TCP/443 and TCP/8132. Failure to do so may result in unavailable node pools.",
                              "type": "boolean"
                            },
                            "podAddressCidrBlocks": {
                              "description": "All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "serviceAddressCidrBlocks": {
                              "description": "All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "vpcId": {
                              "description": "The VPC associated with the cluster. All component clusters (i.e. control plane and node pools) run on a single VPC. This field cannot be changed after creation.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "project": {
                        "description": "The project for the resource",
                        "type": "string"
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "description": "Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "authorization": {
                        "description": "Configuration related to the cluster RBAC settings.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "adminUsers": {
                              "description": "Users to perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the cluster-admin ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "username": {
                                    "description": "The name of the user, e.g. my-gcp-id@gmail.com.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "awsRegion": {
                        "description": "The AWS region where the cluster runs. Each Google Cloud region supports a subset of nearby AWS regions. You can call to list all supported AWS regions within a given Google Cloud region.",
                        "type": "string"
                      },
                      "controlPlane": {
                        "description": "Configuration related to the cluster control plane.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "awsServicesAuthentication": {
                              "description": "Authentication configuration for management of AWS resources.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "roleArn": {
                                    "description": "The Amazon Resource Name (ARN) of the role that the Anthos Multi-Cloud API will assume when managing AWS resources on your account.",
                                    "type": "string"
                                  },
                                  "roleSessionName": {
                                    "description": "Optional. An identifier for the assumed role session. When unspecified, it defaults to multicloud-service-agent.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "configEncryption": {
                              "description": "The ARN of the AWS KMS key used to encrypt cluster configuration.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "kmsKeyArn": {
                                    "description": "Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "databaseEncryption": {
                              "description": "The ARN of the AWS KMS key used to encrypt cluster secrets.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "kmsKeyArn": {
                                    "description": "Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "iamInstanceProfile": {
                              "description": "The name of the AWS IAM instance pofile to assign to each control plane replica.",
                              "type": "string"
                            },
                            "instanceType": {
                              "description": "Optional. The AWS instance type. When unspecified, it defaults to m5.large.",
                              "type": "string"
                            },
                            "mainVolume": {
                              "description": "Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 8 GiB with the GP2 volume type.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "iops": {
                                    "description": "Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.",
                                    "type": "number"
                                  },
                                  "kmsKeyArn": {
                                    "description": "Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.",
                                    "type": "string"
                                  },
                                  "sizeGib": {
                                    "description": "Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.",
                                    "type": "number"
                                  },
                                  "throughput": {
                                    "description": "Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3.",
                                    "type": "number"
                                  },
                                  "volumeType": {
                                    "description": "Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "proxyConfig": {
                              "description": "Proxy configuration for outbound HTTP(S) traffic.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "secretArn": {
                                    "description": "The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.",
                                    "type": "string"
                                  },
                                  "secretVersion": {
                                    "description": "The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "rootVolume": {
                              "description": "Optional. Configuration related to the root volume provisioned for each control plane replica. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "iops": {
                                    "description": "Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.",
                                    "type": "number"
                                  },
                                  "kmsKeyArn": {
                                    "description": "Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.",
                                    "type": "string"
                                  },
                                  "sizeGib": {
                                    "description": "Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.",
                                    "type": "number"
                                  },
                                  "throughput": {
                                    "description": "Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3.",
                                    "type": "number"
                                  },
                                  "volumeType": {
                                    "description": "Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "securityGroupIds": {
                              "description": "Optional. The IDs of additional security groups to add to control plane replicas. The Anthos Multi-Cloud API will automatically create and manage security groups with the minimum rules needed for a functioning cluster.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "sshConfig": {
                              "description": "Optional. SSH configuration for how to access the underlying control plane machines.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ec2KeyPair": {
                                    "description": "The name of the EC2 key pair used to login into cluster machines.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "subnetIds": {
                              "description": "The list of subnets where control plane replicas will run. A replica will be provisioned on each subnet and up to three values can be provided. Each subnet must be in a different AWS Availability Zone (AZ).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tags": {
                              "description": "Optional. A set of AWS resource tags to propagate to all underlying managed AWS resources. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "version": {
                              "description": "The Kubernetes version to run on control plane replicas (e.g. 1.19.10-gke.1000). You can list all supported versions on a given Google Cloud region by calling .",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "description": {
                        "description": "Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.",
                        "type": "string"
                      },
                      "fleet": {
                        "description": "Fleet configuration.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "project": {
                              "description": "The number of the Fleet host project where this cluster will be registered.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "networking": {
                        "description": "Cluster-wide networking configuration.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "perNodePoolSgRulesDisabled": {
                              "description": "Disable the per node pool subnet security group rules on the control plane security group. When set to true, you must also provide one or more security groups that ensure node pools are able to send requests to the control plane on TCP/443 and TCP/8132. Failure to do so may result in unavailable node pools.",
                              "type": "boolean"
                            },
                            "podAddressCidrBlocks": {
                              "description": "All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "serviceAddressCidrBlocks": {
                              "description": "All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "vpcId": {
                              "description": "The VPC associated with the cluster. All component clusters (i.e. control plane and node pools) run on a single VPC. This field cannot be changed after creation.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "project": {
                        "description": "The project for the resource",
                        "type": "string"
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.authorization) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.authorization))",
                    "message": "spec.forProvider.authorization is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.awsRegion) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.awsRegion))",
                    "message": "spec.forProvider.awsRegion is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.controlPlane) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.controlPlane))",
                    "message": "spec.forProvider.controlPlane is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.fleet) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.fleet))",
                    "message": "spec.forProvider.fleet is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.networking) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.networking))",
                    "message": "spec.forProvider.networking is a required parameter"
                  }
                ]
              },
              "status": {
                "description": "ClusterStatus defines the observed state of Cluster.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "description": "Optional. Annotations on the cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix  and name , separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "authorization": {
                        "description": "Configuration related to the cluster RBAC settings.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "adminUsers": {
                              "description": "Users to perform operations as a cluster admin. A managed ClusterRoleBinding will be created to grant the cluster-admin ClusterRole to the users. Up to ten admin users can be provided. For more info on RBAC, see https://kubernetes.io/docs/reference/access-authn-authz/rbac/#user-facing-roles",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "username": {
                                    "description": "The name of the user, e.g. my-gcp-id@gmail.com.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "awsRegion": {
                        "description": "The AWS region where the cluster runs. Each Google Cloud region supports a subset of nearby AWS regions. You can call to list all supported AWS regions within a given Google Cloud region.",
                        "type": "string"
                      },
                      "controlPlane": {
                        "description": "Configuration related to the cluster control plane.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "awsServicesAuthentication": {
                              "description": "Authentication configuration for management of AWS resources.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "roleArn": {
                                    "description": "The Amazon Resource Name (ARN) of the role that the Anthos Multi-Cloud API will assume when managing AWS resources on your account.",
                                    "type": "string"
                                  },
                                  "roleSessionName": {
                                    "description": "Optional. An identifier for the assumed role session. When unspecified, it defaults to multicloud-service-agent.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "configEncryption": {
                              "description": "The ARN of the AWS KMS key used to encrypt cluster configuration.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "kmsKeyArn": {
                                    "description": "Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "databaseEncryption": {
                              "description": "The ARN of the AWS KMS key used to encrypt cluster secrets.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "kmsKeyArn": {
                                    "description": "Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "iamInstanceProfile": {
                              "description": "The name of the AWS IAM instance pofile to assign to each control plane replica.",
                              "type": "string"
                            },
                            "instanceType": {
                              "description": "Optional. The AWS instance type. When unspecified, it defaults to m5.large.",
                              "type": "string"
                            },
                            "mainVolume": {
                              "description": "Optional. Configuration related to the main volume provisioned for each control plane replica. The main volume is in charge of storing all of the cluster's etcd state. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 8 GiB with the GP2 volume type.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "iops": {
                                    "description": "Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.",
                                    "type": "number"
                                  },
                                  "kmsKeyArn": {
                                    "description": "Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.",
                                    "type": "string"
                                  },
                                  "sizeGib": {
                                    "description": "Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.",
                                    "type": "number"
                                  },
                                  "throughput": {
                                    "description": "Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3.",
                                    "type": "number"
                                  },
                                  "volumeType": {
                                    "description": "Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "proxyConfig": {
                              "description": "Proxy configuration for outbound HTTP(S) traffic.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "secretArn": {
                                    "description": "The ARN of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.",
                                    "type": "string"
                                  },
                                  "secretVersion": {
                                    "description": "The version string of the AWS Secret Manager secret that contains the HTTP(S) proxy configuration.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "rootVolume": {
                              "description": "Optional. Configuration related to the root volume provisioned for each control plane replica. Volumes will be provisioned in the availability zone associated with the corresponding subnet. When unspecified, it defaults to 32 GiB with the GP2 volume type.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "iops": {
                                    "description": "Optional. The number of I/O operations per second (IOPS) to provision for GP3 volume.",
                                    "type": "number"
                                  },
                                  "kmsKeyArn": {
                                    "description": "Optional. The Amazon Resource Name (ARN) of the Customer Managed Key (CMK) used to encrypt AWS EBS volumes. If not specified, the default Amazon managed key associated to the AWS region where this cluster runs will be used.",
                                    "type": "string"
                                  },
                                  "sizeGib": {
                                    "description": "Optional. The size of the volume, in GiBs. When unspecified, a default value is provided. See the specific reference in the parent resource.",
                                    "type": "number"
                                  },
                                  "throughput": {
                                    "description": "Optional. The throughput to provision for the volume, in MiB/s. Only valid if the volume type is GP3.",
                                    "type": "number"
                                  },
                                  "volumeType": {
                                    "description": "Optional. Type of the EBS volume. When unspecified, it defaults to GP2 volume. Possible values: VOLUME_TYPE_UNSPECIFIED, GP2, GP3",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "securityGroupIds": {
                              "description": "Optional. The IDs of additional security groups to add to control plane replicas. The Anthos Multi-Cloud API will automatically create and manage security groups with the minimum rules needed for a functioning cluster.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "sshConfig": {
                              "description": "Optional. SSH configuration for how to access the underlying control plane machines.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "ec2KeyPair": {
                                    "description": "The name of the EC2 key pair used to login into cluster machines.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "subnetIds": {
                              "description": "The list of subnets where control plane replicas will run. A replica will be provisioned on each subnet and up to three values can be provided. Each subnet must be in a different AWS Availability Zone (AZ).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "tags": {
                              "description": "Optional. A set of AWS resource tags to propagate to all underlying managed AWS resources. Specify at most 50 pairs containing alphanumerics, spaces, and symbols (.+-=_:@/). Keys can be up to 127 Unicode characters. Values can be up to 255 Unicode characters.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "version": {
                              "description": "The Kubernetes version to run on control plane replicas (e.g. 1.19.10-gke.1000). You can list all supported versions on a given Google Cloud region by calling .",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "createTime": {
                        "description": "Output only. The time at which this cluster was created.",
                        "type": "string"
                      },
                      "description": {
                        "description": "Optional. A human readable description of this cluster. Cannot be longer than 255 UTF-8 encoded bytes.",
                        "type": "string"
                      },
                      "endpoint": {
                        "description": "Output only. The endpoint of the cluster's API server.",
                        "type": "string"
                      },
                      "etag": {
                        "description": "Allows clients to perform consistent read-modify-writes through optimistic concurrency control. May be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
                        "type": "string"
                      },
                      "fleet": {
                        "description": "Fleet configuration.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "membership": {
                              "description": "The name of the managed Hub Membership resource associated to this cluster. Membership names are formatted as projects//locations/global/membership/.",
                              "type": "string"
                            },
                            "project": {
                              "description": "The number of the Fleet host project where this cluster will be registered.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "id": {
                        "description": "an identifier for the resource with format projects/{{project}}/locations/{{location}}/awsClusters/{{name}}",
                        "type": "string"
                      },
                      "location": {
                        "description": "The location for the resource",
                        "type": "string"
                      },
                      "networking": {
                        "description": "Cluster-wide networking configuration.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "perNodePoolSgRulesDisabled": {
                              "description": "Disable the per node pool subnet security group rules on the control plane security group. When set to true, you must also provide one or more security groups that ensure node pools are able to send requests to the control plane on TCP/443 and TCP/8132. Failure to do so may result in unavailable node pools.",
                              "type": "boolean"
                            },
                            "podAddressCidrBlocks": {
                              "description": "All pods in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "serviceAddressCidrBlocks": {
                              "description": "All services in the cluster are assigned an RFC1918 IPv4 address from these ranges. Only a single range is supported. This field cannot be changed after creation.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "vpcId": {
                              "description": "The VPC associated with the cluster. All component clusters (i.e. control plane and node pools) run on a single VPC. This field cannot be changed after creation.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "project": {
                        "description": "The project for the resource",
                        "type": "string"
                      },
                      "reconciling": {
                        "description": "Output only. If set, there are currently changes in flight to the cluster.",
                        "type": "boolean"
                      },
                      "state": {
                        "description": "Output only. The current state of the cluster. Possible values: STATE_UNSPECIFIED, PROVISIONING, RUNNING, RECONCILING, STOPPING, ERROR, DEGRADED",
                        "type": "string"
                      },
                      "uid": {
                        "description": "Output only. A globally unique identifier for the cluster.",
                        "type": "string"
                      },
                      "updateTime": {
                        "description": "Output only. The time at which this cluster was last updated.",
                        "type": "string"
                      },
                      "workloadIdentityConfig": {
                        "description": "Output only. Workload Identity settings.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identityProvider": {
                              "type": "string"
                            },
                            "issuerUri": {
                              "type": "string"
                            },
                            "workloadPool": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}