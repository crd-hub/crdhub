{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "leases.coordination.k8s.io",
    "creationTimestamp": null
  },
  "spec": {
    "group": "coordination.k8s.io",
    "names": {
      "plural": "leases",
      "singular": "lease",
      "kind": "Lease",
      "listKind": "LeaseList"
    },
    "scope": "Namespaced",
    "versions": [
      {
        "name": "v1",
        "served": true,
        "storage": false,
        "schema": {
          "openAPIV3Schema": {
            "description": "Lease defines a lease concept.",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "Specification of the Lease. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                "type": "object",
                "properties": {
                  "acquireTime": {
                    "description": "acquireTime is a time when the current lease was acquired.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "holderIdentity": {
                    "description": "holderIdentity contains the identity of the holder of a current lease.",
                    "type": "string"
                  },
                  "leaseDurationSeconds": {
                    "description": "leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed RenewTime.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "leaseTransitions": {
                    "description": "leaseTransitions is the number of transitions of a lease between holders.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "renewTime": {
                    "description": "renewTime is a time when the current holder of a lease has last updated the lease.",
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "Lease defines a lease concept.",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "Specification of the Lease. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
                "type": "object",
                "properties": {
                  "acquireTime": {
                    "description": "acquireTime is a time when the current lease was acquired.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "holderIdentity": {
                    "description": "holderIdentity contains the identity of the holder of a current lease.",
                    "type": "string"
                  },
                  "leaseDurationSeconds": {
                    "description": "leaseDurationSeconds is a duration that candidates for a lease need to wait to force acquire it. This is measure against time of last observed RenewTime.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "leaseTransitions": {
                    "description": "leaseTransitions is the number of transitions of a lease between holders.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "renewTime": {
                    "description": "renewTime is a time when the current holder of a lease has last updated the lease.",
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}