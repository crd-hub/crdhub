{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "iothubs.devices.azure.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "devices.azure.upbound.io",
    "names": {
      "plural": "iothubs",
      "singular": "iothub",
      "kind": "IOTHub",
      "listKind": "IOTHubList",
      "categories": [
        "crossplane",
        "managed",
        "azure"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "IOTHub is the Schema for the IOTHubs API. Manages an IotHub",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "IOTHubSpec defines the desired state of IOTHub",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "properties": {
                      "cloudToDevice": {
                        "description": "A cloud_to_device block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "defaultTtl": {
                              "description": "The default time to live for cloud-to-device messages, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.",
                              "type": "string"
                            },
                            "feedback": {
                              "description": "A feedback block as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "lockDuration": {
                                    "description": "The lock duration for the file upload notifications queue, specified as an ISO 8601 timespan duration. This value must be between 5 and 300 seconds. Defaults to PT1M.",
                                    "type": "string"
                                  },
                                  "maxDeliveryCount": {
                                    "description": "The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to 10.",
                                    "type": "number"
                                  },
                                  "timeToLive": {
                                    "description": "The retention time for service-bound feedback messages, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "maxDeliveryCount": {
                              "description": "The maximum delivery count for cloud-to-device per-device queues. This value must be between 1 and 100. Defaults to 10.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "eventHubPartitionCount": {
                        "description": "The number of device-to-cloud partitions used by backing event hubs. Must be between 2 and 128.",
                        "type": "number"
                      },
                      "eventHubRetentionInDays": {
                        "description": "The event hub retention to use in days. Must be between 1 and 7.",
                        "type": "number"
                      },
                      "fileUpload": {
                        "description": "A file_upload block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "connectionStringSecretRef"
                          ],
                          "properties": {
                            "authenticationType": {
                              "description": "The type used to authenticate against the storage account. Possible values are keyBased and identityBased. Defaults to keyBased.",
                              "type": "string"
                            },
                            "connectionStringSecretRef": {
                              "description": "The connection string for the Azure Storage account to which files are uploaded.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "containerName": {
                              "description": "The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the connection_string specified.",
                              "type": "string"
                            },
                            "defaultTtl": {
                              "description": "The period of time for which a file upload notification message is available to consume before it expires, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.",
                              "type": "string"
                            },
                            "identityId": {
                              "description": "The ID of the User Managed Identity used to authenticate against the storage account.",
                              "type": "string"
                            },
                            "lockDuration": {
                              "description": "The lock duration for the file upload notifications queue, specified as an ISO 8601 timespan duration. This value must be between 5 and 300 seconds. Defaults to PT1M.",
                              "type": "string"
                            },
                            "maxDeliveryCount": {
                              "description": "The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to 10.",
                              "type": "number"
                            },
                            "notifications": {
                              "description": "Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to false.",
                              "type": "boolean"
                            },
                            "sasTtl": {
                              "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 24 hours. Defaults to PT1H.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "An identity block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identityIds": {
                              "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this IoT Hub.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "description": "Specifies the type of Managed Service Identity that should be configured on this IoT Hub. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Specifies the supported Azure location where the resource has to be created. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "minTlsVersion": {
                        "description": "Specifies the minimum TLS version to support for this hub. The only valid value is 1.2. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "networkRuleSet": {
                        "description": "A network_rule_set block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "applyToBuiltinEventhubEndpoint": {
                              "description": "Determines if Network Rule Set is also applied to the BuiltIn EventHub EndPoint of the IotHub. Defaults to false.",
                              "type": "boolean"
                            },
                            "defaultAction": {
                              "description": "Default Action for Network Rule Set. Possible values are Deny, Allow. Defaults to Deny.",
                              "type": "string"
                            },
                            "ipRule": {
                              "description": "One or more ip_rule blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "description": "The desired action for requests captured by this rule. Possible values are Allow. Defaults to Allow.",
                                    "type": "string"
                                  },
                                  "ipMask": {
                                    "description": "The IP address range in CIDR notation for the IP rule.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the sku. Possible values are B1, B2, B3, F1, S1, S2, and S3.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "publicNetworkAccessEnabled": {
                        "description": "Is the IotHub resource accessible from a public network?",
                        "type": "boolean"
                      },
                      "resourceGroupName": {
                        "description": "The name of the resource group under which the IotHub resource has to be created. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "resourceGroupNameRef": {
                        "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "resourceGroupNameSelector": {
                        "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "A sku block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "capacity": {
                              "description": "The number of provisioned IoT Hub units.",
                              "type": "number"
                            },
                            "name": {
                              "description": "The name of the sku. Possible values are B1, B2, B3, F1, S1, S2, and S3.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "tags": {
                        "description": "A mapping of tags to assign to the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "cloudToDevice": {
                        "description": "A cloud_to_device block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "defaultTtl": {
                              "description": "The default time to live for cloud-to-device messages, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.",
                              "type": "string"
                            },
                            "feedback": {
                              "description": "A feedback block as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "lockDuration": {
                                    "description": "The lock duration for the file upload notifications queue, specified as an ISO 8601 timespan duration. This value must be between 5 and 300 seconds. Defaults to PT1M.",
                                    "type": "string"
                                  },
                                  "maxDeliveryCount": {
                                    "description": "The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to 10.",
                                    "type": "number"
                                  },
                                  "timeToLive": {
                                    "description": "The retention time for service-bound feedback messages, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "maxDeliveryCount": {
                              "description": "The maximum delivery count for cloud-to-device per-device queues. This value must be between 1 and 100. Defaults to 10.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "eventHubPartitionCount": {
                        "description": "The number of device-to-cloud partitions used by backing event hubs. Must be between 2 and 128.",
                        "type": "number"
                      },
                      "eventHubRetentionInDays": {
                        "description": "The event hub retention to use in days. Must be between 1 and 7.",
                        "type": "number"
                      },
                      "fileUpload": {
                        "description": "A file_upload block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "authenticationType": {
                              "description": "The type used to authenticate against the storage account. Possible values are keyBased and identityBased. Defaults to keyBased.",
                              "type": "string"
                            },
                            "containerName": {
                              "description": "The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the connection_string specified.",
                              "type": "string"
                            },
                            "defaultTtl": {
                              "description": "The period of time for which a file upload notification message is available to consume before it expires, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.",
                              "type": "string"
                            },
                            "identityId": {
                              "description": "The ID of the User Managed Identity used to authenticate against the storage account.",
                              "type": "string"
                            },
                            "lockDuration": {
                              "description": "The lock duration for the file upload notifications queue, specified as an ISO 8601 timespan duration. This value must be between 5 and 300 seconds. Defaults to PT1M.",
                              "type": "string"
                            },
                            "maxDeliveryCount": {
                              "description": "The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to 10.",
                              "type": "number"
                            },
                            "notifications": {
                              "description": "Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to false.",
                              "type": "boolean"
                            },
                            "sasTtl": {
                              "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 24 hours. Defaults to PT1H.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "identity": {
                        "description": "An identity block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identityIds": {
                              "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this IoT Hub.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "description": "Specifies the type of Managed Service Identity that should be configured on this IoT Hub. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Specifies the supported Azure location where the resource has to be created. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "minTlsVersion": {
                        "description": "Specifies the minimum TLS version to support for this hub. The only valid value is 1.2. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "networkRuleSet": {
                        "description": "A network_rule_set block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "applyToBuiltinEventhubEndpoint": {
                              "description": "Determines if Network Rule Set is also applied to the BuiltIn EventHub EndPoint of the IotHub. Defaults to false.",
                              "type": "boolean"
                            },
                            "defaultAction": {
                              "description": "Default Action for Network Rule Set. Possible values are Deny, Allow. Defaults to Deny.",
                              "type": "string"
                            },
                            "ipRule": {
                              "description": "One or more ip_rule blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "description": "The desired action for requests captured by this rule. Possible values are Allow. Defaults to Allow.",
                                    "type": "string"
                                  },
                                  "ipMask": {
                                    "description": "The IP address range in CIDR notation for the IP rule.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the sku. Possible values are B1, B2, B3, F1, S1, S2, and S3.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "publicNetworkAccessEnabled": {
                        "description": "Is the IotHub resource accessible from a public network?",
                        "type": "boolean"
                      },
                      "sku": {
                        "description": "A sku block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "capacity": {
                              "description": "The number of provisioned IoT Hub units.",
                              "type": "number"
                            },
                            "name": {
                              "description": "The name of the sku. Possible values are B1, B2, B3, F1, S1, S2, and S3.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "tags": {
                        "description": "A mapping of tags to assign to the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
                    "message": "spec.forProvider.location is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sku) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.sku))",
                    "message": "spec.forProvider.sku is a required parameter"
                  }
                ]
              },
              "status": {
                "description": "IOTHubStatus defines the observed state of IOTHub.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "cloudToDevice": {
                        "description": "A cloud_to_device block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "defaultTtl": {
                              "description": "The default time to live for cloud-to-device messages, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.",
                              "type": "string"
                            },
                            "feedback": {
                              "description": "A feedback block as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "lockDuration": {
                                    "description": "The lock duration for the file upload notifications queue, specified as an ISO 8601 timespan duration. This value must be between 5 and 300 seconds. Defaults to PT1M.",
                                    "type": "string"
                                  },
                                  "maxDeliveryCount": {
                                    "description": "The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to 10.",
                                    "type": "number"
                                  },
                                  "timeToLive": {
                                    "description": "The retention time for service-bound feedback messages, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "maxDeliveryCount": {
                              "description": "The maximum delivery count for cloud-to-device per-device queues. This value must be between 1 and 100. Defaults to 10.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "endpoint": {
                        "description": "An endpoint block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "authenticationType": {
                              "description": "The type used to authenticate against the endpoint. Possible values are keyBased and identityBased. Defaults to keyBased.",
                              "type": "string"
                            },
                            "batchFrequencyInSeconds": {
                              "description": "Time interval at which blobs are written to storage. Value should be between 60 and 720 seconds. Default value is 300 seconds. This attribute is applicable for endpoint type AzureIotHub.StorageContainer.",
                              "type": "number"
                            },
                            "containerName": {
                              "description": "The name of storage container in the storage account. This attribute is mandatory for endpoint type AzureIotHub.StorageContainer.",
                              "type": "string"
                            },
                            "encoding": {
                              "description": "Encoding that is used to serialize messages to blobs. Supported values are Avro, AvroDeflate and JSON. Default value is Avro. This attribute is applicable for endpoint type AzureIotHub.StorageContainer. Changing this forces a new resource to be created.",
                              "type": "string"
                            },
                            "endpointUri": {
                              "description": "URI of the Service Bus or Event Hubs Namespace endpoint. This attribute can only be specified and is mandatory when authentication_type is identityBased for endpoint type AzureIotHub.ServiceBusQueue, AzureIotHub.ServiceBusTopic or AzureIotHub.EventHub.",
                              "type": "string"
                            },
                            "entityPath": {
                              "description": "Name of the Service Bus Queue/Topic or Event Hub. This attribute can only be specified and is mandatory when authentication_type is identityBased for endpoint type AzureIotHub.ServiceBusQueue, AzureIotHub.ServiceBusTopic or AzureIotHub.EventHub.",
                              "type": "string"
                            },
                            "fileNameFormat": {
                              "description": "File name format for the blob. Default format is {iothub}/{partition}/{YYYY}/{MM}/{DD}/{HH}/{mm}. All parameters are mandatory but can be reordered. This attribute is applicable for endpoint type AzureIotHub.StorageContainer.",
                              "type": "string"
                            },
                            "identityId": {
                              "description": "The ID of the User Managed Identity used to authenticate against the endpoint.",
                              "type": "string"
                            },
                            "maxChunkSizeInBytes": {
                              "description": "Maximum number of bytes for each blob written to storage. Value should be between 10485760(10MB) and 524288000(500MB). Default value is 314572800(300MB). This attribute is applicable for endpoint type AzureIotHub.StorageContainer.",
                              "type": "number"
                            },
                            "name": {
                              "description": "The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: events, operationsMonitoringEvents, fileNotifications and $default.",
                              "type": "string"
                            },
                            "resourceGroupName": {
                              "description": "The resource group in which the endpoint will be created.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The type of the endpoint. Possible values are AzureIotHub.StorageContainer, AzureIotHub.ServiceBusQueue, AzureIotHub.ServiceBusTopic or AzureIotHub.EventHub.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "enrichment": {
                        "description": "A enrichment block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "endpointNames": {
                              "description": "The list of endpoints which will be enriched.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "key": {
                              "description": "The key of the enrichment.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of the enrichment. Value can be any static string, the name of the IoT Hub sending the message (use $iothubname) or information from the device twin (ex: $twin.tags.latitude)",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "eventHubEventsEndpoint": {
                        "description": "The EventHub compatible endpoint for events data",
                        "type": "string"
                      },
                      "eventHubEventsNamespace": {
                        "description": "The EventHub namespace for events data",
                        "type": "string"
                      },
                      "eventHubEventsPath": {
                        "description": "The EventHub compatible path for events data",
                        "type": "string"
                      },
                      "eventHubOperationsEndpoint": {
                        "description": "The EventHub compatible endpoint for operational data",
                        "type": "string"
                      },
                      "eventHubOperationsPath": {
                        "description": "The EventHub compatible path for operational data",
                        "type": "string"
                      },
                      "eventHubPartitionCount": {
                        "description": "The number of device-to-cloud partitions used by backing event hubs. Must be between 2 and 128.",
                        "type": "number"
                      },
                      "eventHubRetentionInDays": {
                        "description": "The event hub retention to use in days. Must be between 1 and 7.",
                        "type": "number"
                      },
                      "fallbackRoute": {
                        "description": "A fallback_route block as defined below. If the fallback route is enabled, messages that don't match any of the supplied routes are automatically sent to this route. Defaults to messages/events.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "condition": {
                              "description": "The condition that is evaluated to apply the routing rule. Defaults to true. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language.",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Used to specify whether the fallback route is enabled.",
                              "type": "boolean"
                            },
                            "endpointNames": {
                              "description": "The endpoints to which messages that satisfy the condition are routed. Currently only 1 endpoint is allowed.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "source": {
                              "description": "The source that the routing rule is to be applied to, such as DeviceMessages. Possible values include: Invalid, DeviceMessages, TwinChangeEvents, DeviceLifecycleEvents, DeviceConnectionStateEvents, DeviceJobLifecycleEvents and DigitalTwinChangeEvents.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "fileUpload": {
                        "description": "A file_upload block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "authenticationType": {
                              "description": "The type used to authenticate against the storage account. Possible values are keyBased and identityBased. Defaults to keyBased.",
                              "type": "string"
                            },
                            "containerName": {
                              "description": "The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the connection_string specified.",
                              "type": "string"
                            },
                            "defaultTtl": {
                              "description": "The period of time for which a file upload notification message is available to consume before it expires, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 48 hours. Defaults to PT1H.",
                              "type": "string"
                            },
                            "identityId": {
                              "description": "The ID of the User Managed Identity used to authenticate against the storage account.",
                              "type": "string"
                            },
                            "lockDuration": {
                              "description": "The lock duration for the file upload notifications queue, specified as an ISO 8601 timespan duration. This value must be between 5 and 300 seconds. Defaults to PT1M.",
                              "type": "string"
                            },
                            "maxDeliveryCount": {
                              "description": "The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to 10.",
                              "type": "number"
                            },
                            "notifications": {
                              "description": "Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to false.",
                              "type": "boolean"
                            },
                            "sasTtl": {
                              "description": "The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an ISO 8601 timespan duration. This value must be between 1 minute and 24 hours. Defaults to PT1H.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "hostname": {
                        "description": "The hostname of the IotHub Resource.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The ID of the IoTHub.",
                        "type": "string"
                      },
                      "identity": {
                        "description": "An identity block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identityIds": {
                              "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this IoT Hub.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "principalId": {
                              "description": "The Principal ID associated with this Managed Service Identity.",
                              "type": "string"
                            },
                            "tenantId": {
                              "description": "The Tenant ID associated with this Managed Service Identity.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Specifies the type of Managed Service Identity that should be configured on this IoT Hub. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "Specifies the supported Azure location where the resource has to be created. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "minTlsVersion": {
                        "description": "Specifies the minimum TLS version to support for this hub. The only valid value is 1.2. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "networkRuleSet": {
                        "description": "A network_rule_set block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "applyToBuiltinEventhubEndpoint": {
                              "description": "Determines if Network Rule Set is also applied to the BuiltIn EventHub EndPoint of the IotHub. Defaults to false.",
                              "type": "boolean"
                            },
                            "defaultAction": {
                              "description": "Default Action for Network Rule Set. Possible values are Deny, Allow. Defaults to Deny.",
                              "type": "string"
                            },
                            "ipRule": {
                              "description": "One or more ip_rule blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "description": "The desired action for requests captured by this rule. Possible values are Allow. Defaults to Allow.",
                                    "type": "string"
                                  },
                                  "ipMask": {
                                    "description": "The IP address range in CIDR notation for the IP rule.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the sku. Possible values are B1, B2, B3, F1, S1, S2, and S3.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "publicNetworkAccessEnabled": {
                        "description": "Is the IotHub resource accessible from a public network?",
                        "type": "boolean"
                      },
                      "resourceGroupName": {
                        "description": "The name of the resource group under which the IotHub resource has to be created. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "route": {
                        "description": "A route block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "condition": {
                              "description": "The condition that is evaluated to apply the routing rule. Defaults to true. For grammar, see: https://docs.microsoft.com/azure/iot-hub/iot-hub-devguide-query-language.",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Used to specify whether a route is enabled.",
                              "type": "boolean"
                            },
                            "endpointNames": {
                              "description": "The list of endpoints to which messages that satisfy the condition are routed.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "name": {
                              "description": "The name of the route.",
                              "type": "string"
                            },
                            "source": {
                              "description": "The source that the routing rule is to be applied to, such as DeviceMessages. Possible values include: Invalid, DeviceMessages, TwinChangeEvents, DeviceLifecycleEvents, DeviceConnectionStateEvents, DeviceJobLifecycleEvents and DigitalTwinChangeEvents.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "sharedAccessPolicy": {
                        "description": "One or more shared_access_policy blocks as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "keyName": {
                              "description": "The name of the shared access policy.",
                              "type": "string"
                            },
                            "permissions": {
                              "description": "The permissions assigned to the shared access policy.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "sku": {
                        "description": "A sku block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "capacity": {
                              "description": "The number of provisioned IoT Hub units.",
                              "type": "number"
                            },
                            "name": {
                              "description": "The name of the sku. Possible values are B1, B2, B3, F1, S1, S2, and S3.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "tags": {
                        "description": "A mapping of tags to assign to the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "type": {
                        "description": "Specifies the type of Managed Service Identity that should be configured on this IoT Hub. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                        "type": "string"
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}