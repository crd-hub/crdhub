{
  "$schema": "http://json-schema.org/schema#",
  "description": "StorageLensConfiguration is the Schema for the StorageLensConfigurations API. Provides a resource to manage an S3 Storage Lens configuration.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "s3control.aws.upbound.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "StorageLensConfiguration"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "StorageLensConfigurationSpec defines the desired state of StorageLensConfiguration",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "accountId": {
              "description": "The AWS account ID for the S3 Storage Lens configuration.",
              "type": "string"
            },
            "configId": {
              "description": "The ID of the S3 Storage Lens configuration.",
              "type": "string"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "storageLensConfiguration": {
              "description": "The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accountLevel": {
                    "description": "level configurations of the S3 Storage Lens configuration. See Account Level below for more details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "activityMetrics": {
                          "description": "S3 Storage Lens activity metrics. See Activity Metrics below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Whether the activity metrics are enabled.",
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "advancedCostOptimizationMetrics": {
                          "description": "optimization metrics for S3 Storage Lens. See Advanced Cost-Optimization Metrics below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Whether the S3 Storage Lens configuration is enabled.",
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "advancedDataProtectionMetrics": {
                          "description": "protection metrics for S3 Storage Lens. See Advanced Data-Protection Metrics below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Whether the S3 Storage Lens configuration is enabled.",
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "bucketLevel": {
                          "description": "level configuration. See Bucket Level below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "activityMetrics": {
                                "description": "S3 Storage Lens activity metrics. See Activity Metrics below for more details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "description": "Whether the S3 Storage Lens configuration is enabled.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "advancedCostOptimizationMetrics": {
                                "description": "optimization metrics for S3 Storage Lens. See Advanced Cost-Optimization Metrics below for more details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "description": "Whether the S3 Storage Lens configuration is enabled.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "advancedDataProtectionMetrics": {
                                "description": "protection metrics for S3 Storage Lens. See Advanced Data-Protection Metrics below for more details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "description": "Whether the S3 Storage Lens configuration is enabled.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "detailedStatusCodeMetrics": {
                                "description": "Detailed status code metrics for S3 Storage Lens. See Detailed Status Code Metrics below for more details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "description": "Whether the S3 Storage Lens configuration is enabled.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "prefixLevel": {
                                "description": "level metrics for S3 Storage Lens. See Prefix Level below for more details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "storageMetrics": {
                                      "description": "level storage metrics for S3 Storage Lens. See Prefix Level Storage Metrics below for more details.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "enabled": {
                                            "description": "Whether the S3 Storage Lens configuration is enabled.",
                                            "type": "boolean"
                                          },
                                          "selectionCriteria": {
                                            "description": "Selection criteria. See Selection Criteria below for more details.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "delimiter": {
                                                  "description": "The delimiter of the selection criteria being used.",
                                                  "type": "string"
                                                },
                                                "maxDepth": {
                                                  "description": "The max depth of the selection criteria.",
                                                  "type": "number"
                                                },
                                                "minStorageBytesPercentage": {
                                                  "description": "The minimum number of storage bytes percentage whose metrics will be selected.",
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "detailedStatusCodeMetrics": {
                          "description": "Detailed status code metrics for S3 Storage Lens. See Detailed Status Code Metrics below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Whether the S3 Storage Lens configuration is enabled.",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "awsOrg": {
                    "description": "The Amazon Web Services organization for the S3 Storage Lens configuration. See AWS Org below for more details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "arn": {
                          "description": "The Amazon Resource Name (ARN) of the bucket.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "dataExport": {
                    "description": "Properties of S3 Storage Lens metrics export including the destination, schema and format. See Data Export below for more details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cloudWatchMetrics": {
                          "description": "Amazon CloudWatch publishing for S3 Storage Lens metrics. See Cloud Watch Metrics below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Whether the S3 Storage Lens configuration is enabled.",
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "s3BucketDestination": {
                          "description": "The bucket where the S3 Storage Lens metrics export will be located. See S3 Bucket Destination below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "accountId": {
                                "description": "The account ID of the owner of the S3 Storage Lens metrics export bucket.",
                                "type": "string"
                              },
                              "arn": {
                                "description": "The Amazon Resource Name (ARN) of the bucket.",
                                "type": "string"
                              },
                              "arnRef": {
                                "description": "Reference to a Bucket in s3 to populate arn.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "arnSelector": {
                                "description": "Selector for a Bucket in s3 to populate arn.",
                                "type": "object",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    }
                                  }
                                }
                              },
                              "encryption": {
                                "description": "Encryption of the metrics exports in this bucket. See Encryption below for more details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "sseKms": {
                                      "description": "KMS encryption. See SSE KMS below for more details.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "keyId": {
                                            "description": "KMS key ARN.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "sseS3": {
                                      "description": "S3 encryption. An empty configuration block {} should be used.",
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                }
                              },
                              "format": {
                                "description": "The export format. Valid values: CSV, Parquet.",
                                "type": "string"
                              },
                              "outputSchemaVersion": {
                                "description": "The schema version of the export file. Valid values: V_1.",
                                "type": "string"
                              },
                              "prefix": {
                                "description": "The prefix of the destination bucket where the metrics export will be delivered.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "enabled": {
                    "description": "Whether the S3 Storage Lens configuration is enabled.",
                    "type": "boolean"
                  },
                  "exclude": {
                    "description": "What is excluded in this configuration. Conflicts with include. See Exclude below for more details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "buckets": {
                          "description": "List of S3 bucket ARNs.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "regions": {
                          "description": "List of AWS Regions.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "include": {
                    "description": "What is included in this configuration. Conflicts with exclude. See Include below for more details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "buckets": {
                          "description": "List of S3 bucket ARNs.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "regions": {
                          "description": "List of AWS Regions.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "type": "object",
          "properties": {
            "accountId": {
              "description": "The AWS account ID for the S3 Storage Lens configuration.",
              "type": "string"
            },
            "configId": {
              "description": "The ID of the S3 Storage Lens configuration.",
              "type": "string"
            },
            "storageLensConfiguration": {
              "description": "The S3 Storage Lens configuration. See Storage Lens Configuration below for more details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accountLevel": {
                    "description": "level configurations of the S3 Storage Lens configuration. See Account Level below for more details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "activityMetrics": {
                          "description": "S3 Storage Lens activity metrics. See Activity Metrics below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Whether the activity metrics are enabled.",
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "advancedCostOptimizationMetrics": {
                          "description": "optimization metrics for S3 Storage Lens. See Advanced Cost-Optimization Metrics below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Whether the S3 Storage Lens configuration is enabled.",
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "advancedDataProtectionMetrics": {
                          "description": "protection metrics for S3 Storage Lens. See Advanced Data-Protection Metrics below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Whether the S3 Storage Lens configuration is enabled.",
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "bucketLevel": {
                          "description": "level configuration. See Bucket Level below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "activityMetrics": {
                                "description": "S3 Storage Lens activity metrics. See Activity Metrics below for more details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "description": "Whether the S3 Storage Lens configuration is enabled.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "advancedCostOptimizationMetrics": {
                                "description": "optimization metrics for S3 Storage Lens. See Advanced Cost-Optimization Metrics below for more details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "description": "Whether the S3 Storage Lens configuration is enabled.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "advancedDataProtectionMetrics": {
                                "description": "protection metrics for S3 Storage Lens. See Advanced Data-Protection Metrics below for more details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "description": "Whether the S3 Storage Lens configuration is enabled.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "detailedStatusCodeMetrics": {
                                "description": "Detailed status code metrics for S3 Storage Lens. See Detailed Status Code Metrics below for more details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "enabled": {
                                      "description": "Whether the S3 Storage Lens configuration is enabled.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              },
                              "prefixLevel": {
                                "description": "level metrics for S3 Storage Lens. See Prefix Level below for more details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "storageMetrics": {
                                      "description": "level storage metrics for S3 Storage Lens. See Prefix Level Storage Metrics below for more details.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "enabled": {
                                            "description": "Whether the S3 Storage Lens configuration is enabled.",
                                            "type": "boolean"
                                          },
                                          "selectionCriteria": {
                                            "description": "Selection criteria. See Selection Criteria below for more details.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "delimiter": {
                                                  "description": "The delimiter of the selection criteria being used.",
                                                  "type": "string"
                                                },
                                                "maxDepth": {
                                                  "description": "The max depth of the selection criteria.",
                                                  "type": "number"
                                                },
                                                "minStorageBytesPercentage": {
                                                  "description": "The minimum number of storage bytes percentage whose metrics will be selected.",
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "detailedStatusCodeMetrics": {
                          "description": "Detailed status code metrics for S3 Storage Lens. See Detailed Status Code Metrics below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Whether the S3 Storage Lens configuration is enabled.",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "awsOrg": {
                    "description": "The Amazon Web Services organization for the S3 Storage Lens configuration. See AWS Org below for more details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "arn": {
                          "description": "The Amazon Resource Name (ARN) of the bucket.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "dataExport": {
                    "description": "Properties of S3 Storage Lens metrics export including the destination, schema and format. See Data Export below for more details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cloudWatchMetrics": {
                          "description": "Amazon CloudWatch publishing for S3 Storage Lens metrics. See Cloud Watch Metrics below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "enabled": {
                                "description": "Whether the S3 Storage Lens configuration is enabled.",
                                "type": "boolean"
                              }
                            }
                          }
                        },
                        "s3BucketDestination": {
                          "description": "The bucket where the S3 Storage Lens metrics export will be located. See S3 Bucket Destination below for more details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "accountId": {
                                "description": "The account ID of the owner of the S3 Storage Lens metrics export bucket.",
                                "type": "string"
                              },
                              "encryption": {
                                "description": "Encryption of the metrics exports in this bucket. See Encryption below for more details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "sseKms": {
                                      "description": "KMS encryption. See SSE KMS below for more details.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "keyId": {
                                            "description": "KMS key ARN.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "sseS3": {
                                      "description": "S3 encryption. An empty configuration block {} should be used.",
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      }
                                    }
                                  }
                                }
                              },
                              "format": {
                                "description": "The export format. Valid values: CSV, Parquet.",
                                "type": "string"
                              },
                              "outputSchemaVersion": {
                                "description": "The schema version of the export file. Valid values: V_1.",
                                "type": "string"
                              },
                              "prefix": {
                                "description": "The prefix of the destination bucket where the metrics export will be delivered.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "enabled": {
                    "description": "Whether the S3 Storage Lens configuration is enabled.",
                    "type": "boolean"
                  },
                  "exclude": {
                    "description": "What is excluded in this configuration. Conflicts with include. See Exclude below for more details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "buckets": {
                          "description": "List of S3 bucket ARNs.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "regions": {
                          "description": "List of AWS Regions.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "include": {
                    "description": "What is included in this configuration. Conflicts with exclude. See Include below for more details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "buckets": {
                          "description": "List of S3 bucket ARNs.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "regions": {
                          "description": "List of AWS Regions.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              }
            }
          }
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              }
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          }
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          }
        }
      },
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.configId) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.configId))",
          "message": "spec.forProvider.configId is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storageLensConfiguration) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.storageLensConfiguration))",
          "message": "spec.forProvider.storageLensConfiguration is a required parameter"
        }
      ]
    }
  }
}