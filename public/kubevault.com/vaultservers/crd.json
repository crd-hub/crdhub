{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "vaultservers.kubevault.com",
    "creationTimestamp": null,
    "labels": {
      "app.kubernetes.io/name": "kubevault"
    }
  },
  "spec": {
    "group": "kubevault.com",
    "names": {
      "plural": "vaultservers",
      "singular": "vaultserver",
      "shortNames": [
        "vs"
      ],
      "kind": "VaultServer",
      "listKind": "VaultServerList",
      "categories": [
        "vault",
        "appscode",
        "all"
      ]
    },
    "scope": "Namespaced",
    "versions": [
      {
        "name": "v1alpha1",
        "served": true,
        "storage": false,
        "schema": {
          "openAPIV3Schema": {
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 63,
                    "pattern": "^[a-z]([-a-z0-9]*[a-z0-9])?$"
                  }
                }
              },
              "spec": {
                "type": "object",
                "required": [
                  "backend",
                  "version"
                ],
                "properties": {
                  "allowedSecretEngines": {
                    "description": "AllowedSecretEngines defines the types of Secret Engines that MAY be attached to a\nListener and the trusted namespaces where those Route resources MAY be\npresent.\n\nAlthough a client request may match multiple route rules, only one rule\nmay ultimately receive the request. Matching precedence MUST be\ndetermined in order of the following criteria:\n\n* The most specific match as defined by the Route type.\n* The oldest Route based on creation timestamp. For example, a Route with\n  a creation timestamp of \"2020-09-08 01:02:03\" is given precedence over\n  a Route with a creation timestamp of \"2020-09-08 01:02:04\".\n* If everything else is equivalent, the Route appearing first in\n  alphabetical order (namespace/name) should be given precedence. For\n  example, foo/bar is given precedence over foo/baz.\n\nAll valid rules within a Route attached to this Listener should be\nimplemented. Invalid Route rules can be ignored (sometimes that will mean\nthe full Route). If a Route rule transitions from valid to invalid,\nsupport for that Route rule should be dropped to ensure consistency. For\nexample, even if a filter specified by a Route rule is invalid, the rest\nof the rules within that Route should still be supported.\n\nSupport: Core",
                    "type": "object",
                    "default": {
                      "namespaces": {
                        "from": "Same"
                      }
                    },
                    "properties": {
                      "namespaces": {
                        "description": "Namespaces indicates namespaces from which Secret Engines may be attached to this\nListener. This is restricted to the namespace of this VaultServer by default.",
                        "type": "object",
                        "default": {
                          "from": "Same"
                        },
                        "properties": {
                          "from": {
                            "description": "From indicates where Secret Engines will be selected for this VaultServer. Possible\nvalues are:\n* All: Secret Engines in all namespaces may be used by this VaultServer.\n* Selector: Secret Engines in namespaces selected by the selector may be used by\n  this VaultServer.\n* Same: Only Secret Engines in the same namespace may be used by this VaultServer.",
                            "type": "string",
                            "default": "Same",
                            "enum": [
                              "All",
                              "Selector",
                              "Same"
                            ]
                          },
                          "selector": {
                            "description": "Selector must be specified when From is set to \"Selector\". In that case,\nonly Secret Engines in Namespaces matching this Selector will be selected by this\nVaultServer. This field is ignored for other values of \"From\".",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  }
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      },
                      "secretEngines": {
                        "description": "SecretEngines specifies the types of Secret Engines that are allowed to bind\nto this VaultServer. When unspecified or empty, all types of Secret Engines\nare allowed.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "kv",
                            "pki",
                            "aws",
                            "azure",
                            "gcp",
                            "postgres",
                            "mongodb",
                            "mysql",
                            "elasticsearch",
                            "redis"
                          ]
                        }
                      }
                    }
                  },
                  "authMethods": {
                    "description": "Specifies the list of auth methods to enable",
                    "type": "array",
                    "items": {
                      "description": "AuthMethod contains the information to enable vault auth method\nlinks: https://www.vaultproject.io/api/system/auth.html",
                      "type": "object",
                      "required": [
                        "path",
                        "type"
                      ],
                      "properties": {
                        "config": {
                          "description": "Specifies configuration options for this auth method.",
                          "type": "object",
                          "properties": {
                            "auditNonHMACRequestKeys": {
                              "description": "List of keys that will not be HMAC'd by audit devices in the request data object.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "auditNonHMACResponseKeys": {
                              "description": "List of keys that will not be HMAC'd by audit devices in the response data object.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "defaultLeaseTTL": {
                              "description": "The default lease duration, specified as a string duration like \"5s\" or \"30m\".",
                              "type": "string"
                            },
                            "listingVisibility": {
                              "description": "Speficies whether to show this mount in the UI-specific listing endpoint.",
                              "type": "string"
                            },
                            "maxLeaseTTL": {
                              "description": "The maximum lease duration, specified as a string duration like \"5s\" or \"30m\".",
                              "type": "string"
                            },
                            "passthroughRequestHeaders": {
                              "description": "List of headers to whitelist and pass from the request to the backend.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "pluginName": {
                              "description": "The name of the plugin in the plugin catalog to use.",
                              "type": "string"
                            }
                          }
                        },
                        "description": {
                          "description": "Specifies a human-friendly description of the auth method.",
                          "type": "string"
                        },
                        "local": {
                          "description": "Specifies if the auth method is a local only. Local auth methods are not replicated nor (if a secondary) removed by replication.",
                          "type": "boolean"
                        },
                        "path": {
                          "description": "Specifies the path in which to enable the auth method.\nDefault value is the same as the 'type'",
                          "type": "string"
                        },
                        "pluginName": {
                          "description": "Specifies the name of the auth plugin to use based from the name in the plugin catalog.\nApplies only to plugin methods.",
                          "type": "string"
                        },
                        "type": {
                          "description": " Specifies the name of the authentication method type, such as \"github\" or \"token\".",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "backend": {
                    "description": "backend storage configuration for vault",
                    "type": "object",
                    "properties": {
                      "azure": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/azure.html\n\nAzureSpec defines configuration to set up Google Cloud Storage as backend storage in vault",
                        "type": "object",
                        "required": [
                          "accountKeySecret",
                          "accountName",
                          "container"
                        ],
                        "properties": {
                          "accountKeySecret": {
                            "description": "Specifies the secret containing Azure Storage account key.\nsecret data:\n - account_key:\u003cvalue\u003e",
                            "type": "string"
                          },
                          "accountName": {
                            "description": "Specifies the Azure Storage account name.",
                            "type": "string"
                          },
                          "container": {
                            "description": "Specifies the Azure Storage Blob container name.",
                            "type": "string"
                          },
                          "maxParallel": {
                            "description": " Specifies the maximum number of concurrent operations to take place.",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "consul": {
                        "description": "ref: https://www.vaultproject.io/docs/configuration/storage/consul.html\n\nConsulSpec defines the configuration to set up consul as backend storage in vault",
                        "type": "object",
                        "properties": {
                          "aclTokenSecretName": {
                            "description": "Specifies the secret name that contains ACL token with permission\nto read and write from the path in Consul's key-value store.\nsecret data:\n - aclToken:\u003cvalue\u003e",
                            "type": "string"
                          },
                          "address": {
                            "description": "Specifies the address of the Consul agent to communicate with.\nThis can be an IP address, DNS record, or unix socket.",
                            "type": "string"
                          },
                          "checkTimeout": {
                            "description": "Specifies the check interval used to send health check information\nback to Consul.\nThis is specified using a label suffix like \"30s\" or \"1h\".",
                            "type": "string"
                          },
                          "consistencyMode": {
                            "description": "Specifies the Consul consistency mode.\nPossible values are \"default\" or \"strong\".",
                            "type": "string"
                          },
                          "disableRegistration": {
                            "description": "Specifies whether Vault should register itself with Consul.\nPossible values are \"true\" or \"false\"",
                            "type": "string"
                          },
                          "lockWaitTime": {
                            "description": "Specifies the wait time before a lock lock acquisition is made.\nThis affects the minimum time it takes to cancel a lock acquisition.",
                            "type": "string"
                          },
                          "maxParallel": {
                            "description": "Specifies the maximum number of concurrent requests to Consul.",
                            "type": "string"
                          },
                          "path": {
                            "description": "Specifies the path in Consul's key-value store\nwhere Vault data will be stored.",
                            "type": "string"
                          },
                          "scheme": {
                            "description": "Specifies the scheme to use when communicating with Consul.\nThis can be set to \"http\" or \"https\".",
                            "type": "string"
                          },
                          "service": {
                            "description": "Specifies the name of the service to register in Consul.",
                            "type": "string"
                          },
                          "serviceAddress": {
                            "description": "Specifies a service-specific address to set on the service registration\nin Consul.\nIf unset, Vault will use what it knows to be the HA redirect address\n- which is usually desirable.\nSetting this parameter to \"\" will tell Consul to leverage the configuration\nof the node the service is registered on dynamically.",
                            "type": "string"
                          },
                          "serviceTags": {
                            "description": "Specifies a comma-separated list of tags\nto attach to the service registration in Consul.",
                            "type": "string"
                          },
                          "sessionTTL": {
                            "description": "Specifies the minimum allowed session TTL.\nConsul server has a lower limit of 10s on the session TTL by default.",
                            "type": "string"
                          },
                          "tlsMinVersion": {
                            "description": "Specifies the minimum TLS version to use.\nAccepted values are \"tls10\", \"tls11\" or \"tls12\".",
                            "type": "string"
                          },
                          "tlsSecretName": {
                            "description": "Specifies the secret name that contains tls_ca_file, tls_cert_file and tls_key_file\nfor consul communication\nSecret data:\n - ca.crt\n - client.crt\n - client.key",
                            "type": "string"
                          },
                          "tlsSkipVerify": {
                            "description": "Specifies if the TLS host verification should be disabled.\nIt is highly discouraged that you disable this option.",
                            "type": "boolean"
                          }
                        }
                      },
                      "dynamodb": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/dynamodb.html\n\nDynamoDBSpec defines configuration to set up DynamoDB Storage as backend storage in vault",
                        "type": "object",
                        "properties": {
                          "credentialSecret": {
                            "description": "Specifies the secret name containing AWS access key and AWS secret key\nsecret data:\n - access_key=\u003cvalue\u003e\n - secret_key=\u003cvalue\u003e",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "Specifies an alternative, AWS compatible, DynamoDB endpoint.",
                            "type": "string"
                          },
                          "haEnabled": {
                            "description": "Specifies whether this backend should be used to run Vault in high availability mode.",
                            "type": "boolean"
                          },
                          "maxParallel": {
                            "description": "Specifies the maximum number of parallel operations to take place.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "readCapacity": {
                            "description": "Specifies the maximum number of reads consumed per second on the table",
                            "type": "integer",
                            "format": "int64"
                          },
                          "region": {
                            "description": "Specifies the AWS region",
                            "type": "string"
                          },
                          "sessionTokenSecret": {
                            "description": "Specifies the secret name containing AWS session token\nsecret data:\n - session_token:\u003cvalue\u003e",
                            "type": "string"
                          },
                          "table": {
                            "description": "Specifies the name of the DynamoDB table in which to store Vault data.\nIf the specified table does not yet exist, it will be created during initialization.\ndefault: vault-dynamodb-backend",
                            "type": "string"
                          },
                          "writeCapacity": {
                            "description": "Specifies the maximum number of writes performed per second on the table.",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "etcd": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/etcd.html\n\nEtcdSpec defines configuration to set up etcd as backend storage in vault",
                        "type": "object",
                        "required": [
                          "address"
                        ],
                        "properties": {
                          "address": {
                            "description": "Specifies the addresses of the etcd instances",
                            "type": "string"
                          },
                          "credentialSecretName": {
                            "description": "Specifies the secret name that contain username and password to use when authenticating with the etcd server\nsecret data:\n - username:\u003cvalue\u003e\n - password:\u003cvalue\u003e",
                            "type": "string"
                          },
                          "discoverySrv": {
                            "description": "Specifies the domain name to query for SRV records describing cluster endpoints",
                            "type": "string"
                          },
                          "etcdApi": {
                            "description": "Specifies the version of the API to communicate with etcd",
                            "type": "string"
                          },
                          "haEnable": {
                            "description": "Specifies if high availability should be enabled",
                            "type": "boolean"
                          },
                          "path": {
                            "description": "Specifies the path in etcd where vault data will be stored",
                            "type": "string"
                          },
                          "sync": {
                            "description": "Specifies whether to sync list of available etcd services on startup",
                            "type": "boolean"
                          },
                          "tlsSecretName": {
                            "description": "Specifies the secret name that contains tls_ca_file, tls_cert_file and tls_key_file for etcd communication\nsecret data:\n - ca.crt\n - client.crt\n - client.key",
                            "type": "string"
                          }
                        }
                      },
                      "file": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/filesystem.html\n\nFileSpec defines configuration to set up File system Storage as backend storage in vault",
                        "type": "object",
                        "required": [
                          "path",
                          "volumeClaimTemplate"
                        ],
                        "properties": {
                          "path": {
                            "description": "The absolute path on disk to the directory where the data will be stored.\nIf the directory does not exist, Vault will create it.",
                            "type": "string"
                          },
                          "volumeClaimTemplate": {
                            "description": "volumeClaimTemplate is a claim that pods are allowed to reference.\nThe VaultServer controller is responsible for deploying the claim\nand update the volumeMounts in the Vault server container in the template.",
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "generateName": {
                                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                    "type": "string"
                                  },
                                  "labels": {
                                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "name": {
                                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces",
                                    "type": "string"
                                  },
                                  "ownerReferences": {
                                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.",
                                    "type": "array",
                                    "items": {
                                      "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.",
                                      "type": "object",
                                      "required": [
                                        "apiVersion",
                                        "kind",
                                        "name",
                                        "uid"
                                      ],
                                      "properties": {
                                        "apiVersion": {
                                          "description": "API version of the referent.",
                                          "type": "string"
                                        },
                                        "blockOwnerDeletion": {
                                          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.",
                                          "type": "boolean"
                                        },
                                        "controller": {
                                          "description": "If true, this reference points to the managing controller.",
                                          "type": "boolean"
                                        },
                                        "kind": {
                                          "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                                          "type": "string"
                                        },
                                        "uid": {
                                          "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                                          "type": "string"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    }
                                  }
                                }
                              },
                              "spec": {
                                "description": "Spec defines the desired characteristics of a volume requested by a pod author.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                "type": "object",
                                "properties": {
                                  "accessModes": {
                                    "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "dataSource": {
                                    "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                                    "type": "object",
                                    "required": [
                                      "kind",
                                      "name"
                                    ],
                                    "properties": {
                                      "apiGroup": {
                                        "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "Kind is the type of resource being referenced",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name is the name of resource being referenced",
                                        "type": "string"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "dataSourceRef": {
                                    "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                    "type": "object",
                                    "required": [
                                      "kind",
                                      "name"
                                    ],
                                    "properties": {
                                      "apiGroup": {
                                        "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "Kind is the type of resource being referenced",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name is the name of resource being referenced",
                                        "type": "string"
                                      },
                                      "namespace": {
                                        "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "resources": {
                                    "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                    "type": "object",
                                    "properties": {
                                      "limits": {
                                        "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                        "type": "object",
                                        "additionalProperties": {
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        }
                                      },
                                      "requests": {
                                        "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                        "type": "object",
                                        "additionalProperties": {
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    }
                                  },
                                  "selector": {
                                    "description": "selector is a label query over volumes to consider for binding.",
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "type": "array",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "storageClassName": {
                                    "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                                    "type": "string"
                                  },
                                  "volumeAttributesClassName": {
                                    "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                                    "type": "string"
                                  },
                                  "volumeMode": {
                                    "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                                    "type": "string"
                                  },
                                  "volumeName": {
                                    "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                                    "type": "string"
                                  }
                                }
                              },
                              "status": {
                                "description": "Status represents the current information/status of a persistent volume claim.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                "type": "object",
                                "properties": {
                                  "accessModes": {
                                    "description": "accessModes contains the actual access modes the volume backing the PVC has.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "allocatedResourceStatuses": {
                                    "description": "allocatedResourceStatuses stores status of resource being resized for the given PVC.\nKey names follow standard Kubernetes label syntax. Valid values are either:\n\t* Un-prefixed keys:\n\t\t- storage - the capacity of the volume.\n\t* Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered\nreserved and hence may not be used.\n\nClaimResourceStatus can be in any of following states:\n\t- ControllerResizeInProgress:\n\t\tState set when resize controller starts resizing the volume in control-plane.\n\t- ControllerResizeFailed:\n\t\tState set when resize has failed in resize controller with a terminal error.\n\t- NodeResizePending:\n\t\tState set when resize controller has finished resizing the volume but further resizing of\n\t\tvolume is needed on the node.\n\t- NodeResizeInProgress:\n\t\tState set when kubelet starts resizing the volume.\n\t- NodeResizeFailed:\n\t\tState set when resizing has failed in kubelet with a terminal error. Transient errors don't set\n\t\tNodeResizeFailed.\nFor example: if expanding a PVC for more capacity - this field can be one of the following states:\n\t- pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeFailed\"\nWhen this field is not set, it means that no resize operation is in progress for the given PVC.\n\nA controller that receives PVC update with previously unknown resourceName or ClaimResourceStatus\nshould ignore the update for the purpose it was designed. For example - a controller that\nonly is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid\nresources associated with PVC.\n\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "description": "When a controller receives persistentvolume claim update with ClaimResourceStatus for a resource\nthat it does not recognizes, then it should ignore that update and let other controllers\nhandle it.",
                                      "type": "string"
                                    },
                                    "x-kubernetes-map-type": "granular"
                                  },
                                  "allocatedResources": {
                                    "description": "allocatedResources tracks the resources allocated to a PVC including its capacity.\nKey names follow standard Kubernetes label syntax. Valid values are either:\n\t* Un-prefixed keys:\n\t\t- storage - the capacity of the volume.\n\t* Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered\nreserved and hence may not be used.\n\nCapacity reported here may be larger than the actual capacity when a volume expansion operation\nis requested.\nFor storage quota, the larger value from allocatedResources and PVC.spec.resources is used.\nIf allocatedResources is not set, PVC.spec.resources alone is used for quota calculation.\nIf a volume expansion capacity request is lowered, allocatedResources is only\nlowered if there are no expansion operations in progress and if the actual volume capacity\nis equal or lower than the requested capacity.\n\nA controller that receives PVC update with previously unknown resourceName\nshould ignore the update for the purpose it was designed. For example - a controller that\nonly is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid\nresources associated with PVC.\n\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  },
                                  "capacity": {
                                    "description": "capacity represents the actual resources of the underlying volume.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  },
                                  "conditions": {
                                    "description": "conditions is the current Condition of persistent volume claim. If underlying persistent volume is being\nresized then the Condition will be set to 'Resizing'.",
                                    "type": "array",
                                    "items": {
                                      "description": "PersistentVolumeClaimCondition contains details about state of pvc",
                                      "type": "object",
                                      "required": [
                                        "status",
                                        "type"
                                      ],
                                      "properties": {
                                        "lastProbeTime": {
                                          "description": "lastProbeTime is the time we probed the condition.",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "lastTransitionTime": {
                                          "description": "lastTransitionTime is the time the condition transitioned from one status to another.",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "message": {
                                          "description": "message is the human-readable message indicating details about last transition.",
                                          "type": "string"
                                        },
                                        "reason": {
                                          "description": "reason is a unique, this should be a short, machine understandable string that gives the reason\nfor condition's last transition. If it reports \"Resizing\" that means the underlying\npersistent volume is being resized.",
                                          "type": "string"
                                        },
                                        "status": {
                                          "description": "Status is the status of the condition.\nCan be True, False, Unknown.\nMore info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=state%20of%20pvc-,conditions.status,-(string)%2C%20required",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "Type is the type of the condition.\nMore info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=set%20to%20%27ResizeStarted%27.-,PersistentVolumeClaimCondition,-contains%20details%20about",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-map-keys": [
                                      "type"
                                    ],
                                    "x-kubernetes-list-type": "map"
                                  },
                                  "currentVolumeAttributesClassName": {
                                    "description": "currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using.\nWhen unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim\nThis is a beta field and requires enabling VolumeAttributesClass feature (off by default).",
                                    "type": "string"
                                  },
                                  "modifyVolumeStatus": {
                                    "description": "ModifyVolumeStatus represents the status object of ControllerModifyVolume operation.\nWhen this is unset, there is no ModifyVolume operation being attempted.\nThis is a beta field and requires enabling VolumeAttributesClass feature (off by default).",
                                    "type": "object",
                                    "required": [
                                      "status"
                                    ],
                                    "properties": {
                                      "status": {
                                        "description": "status is the status of the ControllerModifyVolume operation. It can be in any of following states:\n - Pending\n   Pending indicates that the PersistentVolumeClaim cannot be modified due to unmet requirements, such as\n   the specified VolumeAttributesClass not existing.\n - InProgress\n   InProgress indicates that the volume is being modified.\n - Infeasible\n  Infeasible indicates that the request has been rejected as invalid by the CSI driver. To\n\t  resolve the error, a valid VolumeAttributesClass needs to be specified.\nNote: New statuses can be added in the future. Consumers should check for unknown statuses and fail appropriately.",
                                        "type": "string"
                                      },
                                      "targetVolumeAttributesClassName": {
                                        "description": "targetVolumeAttributesClassName is the name of the VolumeAttributesClass the PVC currently being reconciled",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "phase": {
                                    "description": "phase represents the current phase of PersistentVolumeClaim.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "gcs": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/google-cloud-storage.html\n\nGcsSpec defines configuration to set up Google Cloud Storage as backend storage in vault",
                        "type": "object",
                        "required": [
                          "bucket"
                        ],
                        "properties": {
                          "bucket": {
                            "description": "Specifies the name of the bucket to use for storage.",
                            "type": "string"
                          },
                          "chunkSize": {
                            "description": "Specifies the maximum size (in kilobytes) to send in a single request. If set to 0,\nit will attempt to send the whole object at once, but will not retry any failures.",
                            "type": "string"
                          },
                          "credentialSecret": {
                            "description": "Secret containing Google application credential\nsecret data:\n - sa.json:\u003cvalue\u003e",
                            "type": "string"
                          },
                          "haEnabled": {
                            "description": "Specifies if high availability mode is enabled.",
                            "type": "boolean"
                          },
                          "maxParallel": {
                            "description": " Specifies the maximum number of parallel operations to take place.",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "inmem": {
                        "description": "ref: https://www.vaultproject.io/docs/configuration/storage/in-memory.html",
                        "type": "object"
                      },
                      "mysql": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/mysql.html\n\nMySQLSpec defines configuration to set up MySQL Storage as backend storage in vault",
                        "type": "object",
                        "required": [
                          "userCredentialSecret"
                        ],
                        "properties": {
                          "address": {
                            "description": "Specifies the address of the MySQL host.",
                            "type": "string"
                          },
                          "database": {
                            "description": "Specifies the name of the database. If the database does not exist, Vault will attempt to create it.",
                            "type": "string"
                          },
                          "maxParallel": {
                            "description": " Specifies the maximum number of concurrent requests to take place.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "table": {
                            "description": "Specifies the name of the table. If the table does not exist, Vault will attempt to create it.",
                            "type": "string"
                          },
                          "tlsCASecret": {
                            "description": "Specifies the name of the secret containing the CA certificate to connect using TLS.\nsecret data:\n - tls_ca_file=\u003cca_cert\u003e",
                            "type": "string"
                          },
                          "userCredentialSecret": {
                            "description": "Specifies the MySQL username and password to connect to the database\nsecret data:\n - username=\u003cvalue\u003e\n - password=\u003cvalue\u003e",
                            "type": "string"
                          }
                        }
                      },
                      "postgresql": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/postgresql.html\n\nPostgreSQLSpec defines configuration to set up PostgreSQL storage as backend storage in vault",
                        "type": "object",
                        "required": [
                          "connectionURLSecret"
                        ],
                        "properties": {
                          "connectionURLSecret": {
                            "description": "Specifies the name of the secret containing the connection string to use to authenticate and connect to PostgreSQL.\nA full list of supported parameters can be found in the pq library documentation(https://godoc.org/github.com/lib/pq#hdr-Connection_String_Parameters).\nsecret data:\n - connection_url:\u003cdata\u003e",
                            "type": "string"
                          },
                          "maxParallel": {
                            "description": " Specifies the maximum number of concurrent requests to take place.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "table": {
                            "description": "Specifies the name of the table in which to write Vault data.\nThis table must already exist (Vault will not attempt to create it).",
                            "type": "string"
                          }
                        }
                      },
                      "raft": {
                        "description": "RaftSpec defines the configuration for the Raft integrated storage.\nhttps://www.vaultproject.io/docs/configuration/storage/raft",
                        "type": "object",
                        "properties": {
                          "autopilotReconcileInterval": {
                            "description": "This is the interval after which autopilot will pick up any state changes.\ndefault: \"\"",
                            "type": "string"
                          },
                          "maxEntrySize": {
                            "description": "This configures the maximum number of bytes for a raft entry. It applies to both Put operations and transactions.\ndefault: 1048576",
                            "type": "integer",
                            "format": "int64"
                          },
                          "path": {
                            "description": "Path (string: \"\") specifies the filesystem path where the vault data gets stored.\nThis value can be overridden by setting the VAULT_RAFT_PATH environment variable.\ndefault: \"\"",
                            "type": "string"
                          },
                          "performanceMultiplier": {
                            "description": "An integer multiplier used by servers to scale key Raft timing parameters.\nTuning this affects the time it takes Vault to detect leader failures and to perform leader elections,\nat the expense of requiring more network and CPU resources for better performance.\ndefault: 0",
                            "type": "integer",
                            "format": "int64"
                          },
                          "snapshotThreshold": {
                            "description": "This controls the minimum number of raft commit entries between snapshots that are saved to disk.\ndefault: 8192",
                            "type": "integer",
                            "format": "int64"
                          },
                          "storage": {
                            "description": "Storage to specify how storage shall be used.",
                            "type": "object",
                            "properties": {
                              "accessModes": {
                                "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "dataSource": {
                                "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                                "type": "object",
                                "required": [
                                  "kind",
                                  "name"
                                ],
                                "properties": {
                                  "apiGroup": {
                                    "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "Kind is the type of resource being referenced",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name is the name of resource being referenced",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "dataSourceRef": {
                                "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                "type": "object",
                                "required": [
                                  "kind",
                                  "name"
                                ],
                                "properties": {
                                  "apiGroup": {
                                    "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "Kind is the type of resource being referenced",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name is the name of resource being referenced",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                    "type": "string"
                                  }
                                }
                              },
                              "resources": {
                                "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                "type": "object",
                                "properties": {
                                  "limits": {
                                    "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                    "type": "object",
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  },
                                  "requests": {
                                    "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                    "type": "object",
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  }
                                }
                              },
                              "selector": {
                                "description": "selector is a label query over volumes to consider for binding.",
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "type": "array",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "storageClassName": {
                                "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                                "type": "string"
                              },
                              "volumeAttributesClassName": {
                                "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                                "type": "string"
                              },
                              "volumeMode": {
                                "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                                "type": "string"
                              },
                              "volumeName": {
                                "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                                "type": "string"
                              }
                            }
                          },
                          "trailingLogs": {
                            "description": "This controls how many log entries are left in the log store on disk after a snapshot is made.\ndefault: 10000",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "s3": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/s3.html\n\nS3Spec defines configuration to set up Amazon S3 Storage as backend storage in vault",
                        "type": "object",
                        "required": [
                          "bucket"
                        ],
                        "properties": {
                          "bucket": {
                            "description": "Specifies the name of the bucket to use for storage.",
                            "type": "string"
                          },
                          "credentialSecret": {
                            "description": "Specifies the secret name containing AWS access key and AWS secret key\nsecret data:\n - access_key=\u003cvalue\u003e\n - secret_key=\u003cvalue\u003e",
                            "type": "string"
                          },
                          "disableSSL": {
                            "description": "Specifies if SSL should be used for the endpoint connection",
                            "type": "boolean"
                          },
                          "endpoint": {
                            "description": "Specifies an alternative, AWS compatible, S3 endpoint.",
                            "type": "string"
                          },
                          "forcePathStyle": {
                            "description": "Specifies whether to use host bucket style domains with the configured endpoint.",
                            "type": "boolean"
                          },
                          "maxParallel": {
                            "description": "Specifies the maximum number of parallel operations to take place.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "region": {
                            "description": "Specifies the AWS region",
                            "type": "string"
                          },
                          "sessionTokenSecret": {
                            "description": "Specifies the secret name containing AWS session token\nsecret data:\n - session_token:\u003cvalue\u003e",
                            "type": "string"
                          }
                        }
                      },
                      "swift": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/swift.html\n\nSwiftSpec defines configuration to set up Swift Storage as backend storage in vault",
                        "type": "object",
                        "required": [
                          "authURL",
                          "container",
                          "credentialSecret"
                        ],
                        "properties": {
                          "authTokenSecret": {
                            "description": "Specifies secret containing auth token from alternate authentication.\nsecret data:\n - auth_token=\u003cvalue\u003e",
                            "type": "string"
                          },
                          "authURL": {
                            "description": "Specifies the OpenStack authentication endpoint.",
                            "type": "string"
                          },
                          "container": {
                            "description": "Specifies the name of the Swift container.",
                            "type": "string"
                          },
                          "credentialSecret": {
                            "description": "Specifies the name of the secret containing the OpenStack account/username and password\nsecret data:\n - username=\u003cvalue\u003e\n - password=\u003cvalue\u003e",
                            "type": "string"
                          },
                          "domain": {
                            "description": "Specifies the name of the user domain.",
                            "type": "string"
                          },
                          "maxParallel": {
                            "description": " Specifies the maximum number of concurrent requests to take place.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "projectDomain": {
                            "description": "Specifies the name of the project's domain.",
                            "type": "string"
                          },
                          "region": {
                            "description": "Specifies the name of the region.",
                            "type": "string"
                          },
                          "storageURL": {
                            "description": "Specifies storage URL from alternate authentication.",
                            "type": "string"
                          },
                          "tenant": {
                            "description": "Specifies the name of the tenant. If left blank, this will default to the default tenant of the username.",
                            "type": "string"
                          },
                          "tenantID": {
                            "description": "Specifies the id of the tenant.",
                            "type": "string"
                          },
                          "trustID": {
                            "description": "Specifies the id of the trust.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "configSecret": {
                    "description": "ConfigSecret is an optional field to provide extra configuration for vault.\nThis secret contain extra config for vault\nFile name should be 'vault.hcl'.\nIf specified, this file will be appended to the controller configuration file.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "dataSources": {
                    "description": "DataSources is a list of Configmaps/Secrets in the same namespace as the VaultServer\nobject, which shall be mounted into the VaultServer Pods.\nThe data are mounted into /etc/vault/data/\u003cname\u003e.\nThe first data will be named as \"data-0\", second one will be named as \"data-1\" and so on.",
                    "type": "array",
                    "items": {
                      "description": "Represents the source of a volume to mount.\nOnly one of its members may be specified.",
                      "type": "object",
                      "properties": {
                        "awsElasticBlockStore": {
                          "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nDeprecated: AWSElasticBlockStore is deprecated. All operations for the in-tree\nawsElasticBlockStore type are redirected to the ebs.csi.aws.com CSI driver.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                          "type": "object",
                          "required": [
                            "volumeID"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                              "type": "string"
                            },
                            "partition": {
                              "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                              "type": "integer",
                              "format": "int32"
                            },
                            "readOnly": {
                              "description": "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                              "type": "boolean"
                            },
                            "volumeID": {
                              "description": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                              "type": "string"
                            }
                          }
                        },
                        "azureDisk": {
                          "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.\nDeprecated: AzureDisk is deprecated. All operations for the in-tree azureDisk type\nare redirected to the disk.csi.azure.com CSI driver.",
                          "type": "object",
                          "required": [
                            "diskName",
                            "diskURI"
                          ],
                          "properties": {
                            "cachingMode": {
                              "description": "cachingMode is the Host Caching mode: None, Read Only, Read Write.",
                              "type": "string"
                            },
                            "diskName": {
                              "description": "diskName is the Name of the data disk in the blob storage",
                              "type": "string"
                            },
                            "diskURI": {
                              "description": "diskURI is the URI of data disk in the blob storage",
                              "type": "string"
                            },
                            "fsType": {
                              "description": "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": "string",
                              "default": "ext4"
                            },
                            "kind": {
                              "description": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean",
                              "default": false
                            }
                          }
                        },
                        "azureFile": {
                          "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod.\nDeprecated: AzureFile is deprecated. All operations for the in-tree azureFile type\nare redirected to the file.csi.azure.com CSI driver.",
                          "type": "object",
                          "required": [
                            "secretName",
                            "shareName"
                          ],
                          "properties": {
                            "readOnly": {
                              "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean"
                            },
                            "secretName": {
                              "description": "secretName is the  name of secret that contains Azure Storage Account Name and Key",
                              "type": "string"
                            },
                            "shareName": {
                              "description": "shareName is the azure share Name",
                              "type": "string"
                            }
                          }
                        },
                        "cephfs": {
                          "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime.\nDeprecated: CephFS is deprecated and the in-tree cephfs type is no longer supported.",
                          "type": "object",
                          "required": [
                            "monitors"
                          ],
                          "properties": {
                            "monitors": {
                              "description": "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": "boolean"
                            },
                            "secretFile": {
                              "description": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "user": {
                              "description": "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": "string"
                            }
                          }
                        },
                        "cinder": {
                          "description": "cinder represents a cinder volume attached and mounted on kubelets host machine.\nDeprecated: Cinder is deprecated. All operations for the in-tree cinder type\nare redirected to the cinder.csi.openstack.org CSI driver.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                          "type": "object",
                          "required": [
                            "volumeID"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                              "type": "boolean"
                            },
                            "secretRef": {
                              "description": "secretRef is optional: points to a secret object containing parameters used to connect\nto OpenStack.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "volumeID": {
                              "description": "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                              "type": "string"
                            }
                          }
                        },
                        "configMap": {
                          "description": "configMap represents a configMap that should populate this volume",
                          "type": "object",
                          "properties": {
                            "defaultMode": {
                              "description": "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "items": {
                              "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                              "type": "array",
                              "items": {
                                "description": "Maps a string key to a path within a volume.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "path"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the key to project.",
                                    "type": "string"
                                  },
                                  "mode": {
                                    "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "path": {
                                    "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "description": "optional specify whether the ConfigMap or its keys must be defined",
                              "type": "boolean"
                            }
                          },
                          "x-kubernetes-map-type": "atomic"
                        },
                        "csi": {
                          "description": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.",
                          "type": "object",
                          "required": [
                            "driver"
                          ],
                          "properties": {
                            "driver": {
                              "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.",
                              "type": "string"
                            },
                            "fsType": {
                              "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.",
                              "type": "string"
                            },
                            "nodePublishSecretRef": {
                              "description": "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "readOnly": {
                              "description": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).",
                              "type": "boolean"
                            },
                            "volumeAttributes": {
                              "description": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "downwardAPI": {
                          "description": "downwardAPI represents downward API about the pod that should populate this volume",
                          "type": "object",
                          "properties": {
                            "defaultMode": {
                              "description": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "items": {
                              "description": "Items is a list of downward API volume file",
                              "type": "array",
                              "items": {
                                "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                "type": "object",
                                "required": [
                                  "path"
                                ],
                                "properties": {
                                  "fieldRef": {
                                    "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                    "type": "object",
                                    "required": [
                                      "fieldPath"
                                    ],
                                    "properties": {
                                      "apiVersion": {
                                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                        "type": "string"
                                      },
                                      "fieldPath": {
                                        "description": "Path of the field to select in the specified API version.",
                                        "type": "string"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "mode": {
                                    "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "path": {
                                    "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                    "type": "string"
                                  },
                                  "resourceFieldRef": {
                                    "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                    "type": "object",
                                    "required": [
                                      "resource"
                                    ],
                                    "properties": {
                                      "containerName": {
                                        "description": "Container name: required for volumes, optional for env vars",
                                        "type": "string"
                                      },
                                      "divisor": {
                                        "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "resource": {
                                        "description": "Required: resource to select",
                                        "type": "string"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "emptyDir": {
                          "description": "emptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                          "type": "object",
                          "properties": {
                            "medium": {
                              "description": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                              "type": "string"
                            },
                            "sizeLimit": {
                              "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "ephemeral": {
                          "description": "ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time.",
                          "type": "object",
                          "properties": {
                            "volumeClaimTemplate": {
                              "description": "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `\u003cpod name\u003e-\u003cvolume name\u003e` where\n`\u003cvolume name\u003e` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\nRequired, must not be nil.",
                              "type": "object",
                              "required": [
                                "spec"
                              ],
                              "properties": {
                                "metadata": {
                                  "description": "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation.",
                                  "type": "object",
                                  "properties": {
                                    "annotations": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "finalizers": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "labels": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "spec": {
                                  "description": "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here.",
                                  "type": "object",
                                  "properties": {
                                    "accessModes": {
                                      "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "dataSource": {
                                      "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                                      "type": "object",
                                      "required": [
                                        "kind",
                                        "name"
                                      ],
                                      "properties": {
                                        "apiGroup": {
                                          "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                          "type": "string"
                                        },
                                        "kind": {
                                          "description": "Kind is the type of resource being referenced",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name is the name of resource being referenced",
                                          "type": "string"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "dataSourceRef": {
                                      "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                      "type": "object",
                                      "required": [
                                        "kind",
                                        "name"
                                      ],
                                      "properties": {
                                        "apiGroup": {
                                          "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                          "type": "string"
                                        },
                                        "kind": {
                                          "description": "Kind is the type of resource being referenced",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name is the name of resource being referenced",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resources": {
                                      "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                      "type": "object",
                                      "properties": {
                                        "limits": {
                                          "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                          "type": "object",
                                          "additionalProperties": {
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "requests": {
                                          "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                          "type": "object",
                                          "additionalProperties": {
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        }
                                      }
                                    },
                                    "selector": {
                                      "description": "selector is a label query over volumes to consider for binding.",
                                      "type": "object",
                                      "properties": {
                                        "matchExpressions": {
                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                          "type": "array",
                                          "items": {
                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                            "type": "object",
                                            "required": [
                                              "key",
                                              "operator"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "key is the label key that the selector applies to.",
                                                "type": "string"
                                              },
                                              "operator": {
                                                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                "type": "string"
                                              },
                                              "values": {
                                                "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "x-kubernetes-list-type": "atomic"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "matchLabels": {
                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "storageClassName": {
                                      "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                                      "type": "string"
                                    },
                                    "volumeAttributesClassName": {
                                      "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                                      "type": "string"
                                    },
                                    "volumeMode": {
                                      "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                                      "type": "string"
                                    },
                                    "volumeName": {
                                      "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "fc": {
                          "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                          "type": "object",
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": "string"
                            },
                            "lun": {
                              "description": "lun is Optional: FC target lun number",
                              "type": "integer",
                              "format": "int32"
                            },
                            "readOnly": {
                              "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean"
                            },
                            "targetWWNs": {
                              "description": "targetWWNs is Optional: FC target worldwide names (WWNs)",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "wwids": {
                              "description": "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "flexVolume": {
                          "description": "flexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.\nDeprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.",
                          "type": "object",
                          "required": [
                            "driver"
                          ],
                          "properties": {
                            "driver": {
                              "description": "driver is the name of the driver to use for this volume.",
                              "type": "string"
                            },
                            "fsType": {
                              "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                              "type": "string"
                            },
                            "options": {
                              "description": "options is Optional: this field holds extra command options if any.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "readOnly": {
                              "description": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean"
                            },
                            "secretRef": {
                              "description": "secretRef is Optional: secretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            }
                          }
                        },
                        "flocker": {
                          "description": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.\nDeprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.",
                          "type": "object",
                          "properties": {
                            "datasetName": {
                              "description": "datasetName is Name of the dataset stored as metadata -\u003e name on the dataset for Flocker\nshould be considered as deprecated",
                              "type": "string"
                            },
                            "datasetUUID": {
                              "description": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset",
                              "type": "string"
                            }
                          }
                        },
                        "gcePersistentDisk": {
                          "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nDeprecated: GCEPersistentDisk is deprecated. All operations for the in-tree\ngcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                          "type": "object",
                          "required": [
                            "pdName"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                              "type": "string"
                            },
                            "partition": {
                              "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pdName": {
                              "description": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                              "type": "boolean"
                            }
                          }
                        },
                        "gitRepo": {
                          "description": "gitRepo represents a git repository at a particular revision.\nDeprecated: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container.",
                          "type": "object",
                          "required": [
                            "repository"
                          ],
                          "properties": {
                            "directory": {
                              "description": "directory is the target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name.",
                              "type": "string"
                            },
                            "repository": {
                              "description": "repository is the URL",
                              "type": "string"
                            },
                            "revision": {
                              "description": "revision is the commit hash for the specified revision.",
                              "type": "string"
                            }
                          }
                        },
                        "glusterfs": {
                          "description": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nDeprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md",
                          "type": "object",
                          "required": [
                            "endpoints",
                            "path"
                          ],
                          "properties": {
                            "endpoints": {
                              "description": "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                              "type": "string"
                            },
                            "path": {
                              "description": "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                              "type": "boolean"
                            }
                          }
                        },
                        "hostPath": {
                          "description": "hostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                          "type": "object",
                          "required": [
                            "path"
                          ],
                          "properties": {
                            "path": {
                              "description": "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                              "type": "string"
                            },
                            "type": {
                              "description": "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                              "type": "string"
                            }
                          }
                        },
                        "image": {
                          "description": "image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.\nThe volume is resolved at pod startup depending on which PullPolicy value is provided:\n\n- Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.\n- Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.\n- IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.\n\nThe volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.\nA failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.\nThe types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.\nThe OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.\nThe volume will be mounted read-only (ro) and non-executable files (noexec).\nSub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).\nThe field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.",
                          "type": "object",
                          "properties": {
                            "pullPolicy": {
                              "description": "Policy for pulling OCI objects. Possible values are:\nAlways: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.\nNever: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.\nIfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.",
                              "type": "string"
                            },
                            "reference": {
                              "description": "Required: Image or artifact reference to be used.\nBehaves in the same way as pod.spec.containers[*].image.\nPull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.",
                              "type": "string"
                            }
                          }
                        },
                        "iscsi": {
                          "description": "iscsi represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md",
                          "type": "object",
                          "required": [
                            "iqn",
                            "lun",
                            "targetPortal"
                          ],
                          "properties": {
                            "chapAuthDiscovery": {
                              "description": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication",
                              "type": "boolean"
                            },
                            "chapAuthSession": {
                              "description": "chapAuthSession defines whether support iSCSI Session CHAP authentication",
                              "type": "boolean"
                            },
                            "fsType": {
                              "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                              "type": "string"
                            },
                            "initiatorName": {
                              "description": "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n\u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.",
                              "type": "string"
                            },
                            "iqn": {
                              "description": "iqn is the target iSCSI Qualified Name.",
                              "type": "string"
                            },
                            "iscsiInterface": {
                              "description": "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).",
                              "type": "string",
                              "default": "default"
                            },
                            "lun": {
                              "description": "lun represents iSCSI Target Lun number.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "portals": {
                              "description": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "readOnly": {
                              "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.",
                              "type": "boolean"
                            },
                            "secretRef": {
                              "description": "secretRef is the CHAP Secret for iSCSI target and initiator authentication",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "targetPortal": {
                              "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                              "type": "string"
                            }
                          }
                        },
                        "nfs": {
                          "description": "nfs represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                          "type": "object",
                          "required": [
                            "path",
                            "server"
                          ],
                          "properties": {
                            "path": {
                              "description": "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                              "type": "boolean"
                            },
                            "server": {
                              "description": "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                              "type": "string"
                            }
                          }
                        },
                        "persistentVolumeClaim": {
                          "description": "persistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                          "type": "object",
                          "required": [
                            "claimName"
                          ],
                          "properties": {
                            "claimName": {
                              "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                              "type": "boolean"
                            }
                          }
                        },
                        "photonPersistentDisk": {
                          "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.\nDeprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.",
                          "type": "object",
                          "required": [
                            "pdID"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": "string"
                            },
                            "pdID": {
                              "description": "pdID is the ID that identifies Photon Controller persistent disk",
                              "type": "string"
                            }
                          }
                        },
                        "portworxVolume": {
                          "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine.\nDeprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type\nare redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate\nis on.",
                          "type": "object",
                          "required": [
                            "volumeID"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean"
                            },
                            "volumeID": {
                              "description": "volumeID uniquely identifies a Portworx volume",
                              "type": "string"
                            }
                          }
                        },
                        "projected": {
                          "description": "projected items for all in one resources secrets, configmaps, and downward API",
                          "type": "object",
                          "properties": {
                            "defaultMode": {
                              "description": "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "sources": {
                              "description": "sources is the list of volume projections. Each entry in this list\nhandles one source.",
                              "type": "array",
                              "items": {
                                "description": "Projection that may be projected along with other supported volume types.\nExactly one of these fields must be set.",
                                "type": "object",
                                "properties": {
                                  "clusterTrustBundle": {
                                    "description": "ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field\nof ClusterTrustBundle objects in an auto-updating file.\n\nAlpha, gated by the ClusterTrustBundleProjection feature gate.\n\nClusterTrustBundle objects can either be selected by name, or by the\ncombination of signer name and a label selector.\n\nKubelet performs aggressive normalization of the PEM contents written\ninto the pod filesystem.  Esoteric PEM features such as inter-block\ncomments and block headers are stripped.  Certificates are deduplicated.\nThe ordering of certificates within the file is arbitrary, and Kubelet\nmay change the order over time.",
                                    "type": "object",
                                    "required": [
                                      "path"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "description": "Select all ClusterTrustBundles that match this label selector.  Only has\neffect if signerName is set.  Mutually-exclusive with name.  If unset,\ninterpreted as \"match nothing\".  If set but empty, interpreted as \"match\neverything\".",
                                        "type": "object",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                            "type": "array",
                                            "items": {
                                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "operator"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "key is the label key that the selector applies to.",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                }
                                              }
                                            },
                                            "x-kubernetes-list-type": "atomic"
                                          },
                                          "matchLabels": {
                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "name": {
                                        "description": "Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector.",
                                        "type": "string"
                                      },
                                      "optional": {
                                        "description": "If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles.",
                                        "type": "boolean"
                                      },
                                      "path": {
                                        "description": "Relative path from the volume root to write the bundle.",
                                        "type": "string"
                                      },
                                      "signerName": {
                                        "description": "Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "configMap": {
                                    "description": "configMap information about the configMap data to project",
                                    "type": "object",
                                    "properties": {
                                      "items": {
                                        "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                        "type": "array",
                                        "items": {
                                          "description": "Maps a string key to a path within a volume.",
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "path"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "key is the key to project.",
                                              "type": "string"
                                            },
                                            "mode": {
                                              "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "path": {
                                              "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "name": {
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string",
                                        "default": ""
                                      },
                                      "optional": {
                                        "description": "optional specify whether the ConfigMap or its keys must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "downwardAPI": {
                                    "description": "downwardAPI information about the downwardAPI data to project",
                                    "type": "object",
                                    "properties": {
                                      "items": {
                                        "description": "Items is a list of DownwardAPIVolume file",
                                        "type": "array",
                                        "items": {
                                          "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                          "type": "object",
                                          "required": [
                                            "path"
                                          ],
                                          "properties": {
                                            "fieldRef": {
                                              "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                              "type": "object",
                                              "required": [
                                                "fieldPath"
                                              ],
                                              "properties": {
                                                "apiVersion": {
                                                  "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "type": "string"
                                                },
                                                "fieldPath": {
                                                  "description": "Path of the field to select in the specified API version.",
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "mode": {
                                              "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "path": {
                                              "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                              "type": "string"
                                            },
                                            "resourceFieldRef": {
                                              "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                              "type": "object",
                                              "required": [
                                                "resource"
                                              ],
                                              "properties": {
                                                "containerName": {
                                                  "description": "Container name: required for volumes, optional for env vars",
                                                  "type": "string"
                                                },
                                                "divisor": {
                                                  "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                  "anyOf": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "resource": {
                                                  "description": "Required: resource to select",
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    }
                                  },
                                  "secret": {
                                    "description": "secret information about the secret data to project",
                                    "type": "object",
                                    "properties": {
                                      "items": {
                                        "description": "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                        "type": "array",
                                        "items": {
                                          "description": "Maps a string key to a path within a volume.",
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "path"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "key is the key to project.",
                                              "type": "string"
                                            },
                                            "mode": {
                                              "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "path": {
                                              "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "name": {
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string",
                                        "default": ""
                                      },
                                      "optional": {
                                        "description": "optional field specify whether the Secret or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "serviceAccountToken": {
                                    "description": "serviceAccountToken is information about the serviceAccountToken data to project",
                                    "type": "object",
                                    "required": [
                                      "path"
                                    ],
                                    "properties": {
                                      "audience": {
                                        "description": "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.",
                                        "type": "string"
                                      },
                                      "expirationSeconds": {
                                        "description": "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.",
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      "path": {
                                        "description": "path is the path relative to the mount point of the file to project the\ntoken into.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "quobyte": {
                          "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime.\nDeprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.",
                          "type": "object",
                          "required": [
                            "registry",
                            "volume"
                          ],
                          "properties": {
                            "group": {
                              "description": "group to map volume access to\nDefault is no group",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.",
                              "type": "boolean"
                            },
                            "registry": {
                              "description": "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes",
                              "type": "string"
                            },
                            "tenant": {
                              "description": "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin",
                              "type": "string"
                            },
                            "user": {
                              "description": "user to map volume access to\nDefaults to serivceaccount user",
                              "type": "string"
                            },
                            "volume": {
                              "description": "volume is a string that references an already created Quobyte volume by name.",
                              "type": "string"
                            }
                          }
                        },
                        "rbd": {
                          "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.\nDeprecated: RBD is deprecated and the in-tree rbd type is no longer supported.\nMore info: https://examples.k8s.io/volumes/rbd/README.md",
                          "type": "object",
                          "required": [
                            "image",
                            "monitors"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                              "type": "string"
                            },
                            "image": {
                              "description": "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "string"
                            },
                            "keyring": {
                              "description": "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "string",
                              "default": "/etc/ceph/keyring"
                            },
                            "monitors": {
                              "description": "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "pool": {
                              "description": "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "string",
                              "default": "rbd"
                            },
                            "readOnly": {
                              "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "boolean"
                            },
                            "secretRef": {
                              "description": "secretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "user": {
                              "description": "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "string",
                              "default": "admin"
                            }
                          }
                        },
                        "scaleIO": {
                          "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.\nDeprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.",
                          "type": "object",
                          "required": [
                            "gateway",
                            "secretRef",
                            "system"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".",
                              "type": "string",
                              "default": "xfs"
                            },
                            "gateway": {
                              "description": "gateway is the host address of the ScaleIO API Gateway.",
                              "type": "string"
                            },
                            "protectionDomain": {
                              "description": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean"
                            },
                            "secretRef": {
                              "description": "secretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "sslEnabled": {
                              "description": "sslEnabled Flag enable/disable SSL communication with Gateway, default false",
                              "type": "boolean"
                            },
                            "storageMode": {
                              "description": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.",
                              "type": "string",
                              "default": "ThinProvisioned"
                            },
                            "storagePool": {
                              "description": "storagePool is the ScaleIO Storage Pool associated with the protection domain.",
                              "type": "string"
                            },
                            "system": {
                              "description": "system is the name of the storage system as configured in ScaleIO.",
                              "type": "string"
                            },
                            "volumeName": {
                              "description": "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source.",
                              "type": "string"
                            }
                          }
                        },
                        "secret": {
                          "description": "secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                          "type": "object",
                          "properties": {
                            "defaultMode": {
                              "description": "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "items": {
                              "description": "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                              "type": "array",
                              "items": {
                                "description": "Maps a string key to a path within a volume.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "path"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the key to project.",
                                    "type": "string"
                                  },
                                  "mode": {
                                    "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "path": {
                                    "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "optional": {
                              "description": "optional field specify whether the Secret or its keys must be defined",
                              "type": "boolean"
                            },
                            "secretName": {
                              "description": "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                              "type": "string"
                            }
                          }
                        },
                        "storageos": {
                          "description": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.\nDeprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.",
                          "type": "object",
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean"
                            },
                            "secretRef": {
                              "description": "secretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "volumeName": {
                              "description": "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace.",
                              "type": "string"
                            },
                            "volumeNamespace": {
                              "description": "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.",
                              "type": "string"
                            }
                          }
                        },
                        "vsphereVolume": {
                          "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.\nDeprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type\nare redirected to the csi.vsphere.vmware.com CSI driver.",
                          "type": "object",
                          "required": [
                            "volumePath"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": "string"
                            },
                            "storagePolicyID": {
                              "description": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
                              "type": "string"
                            },
                            "storagePolicyName": {
                              "description": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.",
                              "type": "string"
                            },
                            "volumePath": {
                              "description": "volumePath is the path that identifies vSphere volume vmdk",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "halted": {
                    "description": "Indicates that the vault server is halted and all offshoot Kubernetes resources except PVCs are deleted.",
                    "type": "boolean"
                  },
                  "monitor": {
                    "description": "Monitor is used monitor database instance",
                    "type": "object",
                    "properties": {
                      "agent": {
                        "type": "string",
                        "enum": [
                          "prometheus.io/operator",
                          "prometheus.io",
                          "prometheus.io/builtin"
                        ]
                      },
                      "prometheus": {
                        "type": "object",
                        "properties": {
                          "exporter": {
                            "type": "object",
                            "properties": {
                              "args": {
                                "description": "Arguments to the entrypoint.\nThe docker image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax\ncan be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,\nregardless of whether the variable exists or not.\nCannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "List of environment variables to set in the container.\nCannot be updated.",
                                "type": "array",
                                "items": {
                                  "description": "EnvVar represents an environment variable present in a Container.",
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                      "type": "string"
                                    },
                                    "valueFrom": {
                                      "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                      "type": "object",
                                      "properties": {
                                        "configMapKeyRef": {
                                          "description": "Selects a key of a ConfigMap.",
                                          "type": "object",
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "The key to select.",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                              "type": "string",
                                              "default": ""
                                            },
                                            "optional": {
                                              "description": "Specify whether the ConfigMap or its key must be defined",
                                              "type": "boolean"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "fieldRef": {
                                          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                          "type": "object",
                                          "required": [
                                            "fieldPath"
                                          ],
                                          "properties": {
                                            "apiVersion": {
                                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "description": "Path of the field to select in the specified API version.",
                                              "type": "string"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "resourceFieldRef": {
                                          "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                          "type": "object",
                                          "required": [
                                            "resource"
                                          ],
                                          "properties": {
                                            "containerName": {
                                              "description": "Container name: required for volumes, optional for env vars",
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "description": "Required: resource to select",
                                              "type": "string"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "secretKeyRef": {
                                          "description": "Selects a key of a secret in the pod's namespace",
                                          "type": "object",
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                              "type": "string",
                                              "default": ""
                                            },
                                            "optional": {
                                              "description": "Specify whether the Secret or its key must be defined",
                                              "type": "boolean"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "port": {
                                "description": "Port number for the exporter side car.",
                                "type": "integer",
                                "format": "int32",
                                "default": 56790
                              },
                              "resources": {
                                "description": "Compute Resources required by exporter container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                                "type": "object",
                                "properties": {
                                  "claims": {
                                    "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                    "type": "array",
                                    "items": {
                                      "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                          "type": "string"
                                        },
                                        "request": {
                                          "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-map-keys": [
                                      "name"
                                    ],
                                    "x-kubernetes-list-type": "map"
                                  },
                                  "limits": {
                                    "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                    "type": "object",
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  },
                                  "requests": {
                                    "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                    "type": "object",
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  }
                                }
                              },
                              "securityContext": {
                                "description": "Security options the pod should run with.\nMore info: https://kubernetes.io/docs/concepts/policy/security-context/\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                                "type": "object",
                                "properties": {
                                  "allowPrivilegeEscalation": {
                                    "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "boolean"
                                  },
                                  "appArmorProfile": {
                                    "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "localhostProfile": {
                                        "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "capabilities": {
                                    "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "object",
                                    "properties": {
                                      "add": {
                                        "description": "Added capabilities",
                                        "type": "array",
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "drop": {
                                        "description": "Removed capabilities",
                                        "type": "array",
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    }
                                  },
                                  "privileged": {
                                    "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "boolean"
                                  },
                                  "procMount": {
                                    "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "string"
                                  },
                                  "readOnlyRootFilesystem": {
                                    "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "boolean"
                                  },
                                  "runAsGroup": {
                                    "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "runAsNonRoot": {
                                    "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                    "type": "boolean"
                                  },
                                  "runAsUser": {
                                    "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "seLinuxOptions": {
                                    "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "object",
                                    "properties": {
                                      "level": {
                                        "description": "Level is SELinux level label that applies to the container.",
                                        "type": "string"
                                      },
                                      "role": {
                                        "description": "Role is a SELinux role label that applies to the container.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Type is a SELinux type label that applies to the container.",
                                        "type": "string"
                                      },
                                      "user": {
                                        "description": "User is a SELinux user label that applies to the container.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "seccompProfile": {
                                    "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "localhostProfile": {
                                        "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "windowsOptions": {
                                    "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                                    "type": "object",
                                    "properties": {
                                      "gmsaCredentialSpec": {
                                        "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                        "type": "string"
                                      },
                                      "gmsaCredentialSpecName": {
                                        "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                        "type": "string"
                                      },
                                      "hostProcess": {
                                        "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                        "type": "boolean"
                                      },
                                      "runAsUserName": {
                                        "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "serviceMonitor": {
                            "type": "object",
                            "properties": {
                              "interval": {
                                "description": "Interval at which metrics should be scraped",
                                "type": "string"
                              },
                              "labels": {
                                "description": "Labels are key value pairs that is used to select Prometheus instance via ServiceMonitor labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "podTemplate": {
                    "description": "PodTemplate is an optional configuration for pods used to run vault",
                    "type": "object",
                    "properties": {
                      "controller": {
                        "description": "Workload controller's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "spec": {
                        "description": "Specification of the desired behavior of the pod.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                        "type": "object",
                        "properties": {
                          "affinity": {
                            "description": "If specified, the pod's scheduling constraints",
                            "type": "object",
                            "properties": {
                              "nodeAffinity": {
                                "description": "Describes node affinity scheduling rules for the pod.",
                                "type": "object",
                                "properties": {
                                  "preferredDuringSchedulingIgnoredDuringExecution": {
                                    "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.",
                                    "type": "array",
                                    "items": {
                                      "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                      "type": "object",
                                      "required": [
                                        "preference",
                                        "weight"
                                      ],
                                      "properties": {
                                        "preference": {
                                          "description": "A node selector term, associated with the corresponding weight.",
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "description": "A list of node selector requirements by node's labels.",
                                              "type": "array",
                                              "items": {
                                                "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "The label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "matchFields": {
                                              "description": "A list of node selector requirements by node's fields.",
                                              "type": "array",
                                              "items": {
                                                "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "The label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "weight": {
                                          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.",
                                    "type": "object",
                                    "required": [
                                      "nodeSelectorTerms"
                                    ],
                                    "properties": {
                                      "nodeSelectorTerms": {
                                        "description": "Required. A list of node selector terms. The terms are ORed.",
                                        "type": "array",
                                        "items": {
                                          "description": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "description": "A list of node selector requirements by node's labels.",
                                              "type": "array",
                                              "items": {
                                                "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "The label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "matchFields": {
                                              "description": "A list of node selector requirements by node's fields.",
                                              "type": "array",
                                              "items": {
                                                "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "The label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                }
                              },
                              "podAffinity": {
                                "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                "type": "object",
                                "properties": {
                                  "preferredDuringSchedulingIgnoredDuringExecution": {
                                    "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                                    "type": "array",
                                    "items": {
                                      "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                      "type": "object",
                                      "required": [
                                        "podAffinityTerm",
                                        "weight"
                                      ],
                                      "properties": {
                                        "podAffinityTerm": {
                                          "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                          "type": "object",
                                          "required": [
                                            "topologyKey"
                                          ],
                                          "properties": {
                                            "labelSelector": {
                                              "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                              "type": "object",
                                              "properties": {
                                                "matchExpressions": {
                                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                  "type": "array",
                                                  "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                    "type": "object",
                                                    "required": [
                                                      "key",
                                                      "operator"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "description": "key is the label key that the selector applies to.",
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "x-kubernetes-list-type": "atomic"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "matchLabels": {
                                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "matchLabelKeys": {
                                              "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "mismatchLabelKeys": {
                                              "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "namespaceSelector": {
                                              "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                              "type": "object",
                                              "properties": {
                                                "matchExpressions": {
                                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                  "type": "array",
                                                  "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                    "type": "object",
                                                    "required": [
                                                      "key",
                                                      "operator"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "description": "key is the label key that the selector applies to.",
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "x-kubernetes-list-type": "atomic"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "matchLabels": {
                                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "namespaces": {
                                              "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "topologyKey": {
                                              "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "weight": {
                                          "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                    "type": "array",
                                    "items": {
                                      "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key \u003ctopologyKey\u003e matches that of any node on which\na pod of the set of pods is running",
                                      "type": "object",
                                      "required": [
                                        "topologyKey"
                                      ],
                                      "properties": {
                                        "labelSelector": {
                                          "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                              "type": "array",
                                              "items": {
                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "key is the label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "matchLabels": {
                                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "matchLabelKeys": {
                                          "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "mismatchLabelKeys": {
                                          "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "namespaceSelector": {
                                          "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                              "type": "array",
                                              "items": {
                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "key is the label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "matchLabels": {
                                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "namespaces": {
                                          "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "topologyKey": {
                                          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              },
                              "podAntiAffinity": {
                                "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                "type": "object",
                                "properties": {
                                  "preferredDuringSchedulingIgnoredDuringExecution": {
                                    "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                                    "type": "array",
                                    "items": {
                                      "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                      "type": "object",
                                      "required": [
                                        "podAffinityTerm",
                                        "weight"
                                      ],
                                      "properties": {
                                        "podAffinityTerm": {
                                          "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                          "type": "object",
                                          "required": [
                                            "topologyKey"
                                          ],
                                          "properties": {
                                            "labelSelector": {
                                              "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                              "type": "object",
                                              "properties": {
                                                "matchExpressions": {
                                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                  "type": "array",
                                                  "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                    "type": "object",
                                                    "required": [
                                                      "key",
                                                      "operator"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "description": "key is the label key that the selector applies to.",
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "x-kubernetes-list-type": "atomic"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "matchLabels": {
                                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "matchLabelKeys": {
                                              "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "mismatchLabelKeys": {
                                              "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "namespaceSelector": {
                                              "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                              "type": "object",
                                              "properties": {
                                                "matchExpressions": {
                                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                  "type": "array",
                                                  "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                    "type": "object",
                                                    "required": [
                                                      "key",
                                                      "operator"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "description": "key is the label key that the selector applies to.",
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "x-kubernetes-list-type": "atomic"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "matchLabels": {
                                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "namespaces": {
                                              "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "topologyKey": {
                                              "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "weight": {
                                          "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "description": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                    "type": "array",
                                    "items": {
                                      "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key \u003ctopologyKey\u003e matches that of any node on which\na pod of the set of pods is running",
                                      "type": "object",
                                      "required": [
                                        "topologyKey"
                                      ],
                                      "properties": {
                                        "labelSelector": {
                                          "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                              "type": "array",
                                              "items": {
                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "key is the label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "matchLabels": {
                                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "matchLabelKeys": {
                                          "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "mismatchLabelKeys": {
                                          "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "namespaceSelector": {
                                          "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                              "type": "array",
                                              "items": {
                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "key is the label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "matchLabels": {
                                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "namespaces": {
                                          "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "topologyKey": {
                                          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              }
                            }
                          },
                          "args": {
                            "description": "Arguments to the entrypoint.\nThe docker image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax\ncan be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,\nregardless of whether the variable exists or not.\nCannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "containerSecurityContext": {
                            "description": "Security options the pod should run with.\nMore info: https://kubernetes.io/docs/concepts/policy/security-context/\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "boolean"
                              },
                              "appArmorProfile": {
                                "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "localhostProfile": {
                                    "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                    "type": "string"
                                  }
                                }
                              },
                              "capabilities": {
                                "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "description": "Added capabilities",
                                    "type": "array",
                                    "items": {
                                      "description": "Capability represent POSIX capabilities type",
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "drop": {
                                    "description": "Removed capabilities",
                                    "type": "array",
                                    "items": {
                                      "description": "Capability represent POSIX capabilities type",
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              },
                              "privileged": {
                                "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "boolean"
                              },
                              "procMount": {
                                "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "description": "Level is SELinux level label that applies to the container.",
                                    "type": "string"
                                  },
                                  "role": {
                                    "description": "Role is a SELinux role label that applies to the container.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type is a SELinux type label that applies to the container.",
                                    "type": "string"
                                  },
                                  "user": {
                                    "description": "User is a SELinux user label that applies to the container.",
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "localhostProfile": {
                                    "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "dnsConfig": {
                            "description": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.",
                            "type": "object",
                            "properties": {
                              "nameservers": {
                                "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "options": {
                                "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
                                "type": "array",
                                "items": {
                                  "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name is this DNS resolver option's name.\nRequired.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value is this DNS resolver option's value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "searches": {
                                "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            }
                          },
                          "dnsPolicy": {
                            "description": "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'.",
                            "type": "string"
                          },
                          "enableServiceLinks": {
                            "description": "EnableServiceLinks indicates whether information about services should be injected into pod's\nenvironment variables, matching the syntax of Docker links.\nOptional: Defaults to true.",
                            "type": "boolean"
                          },
                          "env": {
                            "description": "List of environment variables to set in the container.\nCannot be updated.",
                            "type": "array",
                            "items": {
                              "description": "EnvVar represents an environment variable present in a Container.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "description": "Selects a key of a ConfigMap.",
                                      "type": "object",
                                      "required": [
                                        "key"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "The key to select.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        },
                                        "optional": {
                                          "description": "Specify whether the ConfigMap or its key must be defined",
                                          "type": "boolean"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "fieldRef": {
                                      "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                      "type": "object",
                                      "required": [
                                        "fieldPath"
                                      ],
                                      "properties": {
                                        "apiVersion": {
                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "description": "Path of the field to select in the specified API version.",
                                          "type": "string"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "resourceFieldRef": {
                                      "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                      "type": "object",
                                      "required": [
                                        "resource"
                                      ],
                                      "properties": {
                                        "containerName": {
                                          "description": "Container name: required for volumes, optional for env vars",
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "resource": {
                                          "description": "Required: resource to select",
                                          "type": "string"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "secretKeyRef": {
                                      "description": "Selects a key of a secret in the pod's namespace",
                                      "type": "object",
                                      "required": [
                                        "key"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        },
                                        "optional": {
                                          "description": "Specify whether the Secret or its key must be defined",
                                          "type": "boolean"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "hostIPC": {
                            "description": "Use the host's ipc namespace.\nOptional: Default to false.",
                            "type": "boolean"
                          },
                          "hostNetwork": {
                            "description": "Host networking requested for this pod. Use the host's network namespace.\nIf this option is set, the ports that will be used must be specified.\nDefault to false.",
                            "type": "boolean"
                          },
                          "hostPID": {
                            "description": "Use the host's pid namespace.\nOptional: Default to false.",
                            "type": "boolean"
                          },
                          "imagePullSecrets": {
                            "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.\nIf specified, these secrets will be passed to individual puller implementations for them to use.\nMore info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
                            "type": "array",
                            "items": {
                              "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "initContainers": {
                            "description": "List of initialization containers belonging to the pod.\nInit containers are executed in order prior to containers being started. If any\ninit container fails, the pod is considered to have failed and is handled according\nto its restartPolicy. The name for an init container or normal container must be\nunique among all containers.\nInit containers may not have Lifecycle actions, Readiness probes, or Liveness probes.\nThe resourceRequirements of an init container are taken into account during scheduling\nby finding the highest request/limit for each resource type, and then using the max of\nof that value or the sum of the normal containers. Limits are applied to init containers\nin a similar fashion.\nInit containers cannot currently be added or removed.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
                            "type": "array",
                            "items": {
                              "description": "A single application container that you want to run within a pod.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "args": {
                                  "description": "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "command": {
                                  "description": "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "env": {
                                  "description": "List of environment variables to set in the container.\nCannot be updated.",
                                  "type": "array",
                                  "items": {
                                    "description": "EnvVar represents an environment variable present in a Container.",
                                    "type": "object",
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                        "type": "string"
                                      },
                                      "valueFrom": {
                                        "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                        "type": "object",
                                        "properties": {
                                          "configMapKeyRef": {
                                            "description": "Selects a key of a ConfigMap.",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key to select.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "fieldRef": {
                                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                            "type": "object",
                                            "required": [
                                              "fieldPath"
                                            ],
                                            "properties": {
                                              "apiVersion": {
                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                "type": "string"
                                              },
                                              "fieldPath": {
                                                "description": "Path of the field to select in the specified API version.",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "resourceFieldRef": {
                                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                            "type": "object",
                                            "required": [
                                              "resource"
                                            ],
                                            "properties": {
                                              "containerName": {
                                                "description": "Container name: required for volumes, optional for env vars",
                                                "type": "string"
                                              },
                                              "divisor": {
                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "anyOf": [
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "string"
                                                  }
                                                ],
                                                "x-kubernetes-int-or-string": true
                                              },
                                              "resource": {
                                                "description": "Required: resource to select",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "secretKeyRef": {
                                            "description": "Selects a key of a secret in the pod's namespace",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "Specify whether the Secret or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-map-keys": [
                                    "name"
                                  ],
                                  "x-kubernetes-list-type": "map"
                                },
                                "envFrom": {
                                  "description": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.",
                                  "type": "array",
                                  "items": {
                                    "description": "EnvFromSource represents the source of a set of ConfigMaps",
                                    "type": "object",
                                    "properties": {
                                      "configMapRef": {
                                        "description": "The ConfigMap to select from",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string",
                                            "default": ""
                                          },
                                          "optional": {
                                            "description": "Specify whether the ConfigMap must be defined",
                                            "type": "boolean"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "prefix": {
                                        "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                        "type": "string"
                                      },
                                      "secretRef": {
                                        "description": "The Secret to select from",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string",
                                            "default": ""
                                          },
                                          "optional": {
                                            "description": "Specify whether the Secret must be defined",
                                            "type": "boolean"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "image": {
                                  "description": "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.",
                                  "type": "string"
                                },
                                "imagePullPolicy": {
                                  "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                                  "type": "string"
                                },
                                "lifecycle": {
                                  "description": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.",
                                  "type": "object",
                                  "properties": {
                                    "postStart": {
                                      "description": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                      "type": "object",
                                      "properties": {
                                        "exec": {
                                          "description": "Exec specifies a command to execute in the container.",
                                          "type": "object",
                                          "properties": {
                                            "command": {
                                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          }
                                        },
                                        "httpGet": {
                                          "description": "HTTPGet specifies an HTTP GET request to perform.",
                                          "type": "object",
                                          "required": [
                                            "port"
                                          ],
                                          "properties": {
                                            "host": {
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                              "type": "string"
                                            },
                                            "httpHeaders": {
                                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                              "type": "array",
                                              "items": {
                                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                                "type": "object",
                                                "required": [
                                                  "name",
                                                  "value"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "description": "The header field value",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "path": {
                                              "description": "Path to access on the HTTP server.",
                                              "type": "string"
                                            },
                                            "port": {
                                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "scheme": {
                                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "sleep": {
                                          "description": "Sleep represents a duration that the container should sleep.",
                                          "type": "object",
                                          "required": [
                                            "seconds"
                                          ],
                                          "properties": {
                                            "seconds": {
                                              "description": "Seconds is the number of seconds to sleep.",
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          }
                                        },
                                        "tcpSocket": {
                                          "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                                          "type": "object",
                                          "required": [
                                            "port"
                                          ],
                                          "properties": {
                                            "host": {
                                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                              "type": "string"
                                            },
                                            "port": {
                                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "x-kubernetes-int-or-string": true
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "preStop": {
                                      "description": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                      "type": "object",
                                      "properties": {
                                        "exec": {
                                          "description": "Exec specifies a command to execute in the container.",
                                          "type": "object",
                                          "properties": {
                                            "command": {
                                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          }
                                        },
                                        "httpGet": {
                                          "description": "HTTPGet specifies an HTTP GET request to perform.",
                                          "type": "object",
                                          "required": [
                                            "port"
                                          ],
                                          "properties": {
                                            "host": {
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                              "type": "string"
                                            },
                                            "httpHeaders": {
                                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                              "type": "array",
                                              "items": {
                                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                                "type": "object",
                                                "required": [
                                                  "name",
                                                  "value"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "description": "The header field value",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "path": {
                                              "description": "Path to access on the HTTP server.",
                                              "type": "string"
                                            },
                                            "port": {
                                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "scheme": {
                                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "sleep": {
                                          "description": "Sleep represents a duration that the container should sleep.",
                                          "type": "object",
                                          "required": [
                                            "seconds"
                                          ],
                                          "properties": {
                                            "seconds": {
                                              "description": "Seconds is the number of seconds to sleep.",
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          }
                                        },
                                        "tcpSocket": {
                                          "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                                          "type": "object",
                                          "required": [
                                            "port"
                                          ],
                                          "properties": {
                                            "host": {
                                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                              "type": "string"
                                            },
                                            "port": {
                                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "x-kubernetes-int-or-string": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "livenessProbe": {
                                  "description": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                  "type": "object",
                                  "properties": {
                                    "exec": {
                                      "description": "Exec specifies a command to execute in the container.",
                                      "type": "object",
                                      "properties": {
                                        "command": {
                                          "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      }
                                    },
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "grpc": {
                                      "description": "GRPC specifies a GRPC HealthCheckRequest.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "port": {
                                          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "service": {
                                          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                          "type": "string",
                                          "default": ""
                                        }
                                      }
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies an HTTP GET request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies a connection to a TCP port.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                },
                                "name": {
                                  "description": "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated.",
                                  "type": "string"
                                },
                                "ports": {
                                  "description": "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated.",
                                  "type": "array",
                                  "items": {
                                    "description": "ContainerPort represents a network port in a single container.",
                                    "type": "object",
                                    "required": [
                                      "containerPort"
                                    ],
                                    "properties": {
                                      "containerPort": {
                                        "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 \u003c x \u003c 65536.",
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "hostIP": {
                                        "description": "What host IP to bind the external port to.",
                                        "type": "string"
                                      },
                                      "hostPort": {
                                        "description": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 \u003c x \u003c 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.",
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "name": {
                                        "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.",
                                        "type": "string"
                                      },
                                      "protocol": {
                                        "description": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".",
                                        "type": "string",
                                        "default": "TCP"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-map-keys": [
                                    "containerPort",
                                    "protocol"
                                  ],
                                  "x-kubernetes-list-type": "map"
                                },
                                "readinessProbe": {
                                  "description": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                  "type": "object",
                                  "properties": {
                                    "exec": {
                                      "description": "Exec specifies a command to execute in the container.",
                                      "type": "object",
                                      "properties": {
                                        "command": {
                                          "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      }
                                    },
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "grpc": {
                                      "description": "GRPC specifies a GRPC HealthCheckRequest.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "port": {
                                          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "service": {
                                          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                          "type": "string",
                                          "default": ""
                                        }
                                      }
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies an HTTP GET request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies a connection to a TCP port.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                },
                                "resizePolicy": {
                                  "description": "Resources resize policy for the container.",
                                  "type": "array",
                                  "items": {
                                    "description": "ContainerResizePolicy represents resource resize policy for the container.",
                                    "type": "object",
                                    "required": [
                                      "resourceName",
                                      "restartPolicy"
                                    ],
                                    "properties": {
                                      "resourceName": {
                                        "description": "Name of the resource to which this resource resize policy applies.\nSupported values: cpu, memory.",
                                        "type": "string"
                                      },
                                      "restartPolicy": {
                                        "description": "Restart policy to apply when specified resource is resized.\nIf not specified, it defaults to NotRequired.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "resources": {
                                  "description": "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "type": "object",
                                  "properties": {
                                    "claims": {
                                      "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                      "type": "array",
                                      "items": {
                                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                            "type": "string"
                                          },
                                          "request": {
                                            "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-kubernetes-list-map-keys": [
                                        "name"
                                      ],
                                      "x-kubernetes-list-type": "map"
                                    },
                                    "limits": {
                                      "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                      "type": "object",
                                      "additionalProperties": {
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "requests": {
                                      "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                      "type": "object",
                                      "additionalProperties": {
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    }
                                  }
                                },
                                "restartPolicy": {
                                  "description": "RestartPolicy defines the restart behavior of individual containers in a pod.\nThis field may only be set for init containers, and the only allowed value is \"Always\".\nFor non-init containers or when this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nSetting the RestartPolicy as \"Always\" for the init container will have the following effect:\nthis init container will be continually restarted on\nexit until all regular containers have terminated. Once all regular\ncontainers have completed, all init containers with restartPolicy \"Always\"\nwill be shut down. This lifecycle differs from normal init containers and\nis often referred to as a \"sidecar\" container. Although this init\ncontainer still starts in the init container sequence, it does not wait\nfor the container to complete before proceeding to the next init\ncontainer. Instead, the next init container starts immediately after this\ninit container is started, or after any startupProbe has successfully\ncompleted.",
                                  "type": "string"
                                },
                                "securityContext": {
                                  "description": "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                                  "type": "object",
                                  "properties": {
                                    "allowPrivilegeEscalation": {
                                      "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "boolean"
                                    },
                                    "appArmorProfile": {
                                      "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "localhostProfile": {
                                          "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "capabilities": {
                                      "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "object",
                                      "properties": {
                                        "add": {
                                          "description": "Added capabilities",
                                          "type": "array",
                                          "items": {
                                            "description": "Capability represent POSIX capabilities type",
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "drop": {
                                          "description": "Removed capabilities",
                                          "type": "array",
                                          "items": {
                                            "description": "Capability represent POSIX capabilities type",
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      }
                                    },
                                    "privileged": {
                                      "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "boolean"
                                    },
                                    "procMount": {
                                      "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "string"
                                    },
                                    "readOnlyRootFilesystem": {
                                      "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "boolean"
                                    },
                                    "runAsGroup": {
                                      "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "runAsNonRoot": {
                                      "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                      "type": "boolean"
                                    },
                                    "runAsUser": {
                                      "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "seLinuxOptions": {
                                      "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "object",
                                      "properties": {
                                        "level": {
                                          "description": "Level is SELinux level label that applies to the container.",
                                          "type": "string"
                                        },
                                        "role": {
                                          "description": "Role is a SELinux role label that applies to the container.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "Type is a SELinux type label that applies to the container.",
                                          "type": "string"
                                        },
                                        "user": {
                                          "description": "User is a SELinux user label that applies to the container.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "seccompProfile": {
                                      "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "localhostProfile": {
                                          "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "windowsOptions": {
                                      "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                                      "type": "object",
                                      "properties": {
                                        "gmsaCredentialSpec": {
                                          "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                          "type": "string"
                                        },
                                        "gmsaCredentialSpecName": {
                                          "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                          "type": "string"
                                        },
                                        "hostProcess": {
                                          "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                          "type": "boolean"
                                        },
                                        "runAsUserName": {
                                          "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "startupProbe": {
                                  "description": "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                  "type": "object",
                                  "properties": {
                                    "exec": {
                                      "description": "Exec specifies a command to execute in the container.",
                                      "type": "object",
                                      "properties": {
                                        "command": {
                                          "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      }
                                    },
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "grpc": {
                                      "description": "GRPC specifies a GRPC HealthCheckRequest.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "port": {
                                          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "service": {
                                          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                          "type": "string",
                                          "default": ""
                                        }
                                      }
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies an HTTP GET request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies a connection to a TCP port.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                },
                                "stdin": {
                                  "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.",
                                  "type": "boolean"
                                },
                                "stdinOnce": {
                                  "description": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false",
                                  "type": "boolean"
                                },
                                "terminationMessagePath": {
                                  "description": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.",
                                  "type": "string"
                                },
                                "terminationMessagePolicy": {
                                  "description": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.",
                                  "type": "string"
                                },
                                "tty": {
                                  "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.",
                                  "type": "boolean"
                                },
                                "volumeDevices": {
                                  "description": "volumeDevices is the list of block devices to be used by the container.",
                                  "type": "array",
                                  "items": {
                                    "description": "volumeDevice describes a mapping of a raw block device within a container.",
                                    "type": "object",
                                    "required": [
                                      "devicePath",
                                      "name"
                                    ],
                                    "properties": {
                                      "devicePath": {
                                        "description": "devicePath is the path inside of the container that the device will be mapped to.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "name must match the name of a persistentVolumeClaim in the pod",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-map-keys": [
                                    "devicePath"
                                  ],
                                  "x-kubernetes-list-type": "map"
                                },
                                "volumeMounts": {
                                  "description": "Pod volumes to mount into the container's filesystem.\nCannot be updated.",
                                  "type": "array",
                                  "items": {
                                    "description": "VolumeMount describes a mounting of a Volume within a container.",
                                    "type": "object",
                                    "required": [
                                      "mountPath",
                                      "name"
                                    ],
                                    "properties": {
                                      "mountPath": {
                                        "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                                        "type": "string"
                                      },
                                      "mountPropagation": {
                                        "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "This must match the Name of a Volume.",
                                        "type": "string"
                                      },
                                      "readOnly": {
                                        "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                                        "type": "boolean"
                                      },
                                      "recursiveReadOnly": {
                                        "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                                        "type": "string"
                                      },
                                      "subPath": {
                                        "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                                        "type": "string"
                                      },
                                      "subPathExpr": {
                                        "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-map-keys": [
                                    "mountPath"
                                  ],
                                  "x-kubernetes-list-type": "map"
                                },
                                "workingDir": {
                                  "description": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "lifecycle": {
                            "description": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.",
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "description": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "description": "Exec specifies a command to execute in the container.",
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "description": "HTTPGet specifies an HTTP GET request to perform.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                        "type": "array",
                                        "items": {
                                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "value"
                                          ],
                                          "properties": {
                                            "name": {
                                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The header field value",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "path": {
                                        "description": "Path to access on the HTTP server.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "sleep": {
                                    "description": "Sleep represents a duration that the container should sleep.",
                                    "type": "object",
                                    "required": [
                                      "seconds"
                                    ],
                                    "properties": {
                                      "seconds": {
                                        "description": "Seconds is the number of seconds to sleep.",
                                        "type": "integer",
                                        "format": "int64"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "description": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "description": "Exec specifies a command to execute in the container.",
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "description": "HTTPGet specifies an HTTP GET request to perform.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                        "type": "array",
                                        "items": {
                                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "value"
                                          ],
                                          "properties": {
                                            "name": {
                                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The header field value",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "path": {
                                        "description": "Path to access on the HTTP server.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "sleep": {
                                    "description": "Sleep represents a duration that the container should sleep.",
                                    "type": "object",
                                    "required": [
                                      "seconds"
                                    ],
                                    "properties": {
                                      "seconds": {
                                        "description": "Seconds is the number of seconds to sleep.",
                                        "type": "integer",
                                        "format": "int64"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "description": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nControllers may set default LivenessProbe if no liveness probe is provided.\nTo ignore defaulting, set the value to empty LivenessProbe \"{}\".\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": "object",
                            "properties": {
                              "exec": {
                                "description": "Exec specifies a command to execute in the container.",
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              },
                              "failureThreshold": {
                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "grpc": {
                                "description": "GRPC specifies a GRPC HealthCheckRequest.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "port": {
                                    "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                    "type": "string",
                                    "default": ""
                                  }
                                }
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies an HTTP GET request to perform.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": "array",
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                    "type": "string"
                                  }
                                }
                              },
                              "initialDelaySeconds": {
                                "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies a connection to a TCP port.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  }
                                }
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "nodeSelector": {
                            "description": "NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "podPlacementPolicy": {
                            "description": "PodPlacementPolicy is the reference of the podPlacementPolicy",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "priority": {
                            "description": "The priority value. Various system components use this field to find the\npriority of the pod. When Priority Admission Controller is enabled, it\nprevents users from setting this field. The admission controller populates\nthis field from PriorityClassName.\nThe higher the value, the higher the priority.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "priorityClassName": {
                            "description": "If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault.",
                            "type": "string"
                          },
                          "readinessProbe": {
                            "description": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nControllers may set default ReadinessProbe if no readyness probe is provided.\nTo ignore defaulting, set the value to empty ReadynessProbe \"{}\".\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": "object",
                            "properties": {
                              "exec": {
                                "description": "Exec specifies a command to execute in the container.",
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              },
                              "failureThreshold": {
                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "grpc": {
                                "description": "GRPC specifies a GRPC HealthCheckRequest.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "port": {
                                    "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                    "type": "string",
                                    "default": ""
                                  }
                                }
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies an HTTP GET request to perform.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": "array",
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                    "type": "string"
                                  }
                                }
                              },
                              "initialDelaySeconds": {
                                "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies a connection to a TCP port.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  }
                                }
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "description": "Compute Resources required by the sidecar container.",
                            "type": "object",
                            "properties": {
                              "claims": {
                                "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                "type": "array",
                                "items": {
                                  "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                      "type": "string"
                                    },
                                    "request": {
                                      "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-kubernetes-list-map-keys": [
                                  "name"
                                ],
                                "x-kubernetes-list-type": "map"
                              },
                              "limits": {
                                "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              },
                              "requests": {
                                "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            }
                          },
                          "runtimeClassName": {
                            "description": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used\nto run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.\nIf unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an\nempty definition that uses the default runtime handler.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class",
                            "type": "string"
                          },
                          "schedulerName": {
                            "description": "If specified, the pod will be dispatched by specified scheduler.\nIf not specified, the pod will be dispatched by default scheduler.",
                            "type": "string"
                          },
                          "securityContext": {
                            "description": "SecurityContext holds pod-level security attributes and common container settings.\nOptional: Defaults to empty.  See type description for default values of each field.",
                            "type": "object",
                            "properties": {
                              "appArmorProfile": {
                                "description": "appArmorProfile is the AppArmor options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "localhostProfile": {
                                    "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                    "type": "string"
                                  }
                                }
                              },
                              "fsGroup": {
                                "description": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:\n\n1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "fsGroupChangePolicy": {
                                "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "string"
                              },
                              "runAsGroup": {
                                "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxChangePolicy": {
                                "description": "seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.\nIt has no effect on nodes that do not support SELinux or to volumes does not support SELinux.\nValid values are \"MountOption\" and \"Recursive\".\n\n\"Recursive\" means relabeling of all files on all Pod volumes by the container runtime.\nThis may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.\n\n\"MountOption\" mounts all eligible Pod volumes with `-o context` mount option.\nThis requires all Pods that share the same volume to use the same SELinux label.\nIt is not possible to share the same volume among privileged and unprivileged Pods.\nEligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes\nwhose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their\nCSIDriver instance. Other volumes are always re-labelled recursively.\n\"MountOption\" value is allowed only when SELinuxMount feature gate is enabled.\n\nIf not specified and SELinuxMount feature gate is enabled, \"MountOption\" is used.\nIf not specified and SELinuxMount feature gate is disabled, \"MountOption\" is used for ReadWriteOncePod volumes\nand \"Recursive\" for all other volumes.\n\nThis field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.\n\nAll Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "string"
                              },
                              "seLinuxOptions": {
                                "description": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "description": "Level is SELinux level label that applies to the container.",
                                    "type": "string"
                                  },
                                  "role": {
                                    "description": "Role is a SELinux role label that applies to the container.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type is a SELinux type label that applies to the container.",
                                    "type": "string"
                                  },
                                  "user": {
                                    "description": "User is a SELinux user label that applies to the container.",
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "description": "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "localhostProfile": {
                                    "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                    "type": "string"
                                  }
                                }
                              },
                              "supplementalGroups": {
                                "description": "A list of groups applied to the first process run in each container, in\naddition to the container's primary GID and fsGroup (if specified).  If\nthe SupplementalGroupsPolicy feature is enabled, the\nsupplementalGroupsPolicy field determines whether these are in addition\nto or instead of any group memberships defined in the container image.\nIf unspecified, no additional groups are added, though group memberships\ndefined in the container image may still be used, depending on the\nsupplementalGroupsPolicy field.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "supplementalGroupsPolicy": {
                                "description": "Defines how supplemental groups of the first container processes are calculated.\nValid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used.\n(Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled\nand the container runtime must implement support for this feature.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "string"
                              },
                              "sysctls": {
                                "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "array",
                                "items": {
                                  "description": "Sysctl defines a kernel parameter to be set",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name of a property to set",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value of a property to set",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "windowsOptions": {
                                "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "serviceAccountName": {
                            "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
                            "type": "string"
                          },
                          "shareProcessNamespace": {
                            "description": "Share a single process namespace between all of the containers in a pod.\nWhen this is set containers will be able to view and signal processes from other containers\nin the same pod, and the first process in each container will not be assigned PID 1.\nHostPID and ShareProcessNamespace cannot both be set.\nOptional: Default to false.",
                            "type": "boolean"
                          },
                          "terminationGracePeriodSeconds": {
                            "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nIf this value is nil, the default grace period will be used instead.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nDefaults to 30 seconds.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "tolerations": {
                            "description": "If specified, the pod's tolerations.",
                            "type": "array",
                            "items": {
                              "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
                              "type": "object",
                              "properties": {
                                "effect": {
                                  "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                                  "type": "string"
                                },
                                "tolerationSeconds": {
                                  "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "value": {
                                  "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "topologySpreadConstraints": {
                            "description": "TopologySpreadConstraints describes how a group of pods ought to spread across topology\ndomains. Scheduler will schedule pods in a way which abides by the constraints.\nAll topologySpreadConstraints are ANDed.",
                            "type": "array",
                            "items": {
                              "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
                              "type": "object",
                              "required": [
                                "maxSkew",
                                "topologyKey",
                                "whenUnsatisfiable"
                              ],
                              "properties": {
                                "labelSelector": {
                                  "description": "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain.",
                                  "type": "object",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "type": "array",
                                      "items": {
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            },
                                            "x-kubernetes-list-type": "atomic"
                                          }
                                        }
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "matchLabels": {
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "matchLabelKeys": {
                                  "description": "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "maxSkew": {
                                  "description": "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "minDomains": {
                                  "description": "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "nodeAffinityPolicy": {
                                  "description": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
                                  "type": "string"
                                },
                                "nodeTaintsPolicy": {
                                  "description": "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
                                  "type": "string"
                                },
                                "topologyKey": {
                                  "description": "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each \u003ckey, value\u003e as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field.",
                                  "type": "string"
                                },
                                "whenUnsatisfiable": {
                                  "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-list-map-keys": [
                              "topologyKey",
                              "whenUnsatisfiable"
                            ],
                            "x-kubernetes-list-type": "map"
                          },
                          "volumeMounts": {
                            "description": "Pod volumes to mount into the container's filesystem.\nCannot be updated.",
                            "type": "array",
                            "items": {
                              "description": "VolumeMount describes a mounting of a Volume within a container.",
                              "type": "object",
                              "required": [
                                "mountPath",
                                "name"
                              ],
                              "properties": {
                                "mountPath": {
                                  "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "This must match the Name of a Volume.",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                                  "type": "boolean"
                                },
                                "recursiveReadOnly": {
                                  "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                                  "type": "string"
                                },
                                "subPath": {
                                  "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumes": {
                            "description": "List of volumes that can be mounted by containers belonging to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes",
                            "type": "array",
                            "items": {
                              "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "awsElasticBlockStore": {
                                  "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                  "type": "object",
                                  "required": [
                                    "volumeID"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                      "type": "string"
                                    },
                                    "partition": {
                                      "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "readOnly": {
                                      "description": "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                      "type": "boolean"
                                    },
                                    "volumeID": {
                                      "description": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                      "type": "string"
                                    }
                                  }
                                },
                                "azureDisk": {
                                  "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
                                  "type": "object",
                                  "required": [
                                    "diskName",
                                    "diskURI"
                                  ],
                                  "properties": {
                                    "cachingMode": {
                                      "description": "cachingMode is the Host Caching mode: None, Read Only, Read Write.",
                                      "type": "string"
                                    },
                                    "diskName": {
                                      "description": "diskName is the Name of the data disk in the blob storage",
                                      "type": "string"
                                    },
                                    "diskURI": {
                                      "description": "diskURI is the URI of data disk in the blob storage",
                                      "type": "string"
                                    },
                                    "fsType": {
                                      "description": "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                      "type": "string",
                                      "default": "ext4"
                                    },
                                    "kind": {
                                      "description": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean",
                                      "default": false
                                    }
                                  }
                                },
                                "azureFile": {
                                  "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod.",
                                  "type": "object",
                                  "required": [
                                    "secretName",
                                    "shareName"
                                  ],
                                  "properties": {
                                    "readOnly": {
                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean"
                                    },
                                    "secretName": {
                                      "description": "secretName is the  name of secret that contains Azure Storage Account Name and Key",
                                      "type": "string"
                                    },
                                    "shareName": {
                                      "description": "shareName is the azure share Name",
                                      "type": "string"
                                    }
                                  }
                                },
                                "cephfs": {
                                  "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
                                  "type": "object",
                                  "required": [
                                    "monitors"
                                  ],
                                  "properties": {
                                    "monitors": {
                                      "description": "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "path": {
                                      "description": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                      "type": "boolean"
                                    },
                                    "secretFile": {
                                      "description": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "user": {
                                      "description": "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                      "type": "string"
                                    }
                                  }
                                },
                                "cinder": {
                                  "description": "cinder represents a cinder volume attached and mounted on kubelets host machine.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                  "type": "object",
                                  "required": [
                                    "volumeID"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                      "type": "boolean"
                                    },
                                    "secretRef": {
                                      "description": "secretRef is optional: points to a secret object containing parameters used to connect\nto OpenStack.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "volumeID": {
                                      "description": "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                      "type": "string"
                                    }
                                  }
                                },
                                "configMap": {
                                  "description": "configMap represents a configMap that should populate this volume",
                                  "type": "object",
                                  "properties": {
                                    "defaultMode": {
                                      "description": "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "items": {
                                      "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                      "type": "array",
                                      "items": {
                                        "description": "Maps a string key to a path within a volume.",
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "path"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "key is the key to project.",
                                            "type": "string"
                                          },
                                          "mode": {
                                            "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "path": {
                                            "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "optional specify whether the ConfigMap or its keys must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "csi": {
                                  "description": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).",
                                  "type": "object",
                                  "required": [
                                    "driver"
                                  ],
                                  "properties": {
                                    "driver": {
                                      "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.",
                                      "type": "string"
                                    },
                                    "fsType": {
                                      "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.",
                                      "type": "string"
                                    },
                                    "nodePublishSecretRef": {
                                      "description": "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "readOnly": {
                                      "description": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).",
                                      "type": "boolean"
                                    },
                                    "volumeAttributes": {
                                      "description": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "downwardAPI": {
                                  "description": "downwardAPI represents downward API about the pod that should populate this volume",
                                  "type": "object",
                                  "properties": {
                                    "defaultMode": {
                                      "description": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "items": {
                                      "description": "Items is a list of downward API volume file",
                                      "type": "array",
                                      "items": {
                                        "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                        "type": "object",
                                        "required": [
                                          "path"
                                        ],
                                        "properties": {
                                          "fieldRef": {
                                            "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                            "type": "object",
                                            "required": [
                                              "fieldPath"
                                            ],
                                            "properties": {
                                              "apiVersion": {
                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                "type": "string"
                                              },
                                              "fieldPath": {
                                                "description": "Path of the field to select in the specified API version.",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "mode": {
                                            "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "path": {
                                            "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                            "type": "string"
                                          },
                                          "resourceFieldRef": {
                                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                            "type": "object",
                                            "required": [
                                              "resource"
                                            ],
                                            "properties": {
                                              "containerName": {
                                                "description": "Container name: required for volumes, optional for env vars",
                                                "type": "string"
                                              },
                                              "divisor": {
                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "anyOf": [
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "string"
                                                  }
                                                ],
                                                "x-kubernetes-int-or-string": true
                                              },
                                              "resource": {
                                                "description": "Required: resource to select",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          }
                                        }
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  }
                                },
                                "emptyDir": {
                                  "description": "emptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                  "type": "object",
                                  "properties": {
                                    "medium": {
                                      "description": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                      "type": "string"
                                    },
                                    "sizeLimit": {
                                      "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  }
                                },
                                "ephemeral": {
                                  "description": "ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time.",
                                  "type": "object",
                                  "properties": {
                                    "volumeClaimTemplate": {
                                      "description": "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `\u003cpod name\u003e-\u003cvolume name\u003e` where\n`\u003cvolume name\u003e` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\nRequired, must not be nil.",
                                      "type": "object",
                                      "required": [
                                        "spec"
                                      ],
                                      "properties": {
                                        "metadata": {
                                          "description": "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation.",
                                          "type": "object",
                                          "properties": {
                                            "annotations": {
                                              "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "generateName": {
                                              "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                              "type": "string"
                                            },
                                            "labels": {
                                              "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "name": {
                                              "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "type": "string"
                                            },
                                            "namespace": {
                                              "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces",
                                              "type": "string"
                                            },
                                            "ownerReferences": {
                                              "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.",
                                              "type": "array",
                                              "items": {
                                                "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.",
                                                "type": "object",
                                                "required": [
                                                  "apiVersion",
                                                  "kind",
                                                  "name",
                                                  "uid"
                                                ],
                                                "properties": {
                                                  "apiVersion": {
                                                    "description": "API version of the referent.",
                                                    "type": "string"
                                                  },
                                                  "blockOwnerDeletion": {
                                                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.",
                                                    "type": "boolean"
                                                  },
                                                  "controller": {
                                                    "description": "If true, this reference points to the managing controller.",
                                                    "type": "boolean"
                                                  },
                                                  "kind": {
                                                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                                                    "type": "string"
                                                  },
                                                  "uid": {
                                                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                                                    "type": "string"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              }
                                            }
                                          }
                                        },
                                        "spec": {
                                          "description": "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here.",
                                          "type": "object",
                                          "properties": {
                                            "accessModes": {
                                              "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "dataSource": {
                                              "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                                              "type": "object",
                                              "required": [
                                                "kind",
                                                "name"
                                              ],
                                              "properties": {
                                                "apiGroup": {
                                                  "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                                  "type": "string"
                                                },
                                                "kind": {
                                                  "description": "Kind is the type of resource being referenced",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "description": "Name is the name of resource being referenced",
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "dataSourceRef": {
                                              "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                              "type": "object",
                                              "required": [
                                                "kind",
                                                "name"
                                              ],
                                              "properties": {
                                                "apiGroup": {
                                                  "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                                  "type": "string"
                                                },
                                                "kind": {
                                                  "description": "Kind is the type of resource being referenced",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "description": "Name is the name of resource being referenced",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "resources": {
                                              "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                              "type": "object",
                                              "properties": {
                                                "limits": {
                                                  "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                    "anyOf": [
                                                      {
                                                        "type": "integer"
                                                      },
                                                      {
                                                        "type": "string"
                                                      }
                                                    ],
                                                    "x-kubernetes-int-or-string": true
                                                  }
                                                },
                                                "requests": {
                                                  "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                    "anyOf": [
                                                      {
                                                        "type": "integer"
                                                      },
                                                      {
                                                        "type": "string"
                                                      }
                                                    ],
                                                    "x-kubernetes-int-or-string": true
                                                  }
                                                }
                                              }
                                            },
                                            "selector": {
                                              "description": "selector is a label query over volumes to consider for binding.",
                                              "type": "object",
                                              "properties": {
                                                "matchExpressions": {
                                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                  "type": "array",
                                                  "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                    "type": "object",
                                                    "required": [
                                                      "key",
                                                      "operator"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "description": "key is the label key that the selector applies to.",
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "x-kubernetes-list-type": "atomic"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "matchLabels": {
                                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "storageClassName": {
                                              "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                                              "type": "string"
                                            },
                                            "volumeAttributesClassName": {
                                              "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                                              "type": "string"
                                            },
                                            "volumeMode": {
                                              "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                                              "type": "string"
                                            },
                                            "volumeName": {
                                              "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "fc": {
                                  "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                                  "type": "object",
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                      "type": "string"
                                    },
                                    "lun": {
                                      "description": "lun is Optional: FC target lun number",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "readOnly": {
                                      "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean"
                                    },
                                    "targetWWNs": {
                                      "description": "targetWWNs is Optional: FC target worldwide names (WWNs)",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "wwids": {
                                      "description": "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  }
                                },
                                "flexVolume": {
                                  "description": "flexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.",
                                  "type": "object",
                                  "required": [
                                    "driver"
                                  ],
                                  "properties": {
                                    "driver": {
                                      "description": "driver is the name of the driver to use for this volume.",
                                      "type": "string"
                                    },
                                    "fsType": {
                                      "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                      "type": "string"
                                    },
                                    "options": {
                                      "description": "options is Optional: this field holds extra command options if any.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "readOnly": {
                                      "description": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean"
                                    },
                                    "secretRef": {
                                      "description": "secretRef is Optional: secretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    }
                                  }
                                },
                                "flocker": {
                                  "description": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
                                  "type": "object",
                                  "properties": {
                                    "datasetName": {
                                      "description": "datasetName is Name of the dataset stored as metadata -\u003e name on the dataset for Flocker\nshould be considered as deprecated",
                                      "type": "string"
                                    },
                                    "datasetUUID": {
                                      "description": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset",
                                      "type": "string"
                                    }
                                  }
                                },
                                "gcePersistentDisk": {
                                  "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "type": "object",
                                  "required": [
                                    "pdName"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                      "type": "string"
                                    },
                                    "partition": {
                                      "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "pdName": {
                                      "description": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "glusterfs": {
                                  "description": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md",
                                  "type": "object",
                                  "required": [
                                    "endpoints",
                                    "path"
                                  ],
                                  "properties": {
                                    "endpoints": {
                                      "description": "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "hostPath": {
                                  "description": "hostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                  "type": "object",
                                  "required": [
                                    "path"
                                  ],
                                  "properties": {
                                    "path": {
                                      "description": "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                      "type": "string"
                                    }
                                  }
                                },
                                "iscsi": {
                                  "description": "iscsi represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md",
                                  "type": "object",
                                  "required": [
                                    "iqn",
                                    "lun",
                                    "targetPortal"
                                  ],
                                  "properties": {
                                    "chapAuthDiscovery": {
                                      "description": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication",
                                      "type": "boolean"
                                    },
                                    "chapAuthSession": {
                                      "description": "chapAuthSession defines whether support iSCSI Session CHAP authentication",
                                      "type": "boolean"
                                    },
                                    "fsType": {
                                      "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                                      "type": "string"
                                    },
                                    "initiatorName": {
                                      "description": "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n\u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.",
                                      "type": "string"
                                    },
                                    "iqn": {
                                      "description": "iqn is the target iSCSI Qualified Name.",
                                      "type": "string"
                                    },
                                    "iscsiInterface": {
                                      "description": "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).",
                                      "type": "string",
                                      "default": "default"
                                    },
                                    "lun": {
                                      "description": "lun represents iSCSI Target Lun number.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "portals": {
                                      "description": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "readOnly": {
                                      "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.",
                                      "type": "boolean"
                                    },
                                    "secretRef": {
                                      "description": "secretRef is the CHAP Secret for iSCSI target and initiator authentication",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "targetPortal": {
                                      "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "name": {
                                  "description": "name of the volume.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "nfs": {
                                  "description": "nfs represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                  "type": "object",
                                  "required": [
                                    "path",
                                    "server"
                                  ],
                                  "properties": {
                                    "path": {
                                      "description": "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                      "type": "boolean"
                                    },
                                    "server": {
                                      "description": "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                      "type": "string"
                                    }
                                  }
                                },
                                "persistentVolumeClaim": {
                                  "description": "persistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                  "type": "object",
                                  "required": [
                                    "claimName"
                                  ],
                                  "properties": {
                                    "claimName": {
                                      "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "photonPersistentDisk": {
                                  "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                                  "type": "object",
                                  "required": [
                                    "pdID"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                      "type": "string"
                                    },
                                    "pdID": {
                                      "description": "pdID is the ID that identifies Photon Controller persistent disk",
                                      "type": "string"
                                    }
                                  }
                                },
                                "portworxVolume": {
                                  "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine",
                                  "type": "object",
                                  "required": [
                                    "volumeID"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean"
                                    },
                                    "volumeID": {
                                      "description": "volumeID uniquely identifies a Portworx volume",
                                      "type": "string"
                                    }
                                  }
                                },
                                "projected": {
                                  "description": "projected items for all in one resources secrets, configmaps, and downward API",
                                  "type": "object",
                                  "properties": {
                                    "defaultMode": {
                                      "description": "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "sources": {
                                      "description": "sources is the list of volume projections. Each entry in this list\nhandles one source.",
                                      "type": "array",
                                      "items": {
                                        "description": "Projection that may be projected along with other supported volume types.\nExactly one of these fields must be set.",
                                        "type": "object",
                                        "properties": {
                                          "clusterTrustBundle": {
                                            "description": "ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field\nof ClusterTrustBundle objects in an auto-updating file.\n\nAlpha, gated by the ClusterTrustBundleProjection feature gate.\n\nClusterTrustBundle objects can either be selected by name, or by the\ncombination of signer name and a label selector.\n\nKubelet performs aggressive normalization of the PEM contents written\ninto the pod filesystem.  Esoteric PEM features such as inter-block\ncomments and block headers are stripped.  Certificates are deduplicated.\nThe ordering of certificates within the file is arbitrary, and Kubelet\nmay change the order over time.",
                                            "type": "object",
                                            "required": [
                                              "path"
                                            ],
                                            "properties": {
                                              "labelSelector": {
                                                "description": "Select all ClusterTrustBundles that match this label selector.  Only has\neffect if signerName is set.  Mutually-exclusive with name.  If unset,\ninterpreted as \"match nothing\".  If set but empty, interpreted as \"match\neverything\".",
                                                "type": "object",
                                                "properties": {
                                                  "matchExpressions": {
                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                    "type": "array",
                                                    "items": {
                                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                      "type": "object",
                                                      "required": [
                                                        "key",
                                                        "operator"
                                                      ],
                                                      "properties": {
                                                        "key": {
                                                          "description": "key is the label key that the selector applies to.",
                                                          "type": "string"
                                                        },
                                                        "operator": {
                                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                          "type": "string"
                                                        },
                                                        "values": {
                                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          },
                                                          "x-kubernetes-list-type": "atomic"
                                                        }
                                                      }
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  },
                                                  "matchLabels": {
                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              },
                                              "name": {
                                                "description": "Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector.",
                                                "type": "string"
                                              },
                                              "optional": {
                                                "description": "If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles.",
                                                "type": "boolean"
                                              },
                                              "path": {
                                                "description": "Relative path from the volume root to write the bundle.",
                                                "type": "string"
                                              },
                                              "signerName": {
                                                "description": "Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated.",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "configMap": {
                                            "description": "configMap information about the configMap data to project",
                                            "type": "object",
                                            "properties": {
                                              "items": {
                                                "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                                "type": "array",
                                                "items": {
                                                  "description": "Maps a string key to a path within a volume.",
                                                  "type": "object",
                                                  "required": [
                                                    "key",
                                                    "path"
                                                  ],
                                                  "properties": {
                                                    "key": {
                                                      "description": "key is the key to project.",
                                                      "type": "string"
                                                    },
                                                    "mode": {
                                                      "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "path": {
                                                      "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-list-type": "atomic"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "optional specify whether the ConfigMap or its keys must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "downwardAPI": {
                                            "description": "downwardAPI information about the downwardAPI data to project",
                                            "type": "object",
                                            "properties": {
                                              "items": {
                                                "description": "Items is a list of DownwardAPIVolume file",
                                                "type": "array",
                                                "items": {
                                                  "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                                  "type": "object",
                                                  "required": [
                                                    "path"
                                                  ],
                                                  "properties": {
                                                    "fieldRef": {
                                                      "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                                      "type": "object",
                                                      "required": [
                                                        "fieldPath"
                                                      ],
                                                      "properties": {
                                                        "apiVersion": {
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "type": "string"
                                                        },
                                                        "fieldPath": {
                                                          "description": "Path of the field to select in the specified API version.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-kubernetes-map-type": "atomic"
                                                    },
                                                    "mode": {
                                                      "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "path": {
                                                      "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                                      "type": "string"
                                                    },
                                                    "resourceFieldRef": {
                                                      "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                                      "type": "object",
                                                      "required": [
                                                        "resource"
                                                      ],
                                                      "properties": {
                                                        "containerName": {
                                                          "description": "Container name: required for volumes, optional for env vars",
                                                          "type": "string"
                                                        },
                                                        "divisor": {
                                                          "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                          "anyOf": [
                                                            {
                                                              "type": "integer"
                                                            },
                                                            {
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "x-kubernetes-int-or-string": true
                                                        },
                                                        "resource": {
                                                          "description": "Required: resource to select",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-kubernetes-map-type": "atomic"
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-list-type": "atomic"
                                              }
                                            }
                                          },
                                          "secret": {
                                            "description": "secret information about the secret data to project",
                                            "type": "object",
                                            "properties": {
                                              "items": {
                                                "description": "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                                "type": "array",
                                                "items": {
                                                  "description": "Maps a string key to a path within a volume.",
                                                  "type": "object",
                                                  "required": [
                                                    "key",
                                                    "path"
                                                  ],
                                                  "properties": {
                                                    "key": {
                                                      "description": "key is the key to project.",
                                                      "type": "string"
                                                    },
                                                    "mode": {
                                                      "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "path": {
                                                      "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-list-type": "atomic"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "optional field specify whether the Secret or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "serviceAccountToken": {
                                            "description": "serviceAccountToken is information about the serviceAccountToken data to project",
                                            "type": "object",
                                            "required": [
                                              "path"
                                            ],
                                            "properties": {
                                              "audience": {
                                                "description": "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.",
                                                "type": "string"
                                              },
                                              "expirationSeconds": {
                                                "description": "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.",
                                                "type": "integer",
                                                "format": "int64"
                                              },
                                              "path": {
                                                "description": "path is the path relative to the mount point of the file to project the\ntoken into.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  }
                                },
                                "quobyte": {
                                  "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                                  "type": "object",
                                  "required": [
                                    "registry",
                                    "volume"
                                  ],
                                  "properties": {
                                    "group": {
                                      "description": "group to map volume access to\nDefault is no group",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.",
                                      "type": "boolean"
                                    },
                                    "registry": {
                                      "description": "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes",
                                      "type": "string"
                                    },
                                    "tenant": {
                                      "description": "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin",
                                      "type": "string"
                                    },
                                    "user": {
                                      "description": "user to map volume access to\nDefaults to serivceaccount user",
                                      "type": "string"
                                    },
                                    "volume": {
                                      "description": "volume is a string that references an already created Quobyte volume by name.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "rbd": {
                                  "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/rbd/README.md",
                                  "type": "object",
                                  "required": [
                                    "image",
                                    "monitors"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                                      "type": "string"
                                    },
                                    "image": {
                                      "description": "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "string"
                                    },
                                    "keyring": {
                                      "description": "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "string",
                                      "default": "/etc/ceph/keyring"
                                    },
                                    "monitors": {
                                      "description": "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "pool": {
                                      "description": "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "string",
                                      "default": "rbd"
                                    },
                                    "readOnly": {
                                      "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "boolean"
                                    },
                                    "secretRef": {
                                      "description": "secretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "user": {
                                      "description": "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "string",
                                      "default": "admin"
                                    }
                                  }
                                },
                                "scaleIO": {
                                  "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
                                  "type": "object",
                                  "required": [
                                    "gateway",
                                    "secretRef",
                                    "system"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".",
                                      "type": "string",
                                      "default": "xfs"
                                    },
                                    "gateway": {
                                      "description": "gateway is the host address of the ScaleIO API Gateway.",
                                      "type": "string"
                                    },
                                    "protectionDomain": {
                                      "description": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean"
                                    },
                                    "secretRef": {
                                      "description": "secretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "sslEnabled": {
                                      "description": "sslEnabled Flag enable/disable SSL communication with Gateway, default false",
                                      "type": "boolean"
                                    },
                                    "storageMode": {
                                      "description": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.",
                                      "type": "string",
                                      "default": "ThinProvisioned"
                                    },
                                    "storagePool": {
                                      "description": "storagePool is the ScaleIO Storage Pool associated with the protection domain.",
                                      "type": "string"
                                    },
                                    "system": {
                                      "description": "system is the name of the storage system as configured in ScaleIO.",
                                      "type": "string"
                                    },
                                    "volumeName": {
                                      "description": "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "secret": {
                                  "description": "secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                  "type": "object",
                                  "properties": {
                                    "defaultMode": {
                                      "description": "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "items": {
                                      "description": "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                      "type": "array",
                                      "items": {
                                        "description": "Maps a string key to a path within a volume.",
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "path"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "key is the key to project.",
                                            "type": "string"
                                          },
                                          "mode": {
                                            "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "path": {
                                            "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "optional": {
                                      "description": "optional field specify whether the Secret or its keys must be defined",
                                      "type": "boolean"
                                    },
                                    "secretName": {
                                      "description": "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                      "type": "string"
                                    }
                                  }
                                },
                                "storageos": {
                                  "description": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
                                  "type": "object",
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean"
                                    },
                                    "secretRef": {
                                      "description": "secretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "volumeName": {
                                      "description": "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace.",
                                      "type": "string"
                                    },
                                    "volumeNamespace": {
                                      "description": "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "vsphereVolume": {
                                  "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
                                  "type": "object",
                                  "required": [
                                    "volumePath"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                      "type": "string"
                                    },
                                    "storagePolicyID": {
                                      "description": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
                                      "type": "string"
                                    },
                                    "storagePolicyName": {
                                      "description": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.",
                                      "type": "string"
                                    },
                                    "volumePath": {
                                      "description": "volumePath is the path that identifies vSphere volume vmdk",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "replicas": {
                    "description": "Number of instances to deploy for a VaultServer.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "serviceTemplates": {
                    "description": "ServiceTemplates is an optional configuration for services used to expose database",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "alias"
                      ],
                      "properties": {
                        "alias": {
                          "description": "Alias represents the identifier of the service.",
                          "type": "string",
                          "enum": [
                            "internal",
                            "vault",
                            "stats"
                          ]
                        },
                        "metadata": {
                          "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                          "type": "object",
                          "properties": {
                            "annotations": {
                              "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "labels": {
                              "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "spec": {
                          "description": "Specification of the desired behavior of the service.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                          "type": "object",
                          "properties": {
                            "clusterIP": {
                              "description": "clusterIP is the IP address of the service and is usually assigned\nrandomly by the master. If an address is specified manually and is not in\nuse by others, it will be allocated to the service; otherwise, creation\nof the service will fail. This field can not be changed through updates.\nValid values are \"None\", empty string (\"\"), or a valid IP address. \"None\"\ncan be specified for headless services when proxying is not required.\nOnly applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if\ntype is ExternalName.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
                              "type": "string"
                            },
                            "externalIPs": {
                              "description": "externalIPs is a list of IP addresses for which nodes in the cluster\nwill also accept traffic for this service.  These IPs are not managed by\nKubernetes.  The user is responsible for ensuring that traffic arrives\nat a node with this IP.  A common example is external load-balancers\nthat are not part of the Kubernetes system.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "externalTrafficPolicy": {
                              "description": "externalTrafficPolicy denotes if this Service desires to route external\ntraffic to node-local or cluster-wide endpoints. \"Local\" preserves the\nclient source IP and avoids a second hop for LoadBalancer and Nodeport\ntype services, but risks potentially imbalanced traffic spreading.\n\"Cluster\" obscures the client source IP and may cause a second hop to\nanother node, but should have good overall load-spreading.",
                              "type": "string"
                            },
                            "healthCheckNodePort": {
                              "description": "healthCheckNodePort specifies the healthcheck nodePort for the service.\nIf not specified, HealthCheckNodePort is created by the service api\nbackend with the allocated nodePort. Will use user-specified nodePort value\nif specified by the client. Only effects when Type is set to LoadBalancer\nand ExternalTrafficPolicy is set to Local.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "loadBalancerIP": {
                              "description": "Only applies to Service Type: LoadBalancer\nLoadBalancer will get created with the IP specified in this field.\nThis feature depends on whether the underlying cloud-provider supports specifying\nthe loadBalancerIP when a load balancer is created.\nThis field will be ignored if the cloud-provider does not support the feature.",
                              "type": "string"
                            },
                            "loadBalancerSourceRanges": {
                              "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.\"\nMore info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ports": {
                              "description": "The list of ports that are exposed by this service.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
                              "type": "array",
                              "items": {
                                "description": "ServicePort contains information on service's port.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The name of this port within the service. This must be a DNS_LABEL.\nAll ports within a ServiceSpec must have unique names. This maps to\nthe 'Name' field in EndpointPort objects.\nOptional if only one ServicePort is defined on this service.",
                                    "type": "string"
                                  },
                                  "nodePort": {
                                    "description": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer.\nUsually assigned by the system. If specified, it will be allocated to the service\nif unused or else creation of the service will fail.\nDefault is to auto-allocate a port if the ServiceType of this Service requires one.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "port": {
                                    "description": "The port that will be exposed by this service.",
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                }
                              }
                            },
                            "sessionAffinityConfig": {
                              "description": "sessionAffinityConfig contains the configurations of session affinity.",
                              "type": "object",
                              "properties": {
                                "clientIP": {
                                  "description": "clientIP contains the configurations of Client IP based session affinity.",
                                  "type": "object",
                                  "properties": {
                                    "timeoutSeconds": {
                                      "description": "timeoutSeconds specifies the seconds of ClientIP type session sticky time.\nThe value must be \u003e0 \u0026\u0026 \u003c=86400(for 1 day) if ServiceAffinity == \"ClientIP\".\nDefault value is 10800(for 3 hours).",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                }
                              }
                            },
                            "type": {
                              "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid\noptions are ExternalName, ClusterIP, NodePort, and LoadBalancer.\n\"ExternalName\" maps to the specified externalName.\n\"ClusterIP\" allocates a cluster-internal IP address for load-balancing to\nendpoints. Endpoints are determined by the selector or if that is not\nspecified, by manual construction of an Endpoints object. If clusterIP is\n\"None\", no virtual IP is allocated and the endpoints are published as a\nset of endpoints rather than a stable IP.\n\"NodePort\" builds on ClusterIP and allocates a port on every node which\nroutes to the clusterIP.\n\"LoadBalancer\" builds on NodePort and creates an\nexternal load-balancer (if supported in the current cloud) which routes\nto the clusterIP.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "terminationPolicy": {
                    "description": "TerminationPolicy controls the delete operation for vault server",
                    "type": "string",
                    "enum": [
                      "Halt",
                      "Delete",
                      "WipeOut",
                      "DoNotTerminate"
                    ]
                  },
                  "tls": {
                    "description": "TLS policy of vault nodes",
                    "type": "object",
                    "properties": {
                      "certificates": {
                        "description": "Certificate provides server and/or client certificate options used by application pods.\nThese options are passed to a cert-manager Certificate object.\nxref: https://github.com/jetstack/cert-manager/blob/v0.16.0/pkg/apis/certmanager/v1beta1/types_certificate.go#L82-L162",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "alias"
                          ],
                          "properties": {
                            "alias": {
                              "description": "Alias represents the identifier of the certificate.",
                              "type": "string"
                            },
                            "dnsNames": {
                              "description": "DNSNames is a list of subject alt names to be used on the Certificate.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "duration": {
                              "description": "Certificate default Duration",
                              "type": "string"
                            },
                            "emailAddresses": {
                              "description": "EmailAddresses is a list of email subjectAltNames to be set on the Certificate.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ipAddresses": {
                              "description": "IPAddresses is a list of IP addresses to be used on the Certificate",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "issuerRef": {
                              "description": "IssuerRef is a reference to a Certificate Issuer.",
                              "type": "object",
                              "required": [
                                "kind",
                                "name"
                              ],
                              "properties": {
                                "apiGroup": {
                                  "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                  "type": "string"
                                },
                                "kind": {
                                  "description": "Kind is the type of resource being referenced",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name is the name of resource being referenced",
                                  "type": "string"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "privateKey": {
                              "description": "Options to control private keys used for the Certificate.",
                              "type": "object",
                              "properties": {
                                "encoding": {
                                  "description": "The private key cryptography standards (PKCS) encoding for this\ncertificate's private key to be encoded in.\nIf provided, allowed values are \"pkcs1\" and \"pkcs8\" standing for PKCS#1\nand PKCS#8, respectively.\nDefaults to PKCS#1 if not specified.\nSee here for the difference between the formats: https://stackoverflow.com/a/48960291",
                                  "type": "string",
                                  "enum": [
                                    "PKCS1",
                                    "PKCS8"
                                  ]
                                }
                              }
                            },
                            "renewBefore": {
                              "description": "Certificate renew before expiration duration\n\nDeprecated use `ReconfigureTLS` type OpsRequest instead.",
                              "type": "string"
                            },
                            "secretName": {
                              "description": "Specifies the k8s secret name that holds the certificates.\nDefault to \u003cresource-name\u003e-\u003ccert-alias\u003e-cert.",
                              "type": "string"
                            },
                            "subject": {
                              "description": "Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).",
                              "type": "object",
                              "properties": {
                                "countries": {
                                  "description": "Countries to be used on the CertificateSpec.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "localities": {
                                  "description": "Cities to be used on the CertificateSpec.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "organizationalUnits": {
                                  "description": "Organizational Units to be used on the CertificateSpec.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "organizations": {
                                  "description": "Organizations to be used on the Certificate.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "postalCodes": {
                                  "description": "Postal codes to be used on the CertificateSpec.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "provinces": {
                                  "description": "State/Provinces to be used on the CertificateSpec.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "serialNumber": {
                                  "description": "Serial number to be used on the CertificateSpec.",
                                  "type": "string"
                                },
                                "streetAddresses": {
                                  "description": "Street addresses to be used on the CertificateSpec.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "uris": {
                              "description": "URIs is a list of URI subjectAltNames to be set on the Certificate.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "issuerRef": {
                        "description": "IssuerRef is a reference to a Certificate Issuer.",
                        "type": "object",
                        "required": [
                          "kind",
                          "name"
                        ],
                        "properties": {
                          "apiGroup": {
                            "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind is the type of resource being referenced",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the name of resource being referenced",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    }
                  },
                  "unsealer": {
                    "description": "Unsealer configuration for vault",
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "mode contains unseal mechanism",
                        "type": "object",
                        "properties": {
                          "awsKmsSsm": {
                            "description": "AwsKmsSsmSpec contain the fields that required to unseal vault using aws kms ssm",
                            "type": "object",
                            "required": [
                              "kmsKeyID"
                            ],
                            "properties": {
                              "credentialSecret": {
                                "description": "Specifies the secret name containing AWS access key and AWS secret key\nsecret data:\n - access_key:\u003cvalue\u003e\n - secret_key:\u003cvalue\u003e",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "Used to make AWS KMS requests. This is useful,\nfor example, when connecting to KMS over a VPC Endpoint.\nIf not set, Vault will use the default API endpoint for your region.",
                                "type": "string"
                              },
                              "kmsKeyID": {
                                "description": "The ID or ARN of the AWS KMS key to encrypt values",
                                "type": "string"
                              },
                              "region": {
                                "type": "string"
                              },
                              "ssmKeyPrefix": {
                                "description": "An optional Key prefix for SSM Parameter store",
                                "type": "string"
                              }
                            }
                          },
                          "azureKeyVault": {
                            "description": "AzureKeyVault contain the fields that required to unseal vault using azure key vault",
                            "type": "object",
                            "required": [
                              "tenantID",
                              "vaultBaseURL"
                            ],
                            "properties": {
                              "aadClientSecret": {
                                "description": "Specifies the name of secret containing client id and client secret of AAD application\nsecret data:\n - client-id:\u003cvalue\u003e\n - client-secret:\u003cvalue\u003e",
                                "type": "string"
                              },
                              "clientCertSecret": {
                                "description": "Specifies the name of secret containing client cert and client cert password\nsecret data:\n - client-cert:\u003cvalue\u003e\n\t- client-cert-password: \u003cvalue\u003e",
                                "type": "string"
                              },
                              "cloud": {
                                "description": "The cloud environment identifier\ndefault: \"AZUREPUBLICCLOUD\"",
                                "type": "string"
                              },
                              "tenantID": {
                                "description": "The AAD Tenant ID",
                                "type": "string"
                              },
                              "useManagedIdentity": {
                                "description": "Use managed service identity for the virtual machine",
                                "type": "boolean"
                              },
                              "vaultBaseURL": {
                                "description": "Azure key vault url, for example https://myvault.vault.azure.net",
                                "type": "string"
                              }
                            }
                          },
                          "googleKmsGcs": {
                            "description": "GoogleKmsGcsSpec contain the fields that required to unseal vault using google kms",
                            "type": "object",
                            "required": [
                              "bucket",
                              "kmsCryptoKey",
                              "kmsKeyRing",
                              "kmsLocation",
                              "kmsProject"
                            ],
                            "properties": {
                              "bucket": {
                                "description": "The name of the Google Cloud Storage bucket to store values in",
                                "type": "string"
                              },
                              "credentialSecret": {
                                "description": "Secret containing Google application credential\nsecret data:\n - sa.json:\u003cvalue\u003e",
                                "type": "string"
                              },
                              "kmsCryptoKey": {
                                "description": "The name of the Google Cloud KMS crypto key to use",
                                "type": "string"
                              },
                              "kmsKeyRing": {
                                "description": "The name of the Google Cloud KMS key ring to use",
                                "type": "string"
                              },
                              "kmsLocation": {
                                "description": "The Google Cloud KMS location to use (eg. 'global', 'europe-west1')",
                                "type": "string"
                              },
                              "kmsProject": {
                                "description": "The Google Cloud KMS project to use",
                                "type": "string"
                              }
                            }
                          },
                          "kubernetesSecret": {
                            "description": "KubernetesSecretSpec contain the fields that required to unseal using kubernetes secret",
                            "type": "object",
                            "required": [
                              "secretName"
                            ],
                            "properties": {
                              "secretName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "overwriteExisting": {
                        "description": "overwrite existing unseal keys and root tokens, possibly dangerous!",
                        "type": "boolean"
                      },
                      "retryPeriodSeconds": {
                        "description": "How often to attempt to unseal the vault instance",
                        "type": "integer",
                        "format": "int64"
                      },
                      "secretShares": {
                        "description": "Total count of secret shares that exist",
                        "type": "integer",
                        "format": "int64"
                      },
                      "secretThreshold": {
                        "description": "Minimum required secret shares to unseal",
                        "type": "integer",
                        "format": "int64"
                      },
                      "storeRootToken": {
                        "description": "should the root token be stored in the key store (default true)",
                        "type": "boolean"
                      }
                    }
                  },
                  "version": {
                    "description": "Version of VaultServer to be deployed.",
                    "type": "string"
                  }
                }
              },
              "status": {
                "type": "object",
                "properties": {
                  "authMethodStatus": {
                    "description": "Status of the vault auth methods",
                    "type": "array",
                    "items": {
                      "description": "AuthMethodStatus specifies the status of the auth method maintained by the auth method controller",
                      "type": "object",
                      "required": [
                        "path",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "path": {
                          "description": "Specifies the path in which to enable the auth method.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "Specifies the reason why failed to enable auth method",
                          "type": "string"
                        },
                        "status": {
                          "description": "Specifies whether auth method is enabled or not",
                          "type": "string",
                          "enum": [
                            "EnableSucceeded",
                            "EnableFailed",
                            "DisableSucceeded",
                            "DisableFailed"
                          ]
                        },
                        "type": {
                          "description": " Specifies the name of the authentication method type, such as \"github\" or \"token\".",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "clientPort": {
                    "description": "ClientPort is the port for vault client to access.\nIt's the same on client LB service and vault nodes.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "conditions": {
                    "description": "Represents the latest available observations of a VaultServer current state.",
                    "type": "array",
                    "items": {
                      "description": "Condition defines an observation of a object operational state.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A human-readable message indicating details about the transition.\nThis field may be empty.",
                          "type": "string"
                        },
                        "observedGeneration": {
                          "description": "If set, this represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "reason": {
                          "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether this field is considered a guaranteed API.\nThis field may not be empty.",
                          "type": "string"
                        },
                        "severity": {
                          "description": "Severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of the condition, one of True, False, Unknown.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary util\ncan be useful (see .node.status.util), the ability to deconflict is important.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "initialized": {
                    "description": "Initialized indicates if the Vault service is initialized.",
                    "type": "boolean"
                  },
                  "observedGeneration": {
                    "description": "ObservedGeneration is the most recent generation observed for this resource. It corresponds to the\nresource's generation, which is updated on mutation by the API Server.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "phase": {
                    "description": "Phase indicates the state this Vault server jumps in.",
                    "type": "string",
                    "enum": [
                      "Initializing",
                      "Unsealing",
                      "Sealed",
                      "Ready",
                      "NotReady",
                      "Critical"
                    ]
                  },
                  "serviceName": {
                    "description": "ServiceName is the LB service for accessing vault nodes.",
                    "type": "string"
                  },
                  "updatedNodes": {
                    "description": "PodNames of updated Vault nodes. Updated means the Vault container image version\nmatches the spec's version.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "vaultStatus": {
                    "description": "VaultStatus is the set of Vault node specific statuses: Active, Standby, and Sealed",
                    "type": "object",
                    "properties": {
                      "active": {
                        "description": "PodName of the active Vault node. Active node is unsealed.\nOnly active node can serve requests.\nVault service only points to the active node.",
                        "type": "string"
                      },
                      "sealed": {
                        "description": "PodNames of Sealed Vault nodes. Sealed nodes MUST be unsealed to\nbecome standby or leader.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "standby": {
                        "description": "PodNames of the standby Vault nodes. Standby nodes are unsealed.\nStandby nodes do not process requests, and instead redirect to the active Vault.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "unsealed": {
                        "description": "PodNames of Unsealed Vault nodes.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "Replicas",
            "type": "string",
            "jsonPath": ".spec.replicas"
          },
          {
            "name": "Version",
            "type": "string",
            "jsonPath": ".spec.version"
          },
          {
            "name": "Status",
            "type": "string",
            "jsonPath": ".status.phase"
          },
          {
            "name": "Age",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      },
      {
        "name": "v1alpha2",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "type": "object",
                "required": [
                  "backend",
                  "version"
                ],
                "properties": {
                  "allowedSecretEngines": {
                    "description": "AllowedSecretEngines defines the types of Secret Engines that MAY be attached to a\nListener and the trusted namespaces where those Route resources MAY be\npresent.\n\nAlthough a client request may match multiple route rules, only one rule\nmay ultimately receive the request. Matching precedence MUST be\ndetermined in order of the following criteria:\n\n* The most specific match as defined by the Route type.\n* The oldest Route based on creation timestamp. For example, a Route with\n  a creation timestamp of \"2020-09-08 01:02:03\" is given precedence over\n  a Route with a creation timestamp of \"2020-09-08 01:02:04\".\n* If everything else is equivalent, the Route appearing first in\n  alphabetical order (namespace/name) should be given precedence. For\n  example, foo/bar is given precedence over foo/baz.\n\nAll valid rules within a Route attached to this Listener should be\nimplemented. Invalid Route rules can be ignored (sometimes that will mean\nthe full Route). If a Route rule transitions from valid to invalid,\nsupport for that Route rule should be dropped to ensure consistency. For\nexample, even if a filter specified by a Route rule is invalid, the rest\nof the rules within that Route should still be supported.\n\nSupport: Core",
                    "type": "object",
                    "default": {
                      "namespaces": {
                        "from": "Same"
                      }
                    },
                    "properties": {
                      "namespaces": {
                        "description": "Namespaces indicates namespaces from which Secret Engines may be attached to this\nListener. This is restricted to the namespace of this VaultServer by default.",
                        "type": "object",
                        "default": {
                          "from": "Same"
                        },
                        "properties": {
                          "from": {
                            "description": "From indicates where Secret Engines will be selected for this VaultServer. Possible\nvalues are:\n* All: Secret Engines in all namespaces may be used by this VaultServer.\n* Selector: Secret Engines in namespaces selected by the selector may be used by\n  this VaultServer.\n* Same: Only Secret Engines in the same namespace may be used by this VaultServer.",
                            "type": "string",
                            "default": "Same",
                            "enum": [
                              "All",
                              "Selector",
                              "Same"
                            ]
                          },
                          "selector": {
                            "description": "Selector must be specified when From is set to \"Selector\". In that case,\nonly Secret Engines in Namespaces matching this Selector will be selected by this\nVaultServer. This field is ignored for other values of \"From\".",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  }
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      },
                      "secretEngines": {
                        "description": "SecretEngines specifies the types of Secret Engines that are allowed to bind\nto this VaultServer. When unspecified or empty, all types of Secret Engines\nare allowed.",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "kv",
                            "pki",
                            "aws",
                            "azure",
                            "gcp",
                            "postgres",
                            "mongodb",
                            "mysql",
                            "mariadb",
                            "elasticsearch",
                            "redis"
                          ]
                        }
                      }
                    }
                  },
                  "authMethods": {
                    "description": "Specifies the list of auth methods to enable",
                    "type": "array",
                    "items": {
                      "description": "AuthMethod contains the information to enable vault auth method\nlinks: https://www.vaultproject.io/api/system/auth.html",
                      "type": "object",
                      "required": [
                        "path",
                        "type"
                      ],
                      "properties": {
                        "description": {
                          "description": "Specifies a human-friendly description of the auth method.",
                          "type": "string"
                        },
                        "jwtConfig": {
                          "description": "JWT auth config",
                          "type": "object",
                          "properties": {
                            "auditNonHMACRequestKeys": {
                              "description": "List of keys that will not be HMAC'd by audit devices in the request data object.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "auditNonHMACResponseKeys": {
                              "description": "List of keys that will not be HMAC'd by audit devices in the response data object.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "boundIssuer": {
                              "description": "The value against which to match the iss claim in a JWT.",
                              "type": "string"
                            },
                            "credentialSecretRef": {
                              "description": "CredentialSecretRef",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "defaultLeaseTTL": {
                              "description": "The default lease duration, specified as a string duration like \"5s\" or \"30m\".",
                              "type": "string"
                            },
                            "defaultRole": {
                              "description": "The default role to use if none is provided during login",
                              "type": "string"
                            },
                            "jwksURL": {
                              "description": "JWKS URL to use to authenticate signatures. Cannot be used with \"oidc_discovery_url\" or \"jwt_validation_pubkeys\".",
                              "type": "string"
                            },
                            "jwtSupportedAlgs": {
                              "description": "(comma-separated string, or array of strings: \u003coptional\u003e)\nA list of supported signing algorithms. Defaults to [RS256] for OIDC roles. Defaults to all available algorithms for JWT roles.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "jwtValidationPubkeys": {
                              "description": "(comma-separated string, or array of strings: \u003coptional\u003e)\nA list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used with \"jwks_url\" or \"oidc_discovery_url\".",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "listingVisibility": {
                              "description": "Speficies whether to show this mount in the UI-specific listing endpoint.",
                              "type": "string"
                            },
                            "maxLeaseTTL": {
                              "description": "The maximum lease duration, specified as a string duration like \"5s\" or \"30m\".",
                              "type": "string"
                            },
                            "oidcClientID": {
                              "description": "The OAuth Client ID from the provider for OIDC roles.",
                              "type": "string"
                            },
                            "oidcDiscoveryURL": {
                              "description": "common configuration parameters\nThe OIDC Discovery URL, without any .well-known component (base path). Cannot be used with \"jwks_url\" or \"jwt_validation_pubkeys\".",
                              "type": "string"
                            },
                            "oidcResponseMode": {
                              "description": "The response mode to be used in the OAuth2 request. Allowed values are \"query\" and \"form_post\". Defaults to \"query\".\nIf using Vault namespaces, and oidc_response_mode is \"form_post\", then \"namespace_in_state\" should be set to false.",
                              "type": "string"
                            },
                            "oidcResponseTypes": {
                              "description": "(comma-separated string, or array of strings: \u003coptional\u003e) - The response types to request.\nAllowed values are \"code\" and \"id_token\". Defaults to \"code\". Note: \"id_token\" may only be used if \"oidc_response_mode\" is set to \"form_post\".",
                              "type": "string"
                            },
                            "passthroughRequestHeaders": {
                              "description": "List of headers to whitelist and pass from the request to the backend.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "pluginName": {
                              "description": "The name of the plugin in the plugin catalog to use.",
                              "type": "string"
                            },
                            "providerConfig": {
                              "description": "Configuration options for provider-specific handling.\nProviders with specific handling include: Azure, Google. The options are described in each provider's section in OIDC Provider Setup.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "tlsSecretRef": {
                              "description": "TLSSecretRef",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            }
                          }
                        },
                        "kubernetesConfig": {
                          "description": "Kubernetes auth config",
                          "type": "object",
                          "properties": {
                            "auditNonHMACRequestKeys": {
                              "description": "List of keys that will not be HMAC'd by audit devices in the request data object.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "auditNonHMACResponseKeys": {
                              "description": "List of keys that will not be HMAC'd by audit devices in the response data object.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "defaultLeaseTTL": {
                              "description": "The default lease duration, specified as a string duration like \"5s\" or \"30m\".",
                              "type": "string"
                            },
                            "listingVisibility": {
                              "description": "Speficies whether to show this mount in the UI-specific listing endpoint.",
                              "type": "string"
                            },
                            "maxLeaseTTL": {
                              "description": "The maximum lease duration, specified as a string duration like \"5s\" or \"30m\".",
                              "type": "string"
                            },
                            "passthroughRequestHeaders": {
                              "description": "List of headers to whitelist and pass from the request to the backend.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "pluginName": {
                              "description": "The name of the plugin in the plugin catalog to use.",
                              "type": "string"
                            }
                          }
                        },
                        "local": {
                          "description": "Specifies if the auth method is a local only. Local auth methods are not replicated nor (if a secondary) removed by replication.",
                          "type": "boolean"
                        },
                        "oidcConfig": {
                          "description": "OIDC auth config",
                          "type": "object",
                          "properties": {
                            "auditNonHMACRequestKeys": {
                              "description": "List of keys that will not be HMAC'd by audit devices in the request data object.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "auditNonHMACResponseKeys": {
                              "description": "List of keys that will not be HMAC'd by audit devices in the response data object.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "boundIssuer": {
                              "description": "The value against which to match the iss claim in a JWT.",
                              "type": "string"
                            },
                            "credentialSecretRef": {
                              "description": "CredentialSecretRef",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "defaultLeaseTTL": {
                              "description": "The default lease duration, specified as a string duration like \"5s\" or \"30m\".",
                              "type": "string"
                            },
                            "defaultRole": {
                              "description": "The default role to use if none is provided during login",
                              "type": "string"
                            },
                            "jwksURL": {
                              "description": "JWKS URL to use to authenticate signatures. Cannot be used with \"oidc_discovery_url\" or \"jwt_validation_pubkeys\".",
                              "type": "string"
                            },
                            "jwtSupportedAlgs": {
                              "description": "(comma-separated string, or array of strings: \u003coptional\u003e)\nA list of supported signing algorithms. Defaults to [RS256] for OIDC roles. Defaults to all available algorithms for JWT roles.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "jwtValidationPubkeys": {
                              "description": "(comma-separated string, or array of strings: \u003coptional\u003e)\nA list of PEM-encoded public keys to use to authenticate signatures locally. Cannot be used with \"jwks_url\" or \"oidc_discovery_url\".",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "listingVisibility": {
                              "description": "Speficies whether to show this mount in the UI-specific listing endpoint.",
                              "type": "string"
                            },
                            "maxLeaseTTL": {
                              "description": "The maximum lease duration, specified as a string duration like \"5s\" or \"30m\".",
                              "type": "string"
                            },
                            "oidcClientID": {
                              "description": "The OAuth Client ID from the provider for OIDC roles.",
                              "type": "string"
                            },
                            "oidcDiscoveryURL": {
                              "description": "common configuration parameters\nThe OIDC Discovery URL, without any .well-known component (base path). Cannot be used with \"jwks_url\" or \"jwt_validation_pubkeys\".",
                              "type": "string"
                            },
                            "oidcResponseMode": {
                              "description": "The response mode to be used in the OAuth2 request. Allowed values are \"query\" and \"form_post\". Defaults to \"query\".\nIf using Vault namespaces, and oidc_response_mode is \"form_post\", then \"namespace_in_state\" should be set to false.",
                              "type": "string"
                            },
                            "oidcResponseTypes": {
                              "description": "(comma-separated string, or array of strings: \u003coptional\u003e) - The response types to request.\nAllowed values are \"code\" and \"id_token\". Defaults to \"code\". Note: \"id_token\" may only be used if \"oidc_response_mode\" is set to \"form_post\".",
                              "type": "string"
                            },
                            "passthroughRequestHeaders": {
                              "description": "List of headers to whitelist and pass from the request to the backend.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "pluginName": {
                              "description": "The name of the plugin in the plugin catalog to use.",
                              "type": "string"
                            },
                            "providerConfig": {
                              "description": "Configuration options for provider-specific handling.\nProviders with specific handling include: Azure, Google. The options are described in each provider's section in OIDC Provider Setup.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "tlsSecretRef": {
                              "description": "TLSSecretRef",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            }
                          }
                        },
                        "path": {
                          "description": "Specifies the path in which to enable the auth method.\nDefault value is the same as the 'type'",
                          "type": "string"
                        },
                        "pluginName": {
                          "description": "Specifies the name of the auth plugin to use based from the name in the plugin catalog.\nApplies only to plugin methods.",
                          "type": "string"
                        },
                        "type": {
                          "description": " Specifies the name of the authentication method type, such as \"github\" or \"token\".",
                          "type": "string",
                          "enum": [
                            "kubernetes",
                            "aws",
                            "gcp",
                            "userpass",
                            "cert",
                            "azure",
                            "jwt",
                            "oidc"
                          ]
                        }
                      }
                    }
                  },
                  "backend": {
                    "description": "backend storage configuration for vault",
                    "type": "object",
                    "properties": {
                      "azure": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/azure.html\n\nAzureSpec defines configuration to set up Google Cloud Storage as backend storage in vault",
                        "type": "object",
                        "required": [
                          "accountName",
                          "container"
                        ],
                        "properties": {
                          "accountName": {
                            "description": "Specifies the Azure Storage account name.",
                            "type": "string"
                          },
                          "container": {
                            "description": "Specifies the Azure Storage Blob container name.",
                            "type": "string"
                          },
                          "credentialSecretRef": {
                            "description": "Specifies the secret containing Azure Storage account key.\nsecret data:\n - account_key:\u003cvalue\u003e",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "maxParallel": {
                            "description": " Specifies the maximum number of concurrent operations to take place.",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "consul": {
                        "description": "ref: https://www.vaultproject.io/docs/configuration/storage/consul.html\n\nConsulSpec defines the configuration to set up consul as backend storage in vault",
                        "type": "object",
                        "properties": {
                          "aclTokenSecretRef": {
                            "description": "Specifies the secret name that contains ACL token with permission\nto read and write from the path in Consul's key-value store.\nsecret data:\n - aclToken:\u003cvalue\u003e",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "address": {
                            "description": "Specifies the address of the Consul agent to communicate with.\nThis can be an IP address, DNS record, or unix socket.",
                            "type": "string"
                          },
                          "checkTimeout": {
                            "description": "Specifies the check interval used to send health check information\nback to Consul.\nThis is specified using a label suffix like \"30s\" or \"1h\".",
                            "type": "string"
                          },
                          "consistencyMode": {
                            "description": "Specifies the Consul consistency mode.\nPossible values are \"default\" or \"strong\".",
                            "type": "string"
                          },
                          "disableRegistration": {
                            "description": "Specifies whether Vault should register itself with Consul.\nPossible values are \"true\" or \"false\"",
                            "type": "string"
                          },
                          "lockWaitTime": {
                            "description": "Specifies the wait time before a lock lock acquisition is made.\nThis affects the minimum time it takes to cancel a lock acquisition.",
                            "type": "string"
                          },
                          "maxParallel": {
                            "description": "Specifies the maximum number of concurrent requests to Consul.",
                            "type": "string"
                          },
                          "path": {
                            "description": "Specifies the path in Consul's key-value store\nwhere Vault data will be stored.",
                            "type": "string"
                          },
                          "scheme": {
                            "description": "Specifies the scheme to use when communicating with Consul.\nThis can be set to \"http\" or \"https\".",
                            "type": "string"
                          },
                          "service": {
                            "description": "Specifies the name of the service to register in Consul.",
                            "type": "string"
                          },
                          "serviceAddress": {
                            "description": "Specifies a service-specific address to set on the service registration\nin Consul.\nIf unset, Vault will use what it knows to be the HA redirect address\n- which is usually desirable.\nSetting this parameter to \"\" will tell Consul to leverage the configuration\nof the node the service is registered on dynamically.",
                            "type": "string"
                          },
                          "serviceTags": {
                            "description": "Specifies a comma-separated list of tags\nto attach to the service registration in Consul.",
                            "type": "string"
                          },
                          "sessionTTL": {
                            "description": "Specifies the minimum allowed session TTL.\nConsul server has a lower limit of 10s on the session TTL by default.",
                            "type": "string"
                          },
                          "tlsMinVersion": {
                            "description": "Specifies the minimum TLS version to use.\nAccepted values are \"tls10\", \"tls11\" or \"tls12\".",
                            "type": "string"
                          },
                          "tlsSecretRef": {
                            "description": "Specifies the secret name that contains tls_ca_file, tls_cert_file and tls_key_file\nfor consul communication\nSecret data:\n - ca.crt\n - tls.crt\n - tls.key",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "tlsSkipVerify": {
                            "description": "Specifies if the TLS host verification should be disabled.\nIt is highly discouraged that you disable this option.",
                            "type": "boolean"
                          }
                        }
                      },
                      "dynamodb": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/dynamodb.html\n\nDynamoDBSpec defines configuration to set up DynamoDB Storage as backend storage in vault",
                        "type": "object",
                        "properties": {
                          "credentialSecretRef": {
                            "description": "Specifies the secret name containing AWS session token, AWS access key and AWS secret key\nsecret data:\n - access_key=\u003cvalue\u003e\n - secret_key=\u003cvalue\u003e\n - session_token=\u003cvalue\u003e",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "endpoint": {
                            "description": "Specifies an alternative, AWS compatible, DynamoDB endpoint.",
                            "type": "string"
                          },
                          "haEnabled": {
                            "description": "Specifies whether this backend should be used to run Vault in high availability mode.",
                            "type": "boolean"
                          },
                          "maxParallel": {
                            "description": "Specifies the maximum number of parallel operations to take place.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "readCapacity": {
                            "description": "Specifies the maximum number of reads consumed per second on the table",
                            "type": "integer",
                            "format": "int64"
                          },
                          "region": {
                            "description": "Specifies the AWS region",
                            "type": "string"
                          },
                          "table": {
                            "description": "Specifies the name of the DynamoDB table in which to store Vault data.\nIf the specified table does not yet exist, it will be created during initialization.\ndefault: vault-dynamodb-backend",
                            "type": "string"
                          },
                          "writeCapacity": {
                            "description": "Specifies the maximum number of writes performed per second on the table.",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "etcd": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/etcd.html\n\nEtcdSpec defines configuration to set up etcd as backend storage in vault",
                        "type": "object",
                        "required": [
                          "address"
                        ],
                        "properties": {
                          "address": {
                            "description": "Specifies the addresses of the etcd instances",
                            "type": "string"
                          },
                          "credentialSecretRef": {
                            "description": "Specifies the secret name that contain username and password to use when authenticating with the etcd server\nsecret data:\n - username:\u003cvalue\u003e\n - password:\u003cvalue\u003e",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "discoverySrv": {
                            "description": "Specifies the domain name to query for SRV records describing cluster endpoints",
                            "type": "string"
                          },
                          "etcdApi": {
                            "description": "Specifies the version of the API to communicate with etcd",
                            "type": "string"
                          },
                          "haEnable": {
                            "description": "Specifies if high availability should be enabled",
                            "type": "boolean"
                          },
                          "path": {
                            "description": "Specifies the path in etcd where vault data will be stored",
                            "type": "string"
                          },
                          "sync": {
                            "description": "Specifies whether to sync list of available etcd services on startup",
                            "type": "boolean"
                          },
                          "tlsSecretRef": {
                            "description": "Specifies the secret name that contains tls_ca_file, tls_cert_file and tls_key_file for etcd communication\nsecret data:\n - ca.crt\n - tls.crt\n - tls.key",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      },
                      "file": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/filesystem.html\n\nFileSpec defines configuration to set up File system Storage as backend storage in vault",
                        "type": "object",
                        "required": [
                          "path",
                          "volumeClaimTemplate"
                        ],
                        "properties": {
                          "path": {
                            "description": "The absolute path on disk to the directory where the data will be stored.\nIf the directory does not exist, Vault will create it.",
                            "type": "string"
                          },
                          "volumeClaimTemplate": {
                            "description": "volumeClaimTemplate is a claim that pods are allowed to reference.\nThe VaultServer controller is responsible for deploying the claim\nand update the volumeMounts in the Vault server container in the template.",
                            "type": "object",
                            "properties": {
                              "apiVersion": {
                                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                "type": "string"
                              },
                              "metadata": {
                                "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "generateName": {
                                    "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                    "type": "string"
                                  },
                                  "labels": {
                                    "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "name": {
                                    "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces",
                                    "type": "string"
                                  },
                                  "ownerReferences": {
                                    "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.",
                                    "type": "array",
                                    "items": {
                                      "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.",
                                      "type": "object",
                                      "required": [
                                        "apiVersion",
                                        "kind",
                                        "name",
                                        "uid"
                                      ],
                                      "properties": {
                                        "apiVersion": {
                                          "description": "API version of the referent.",
                                          "type": "string"
                                        },
                                        "blockOwnerDeletion": {
                                          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.",
                                          "type": "boolean"
                                        },
                                        "controller": {
                                          "description": "If true, this reference points to the managing controller.",
                                          "type": "boolean"
                                        },
                                        "kind": {
                                          "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                                          "type": "string"
                                        },
                                        "uid": {
                                          "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                                          "type": "string"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    }
                                  }
                                }
                              },
                              "spec": {
                                "description": "Spec defines the desired characteristics of a volume requested by a pod author.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                "type": "object",
                                "properties": {
                                  "accessModes": {
                                    "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "dataSource": {
                                    "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                                    "type": "object",
                                    "required": [
                                      "kind",
                                      "name"
                                    ],
                                    "properties": {
                                      "apiGroup": {
                                        "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "Kind is the type of resource being referenced",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name is the name of resource being referenced",
                                        "type": "string"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "dataSourceRef": {
                                    "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                    "type": "object",
                                    "required": [
                                      "kind",
                                      "name"
                                    ],
                                    "properties": {
                                      "apiGroup": {
                                        "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "Kind is the type of resource being referenced",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name is the name of resource being referenced",
                                        "type": "string"
                                      },
                                      "namespace": {
                                        "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "resources": {
                                    "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                    "type": "object",
                                    "properties": {
                                      "limits": {
                                        "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                        "type": "object",
                                        "additionalProperties": {
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        }
                                      },
                                      "requests": {
                                        "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                        "type": "object",
                                        "additionalProperties": {
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    }
                                  },
                                  "selector": {
                                    "description": "selector is a label query over volumes to consider for binding.",
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "type": "array",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "matchLabels": {
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "storageClassName": {
                                    "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                                    "type": "string"
                                  },
                                  "volumeAttributesClassName": {
                                    "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                                    "type": "string"
                                  },
                                  "volumeMode": {
                                    "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                                    "type": "string"
                                  },
                                  "volumeName": {
                                    "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                                    "type": "string"
                                  }
                                }
                              },
                              "status": {
                                "description": "Status represents the current information/status of a persistent volume claim.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                "type": "object",
                                "properties": {
                                  "accessModes": {
                                    "description": "accessModes contains the actual access modes the volume backing the PVC has.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "allocatedResourceStatuses": {
                                    "description": "allocatedResourceStatuses stores status of resource being resized for the given PVC.\nKey names follow standard Kubernetes label syntax. Valid values are either:\n\t* Un-prefixed keys:\n\t\t- storage - the capacity of the volume.\n\t* Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered\nreserved and hence may not be used.\n\nClaimResourceStatus can be in any of following states:\n\t- ControllerResizeInProgress:\n\t\tState set when resize controller starts resizing the volume in control-plane.\n\t- ControllerResizeFailed:\n\t\tState set when resize has failed in resize controller with a terminal error.\n\t- NodeResizePending:\n\t\tState set when resize controller has finished resizing the volume but further resizing of\n\t\tvolume is needed on the node.\n\t- NodeResizeInProgress:\n\t\tState set when kubelet starts resizing the volume.\n\t- NodeResizeFailed:\n\t\tState set when resizing has failed in kubelet with a terminal error. Transient errors don't set\n\t\tNodeResizeFailed.\nFor example: if expanding a PVC for more capacity - this field can be one of the following states:\n\t- pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeFailed\"\nWhen this field is not set, it means that no resize operation is in progress for the given PVC.\n\nA controller that receives PVC update with previously unknown resourceName or ClaimResourceStatus\nshould ignore the update for the purpose it was designed. For example - a controller that\nonly is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid\nresources associated with PVC.\n\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "description": "When a controller receives persistentvolume claim update with ClaimResourceStatus for a resource\nthat it does not recognizes, then it should ignore that update and let other controllers\nhandle it.",
                                      "type": "string"
                                    },
                                    "x-kubernetes-map-type": "granular"
                                  },
                                  "allocatedResources": {
                                    "description": "allocatedResources tracks the resources allocated to a PVC including its capacity.\nKey names follow standard Kubernetes label syntax. Valid values are either:\n\t* Un-prefixed keys:\n\t\t- storage - the capacity of the volume.\n\t* Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered\nreserved and hence may not be used.\n\nCapacity reported here may be larger than the actual capacity when a volume expansion operation\nis requested.\nFor storage quota, the larger value from allocatedResources and PVC.spec.resources is used.\nIf allocatedResources is not set, PVC.spec.resources alone is used for quota calculation.\nIf a volume expansion capacity request is lowered, allocatedResources is only\nlowered if there are no expansion operations in progress and if the actual volume capacity\nis equal or lower than the requested capacity.\n\nA controller that receives PVC update with previously unknown resourceName\nshould ignore the update for the purpose it was designed. For example - a controller that\nonly is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid\nresources associated with PVC.\n\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  },
                                  "capacity": {
                                    "description": "capacity represents the actual resources of the underlying volume.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  },
                                  "conditions": {
                                    "description": "conditions is the current Condition of persistent volume claim. If underlying persistent volume is being\nresized then the Condition will be set to 'Resizing'.",
                                    "type": "array",
                                    "items": {
                                      "description": "PersistentVolumeClaimCondition contains details about state of pvc",
                                      "type": "object",
                                      "required": [
                                        "status",
                                        "type"
                                      ],
                                      "properties": {
                                        "lastProbeTime": {
                                          "description": "lastProbeTime is the time we probed the condition.",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "lastTransitionTime": {
                                          "description": "lastTransitionTime is the time the condition transitioned from one status to another.",
                                          "type": "string",
                                          "format": "date-time"
                                        },
                                        "message": {
                                          "description": "message is the human-readable message indicating details about last transition.",
                                          "type": "string"
                                        },
                                        "reason": {
                                          "description": "reason is a unique, this should be a short, machine understandable string that gives the reason\nfor condition's last transition. If it reports \"Resizing\" that means the underlying\npersistent volume is being resized.",
                                          "type": "string"
                                        },
                                        "status": {
                                          "description": "Status is the status of the condition.\nCan be True, False, Unknown.\nMore info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=state%20of%20pvc-,conditions.status,-(string)%2C%20required",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "Type is the type of the condition.\nMore info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=set%20to%20%27ResizeStarted%27.-,PersistentVolumeClaimCondition,-contains%20details%20about",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-map-keys": [
                                      "type"
                                    ],
                                    "x-kubernetes-list-type": "map"
                                  },
                                  "currentVolumeAttributesClassName": {
                                    "description": "currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using.\nWhen unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim\nThis is a beta field and requires enabling VolumeAttributesClass feature (off by default).",
                                    "type": "string"
                                  },
                                  "modifyVolumeStatus": {
                                    "description": "ModifyVolumeStatus represents the status object of ControllerModifyVolume operation.\nWhen this is unset, there is no ModifyVolume operation being attempted.\nThis is a beta field and requires enabling VolumeAttributesClass feature (off by default).",
                                    "type": "object",
                                    "required": [
                                      "status"
                                    ],
                                    "properties": {
                                      "status": {
                                        "description": "status is the status of the ControllerModifyVolume operation. It can be in any of following states:\n - Pending\n   Pending indicates that the PersistentVolumeClaim cannot be modified due to unmet requirements, such as\n   the specified VolumeAttributesClass not existing.\n - InProgress\n   InProgress indicates that the volume is being modified.\n - Infeasible\n  Infeasible indicates that the request has been rejected as invalid by the CSI driver. To\n\t  resolve the error, a valid VolumeAttributesClass needs to be specified.\nNote: New statuses can be added in the future. Consumers should check for unknown statuses and fail appropriately.",
                                        "type": "string"
                                      },
                                      "targetVolumeAttributesClassName": {
                                        "description": "targetVolumeAttributesClassName is the name of the VolumeAttributesClass the PVC currently being reconciled",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "phase": {
                                    "description": "phase represents the current phase of PersistentVolumeClaim.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "gcs": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/google-cloud-storage.html\n\nGcsSpec defines configuration to set up Google Cloud Storage as backend storage in vault",
                        "type": "object",
                        "required": [
                          "bucket"
                        ],
                        "properties": {
                          "bucket": {
                            "description": "Specifies the name of the bucket to use for storage.",
                            "type": "string"
                          },
                          "chunkSize": {
                            "description": "Specifies the maximum size (in kilobytes) to send in a single request. If set to 0,\nit will attempt to send the whole object at once, but will not retry any failures.",
                            "type": "string"
                          },
                          "credentialSecretRef": {
                            "description": "Secret containing Google application credential\nsecret data:\n - sa.json:\u003cvalue\u003e",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "haEnabled": {
                            "description": "Specifies if high availability mode is enabled.",
                            "type": "boolean"
                          },
                          "maxParallel": {
                            "description": " Specifies the maximum number of parallel operations to take place.",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "inmem": {
                        "description": "ref: https://www.vaultproject.io/docs/configuration/storage/in-memory.html",
                        "type": "object"
                      },
                      "mysql": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/mysql.html\n\nMySQLSpec defines configuration to set up MySQL Storage as backend storage in vault",
                        "type": "object",
                        "properties": {
                          "address": {
                            "description": "Specifies the address of the MySQL host.\nif DatabaseRef is set then Address will be generated from it\nThis must be set if DatabaseRef is empty, validate from ValidatingWebhook\nhost example: \u003cdb-name\u003e.\u003cdb-ns\u003e.svc:3306",
                            "type": "string"
                          },
                          "credentialSecretRef": {
                            "description": "Specifies the MySQL username and password to connect to the database\nsecret data:\n - username=\u003cvalue\u003e\n - password=\u003cvalue\u003e",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "database": {
                            "description": "Specifies the name of the database. If the database does not exist, Vault will attempt to create it.",
                            "type": "string",
                            "default": "vault"
                          },
                          "databaseRef": {
                            "description": "DatabaseRef contains the info of KubeDB managed Database\nThis will be used to generate the \"Address\" field",
                            "type": "object",
                            "required": [
                              "name",
                              "namespace"
                            ],
                            "properties": {
                              "name": {
                                "description": "`name` is the name of the app.\nRequired",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "`namespace` is the namespace of the app.\nRequired",
                                "type": "string"
                              },
                              "parameters": {
                                "description": "Parameters is a set of the parameters to be used to override default\nparameters. The inline YAML/JSON payload to be translated into equivalent\nJSON object.\n\nThe Parameters field is NOT secret or secured in any way and should\nNEVER be used to hold sensitive information.",
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true,
                                "x-kubernetes-embedded-resource": true
                              }
                            }
                          },
                          "haEnabled": {
                            "description": "High Availability Parameter\nSpecifies if high availability mode is enabled. This is a boolean value, but it is specified as a string like \"true\" or \"false\".",
                            "type": "string",
                            "default": "true"
                          },
                          "lockTable": {
                            "description": "High Availability Parameter\nSpecifies the name of the table to use for storing high availability information.\nBy default, this is the name of the table suffixed with _lock. If the table does not exist, Vault will attempt to create it.",
                            "type": "string",
                            "default": "vault_lock"
                          },
                          "maxConnectionLifetime": {
                            "description": "Specifies the maximum amount of time in seconds that a connection may be reused. If \u003c= 0s connections are reused forever.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "maxIdleConnection": {
                            "description": "Specifies the maximum number of idle connections to the database.\nA zero uses value defaults to 2 idle connections and a negative value disables idle connections.\nIf larger than max_parallel it will be reduced to be equal.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "maxParallel": {
                            "description": " Specifies the maximum number of concurrent requests to take place.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "plaintextCredentialTransmission": {
                            "type": "string"
                          },
                          "table": {
                            "description": "Specifies the name of the table. If the table does not exist, Vault will attempt to create it.",
                            "type": "string",
                            "default": "vault"
                          },
                          "tlsSecretRef": {
                            "description": "Specifies the name of the secret containing the CA certificate to connect using TLS.\nsecret data:\n - ca.crt=\u003cvalue\u003e",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      },
                      "postgresql": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/postgresql.html\n\nPostgreSQLSpec defines configuration to set up PostgreSQL storage as backend storage in vault",
                        "type": "object",
                        "properties": {
                          "address": {
                            "description": "Specifies the address of the Postgres host.\nif DatabaseRef is set then Address will be generated from it\nThis must be set if DatabaseRef is empty, validate from ValidatingWebhook\nhost example: \u003cdb-name\u003e.\u003cdb-ns\u003e.svc:3306",
                            "type": "string"
                          },
                          "credentialSecretRef": {
                            "description": " - username=\u003cvalue\u003e\n - password=\u003cvalue\u003e\n - connection_url=\"postgres://\u003cusername\u003e:\u003cpassword\u003e@\u003chost\u003e:\u003cport\u003e/\u003cdb_name\u003e\"",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "databaseRef": {
                            "description": "DatabaseRef contains the info of KubeDB managed Database\nThis will be used to generate the \"Address\" field",
                            "type": "object",
                            "required": [
                              "name",
                              "namespace"
                            ],
                            "properties": {
                              "name": {
                                "description": "`name` is the name of the app.\nRequired",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "`namespace` is the namespace of the app.\nRequired",
                                "type": "string"
                              },
                              "parameters": {
                                "description": "Parameters is a set of the parameters to be used to override default\nparameters. The inline YAML/JSON payload to be translated into equivalent\nJSON object.\n\nThe Parameters field is NOT secret or secured in any way and should\nNEVER be used to hold sensitive information.",
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true,
                                "x-kubernetes-embedded-resource": true
                              }
                            }
                          },
                          "haEnabled": {
                            "description": "High Availability Parameter\nDefault not enabled, requires 9.5 or later\nSpecifies if high availability mode is enabled. This is a boolean value, but it is specified as a string like \"true\" or \"false\".",
                            "type": "string",
                            "default": "false"
                          },
                          "haTable": {
                            "description": "Specifies the name of the table to use for storing high availability information. This table must already exist (Vault will not attempt to create it).",
                            "type": "string",
                            "default": "vault_ha_locks"
                          },
                          "maxIdleConnection": {
                            "description": "Default not set. Sets the maximum number of connections in the idle connection pool.\nSee golang docs on SetMaxIdleConns(https://pkg.go.dev/database/sql#DB.SetMaxIdleConns) for more information. Requires 1.2 or later.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "maxParallel": {
                            "description": " Specifies the maximum number of concurrent requests to take place.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "sslMode": {
                            "description": "SSLMode for both standalone and clusters. [disable;require;verify-ca;verify-full]",
                            "type": "string",
                            "enum": [
                              "disable",
                              "require",
                              "verify-ca",
                              "verify-full"
                            ]
                          },
                          "table": {
                            "description": "Specifies the name of the table in which to write Vault data.\nThis table must already exist (Vault will not attempt to create it).",
                            "type": "string",
                            "default": "vault_kv_store"
                          }
                        }
                      },
                      "raft": {
                        "description": "RaftSpec defines the configuration for the Raft integrated storage.\nhttps://www.vaultproject.io/docs/configuration/storage/raft",
                        "type": "object",
                        "properties": {
                          "autopilotReconcileInterval": {
                            "description": "This is the interval after which autopilot will pick up any state changes.\ndefault: \"\"",
                            "type": "string"
                          },
                          "maxEntrySize": {
                            "description": "This configures the maximum number of bytes for a raft entry. It applies to both Put operations and transactions.\ndefault: 1048576",
                            "type": "integer",
                            "format": "int64"
                          },
                          "performanceMultiplier": {
                            "description": "An integer multiplier used by servers to scale key Raft timing parameters.\nTuning this affects the time it takes Vault to detect leader failures and to perform leader elections,\nat the expense of requiring more network and CPU resources for better performance.\ndefault: 0",
                            "type": "integer",
                            "format": "int64"
                          },
                          "snapshotThreshold": {
                            "description": "This controls the minimum number of raft commit entries between snapshots that are saved to disk.\ndefault: 8192",
                            "type": "integer",
                            "format": "int64"
                          },
                          "storage": {
                            "description": "Storage to specify how storage shall be used.",
                            "type": "object",
                            "properties": {
                              "accessModes": {
                                "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "dataSource": {
                                "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                                "type": "object",
                                "required": [
                                  "kind",
                                  "name"
                                ],
                                "properties": {
                                  "apiGroup": {
                                    "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "Kind is the type of resource being referenced",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name is the name of resource being referenced",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "dataSourceRef": {
                                "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                "type": "object",
                                "required": [
                                  "kind",
                                  "name"
                                ],
                                "properties": {
                                  "apiGroup": {
                                    "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "Kind is the type of resource being referenced",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name is the name of resource being referenced",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                    "type": "string"
                                  }
                                }
                              },
                              "resources": {
                                "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                "type": "object",
                                "properties": {
                                  "limits": {
                                    "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                    "type": "object",
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  },
                                  "requests": {
                                    "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                    "type": "object",
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  }
                                }
                              },
                              "selector": {
                                "description": "selector is a label query over volumes to consider for binding.",
                                "type": "object",
                                "properties": {
                                  "matchExpressions": {
                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                    "type": "array",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "matchLabels": {
                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "storageClassName": {
                                "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                                "type": "string"
                              },
                              "volumeAttributesClassName": {
                                "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                                "type": "string"
                              },
                              "volumeMode": {
                                "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                                "type": "string"
                              },
                              "volumeName": {
                                "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                                "type": "string"
                              }
                            }
                          },
                          "trailingLogs": {
                            "description": "This controls how many log entries are left in the log store on disk after a snapshot is made.\ndefault: 10000",
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      },
                      "s3": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/s3.html\n\nS3Spec defines configuration to set up Amazon S3 Storage as backend storage in vault",
                        "type": "object",
                        "required": [
                          "bucket"
                        ],
                        "properties": {
                          "bucket": {
                            "description": "Specifies the name of the bucket to use for storage.",
                            "type": "string"
                          },
                          "credentialSecretRef": {
                            "description": "Specifies the secret name containing AWS session token, AWS access key and AWS secret key\nsecret data:\n - access_key=\u003cvalue\u003e\n - secret_key=\u003cvalue\u003e\n - session_token=\u003cvalue\u003e",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "disableSSL": {
                            "description": "Specifies if SSL should be used for the endpoint connection",
                            "type": "boolean"
                          },
                          "endpoint": {
                            "description": "Specifies an alternative, AWS compatible, S3 endpoint.",
                            "type": "string"
                          },
                          "forcePathStyle": {
                            "description": "Specifies whether to use host bucket style domains with the configured endpoint.",
                            "type": "boolean"
                          },
                          "maxParallel": {
                            "description": "Specifies the maximum number of parallel operations to take place.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "region": {
                            "description": "Specifies the AWS region",
                            "type": "string"
                          }
                        }
                      },
                      "swift": {
                        "description": "vault doc: https://www.vaultproject.io/docs/configuration/storage/swift.html\n\nSwiftSpec defines configuration to set up Swift Storage as backend storage in vault",
                        "type": "object",
                        "required": [
                          "authURL",
                          "container"
                        ],
                        "properties": {
                          "authURL": {
                            "description": "Specifies the OpenStack authentication endpoint.",
                            "type": "string"
                          },
                          "container": {
                            "description": "Specifies the name of the Swift container.",
                            "type": "string"
                          },
                          "credentialSecretRef": {
                            "description": "Specifies the name of the secret containing the OpenStack account/username and password\nSpecifies secret containing auth token from alternate authentication.\nsecret data:\n - username=\u003cvalue\u003e\n - password=\u003cvalue\u003e\n - auth_token=\u003cvalue\u003e",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "domain": {
                            "description": "Specifies the name of the user domain.",
                            "type": "string"
                          },
                          "maxParallel": {
                            "description": " Specifies the maximum number of concurrent requests to take place.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "projectDomain": {
                            "description": "Specifies the name of the project's domain.",
                            "type": "string"
                          },
                          "region": {
                            "description": "Specifies the name of the region.",
                            "type": "string"
                          },
                          "storageURL": {
                            "description": "Specifies storage URL from alternate authentication.",
                            "type": "string"
                          },
                          "tenant": {
                            "description": "Specifies the name of the tenant. If left blank, this will default to the default tenant of the username.",
                            "type": "string"
                          },
                          "tenantID": {
                            "description": "Specifies the id of the tenant.",
                            "type": "string"
                          },
                          "trustID": {
                            "description": "Specifies the id of the trust.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "configSecret": {
                    "description": "ConfigSecret is an optional field to provide extra configuration for vault.\nThis secret contain extra config for vault\nFile name should be 'vault.hcl'.\nIf specified, this file will be appended to the controller configuration file.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "dataSources": {
                    "description": "DataSources is a list of Configmaps/Secrets in the same namespace as the VaultServer\nobject, which shall be mounted into the VaultServer Pods.\nThe data are mounted into /etc/vault/data/\u003cname\u003e.\nThe first data will be named as \"data-0\", second one will be named as \"data-1\" and so on.",
                    "type": "array",
                    "items": {
                      "description": "Represents the source of a volume to mount.\nOnly one of its members may be specified.",
                      "type": "object",
                      "properties": {
                        "awsElasticBlockStore": {
                          "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nDeprecated: AWSElasticBlockStore is deprecated. All operations for the in-tree\nawsElasticBlockStore type are redirected to the ebs.csi.aws.com CSI driver.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                          "type": "object",
                          "required": [
                            "volumeID"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                              "type": "string"
                            },
                            "partition": {
                              "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                              "type": "integer",
                              "format": "int32"
                            },
                            "readOnly": {
                              "description": "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                              "type": "boolean"
                            },
                            "volumeID": {
                              "description": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                              "type": "string"
                            }
                          }
                        },
                        "azureDisk": {
                          "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.\nDeprecated: AzureDisk is deprecated. All operations for the in-tree azureDisk type\nare redirected to the disk.csi.azure.com CSI driver.",
                          "type": "object",
                          "required": [
                            "diskName",
                            "diskURI"
                          ],
                          "properties": {
                            "cachingMode": {
                              "description": "cachingMode is the Host Caching mode: None, Read Only, Read Write.",
                              "type": "string"
                            },
                            "diskName": {
                              "description": "diskName is the Name of the data disk in the blob storage",
                              "type": "string"
                            },
                            "diskURI": {
                              "description": "diskURI is the URI of data disk in the blob storage",
                              "type": "string"
                            },
                            "fsType": {
                              "description": "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": "string",
                              "default": "ext4"
                            },
                            "kind": {
                              "description": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean",
                              "default": false
                            }
                          }
                        },
                        "azureFile": {
                          "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod.\nDeprecated: AzureFile is deprecated. All operations for the in-tree azureFile type\nare redirected to the file.csi.azure.com CSI driver.",
                          "type": "object",
                          "required": [
                            "secretName",
                            "shareName"
                          ],
                          "properties": {
                            "readOnly": {
                              "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean"
                            },
                            "secretName": {
                              "description": "secretName is the  name of secret that contains Azure Storage Account Name and Key",
                              "type": "string"
                            },
                            "shareName": {
                              "description": "shareName is the azure share Name",
                              "type": "string"
                            }
                          }
                        },
                        "cephfs": {
                          "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime.\nDeprecated: CephFS is deprecated and the in-tree cephfs type is no longer supported.",
                          "type": "object",
                          "required": [
                            "monitors"
                          ],
                          "properties": {
                            "monitors": {
                              "description": "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": "boolean"
                            },
                            "secretFile": {
                              "description": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "user": {
                              "description": "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                              "type": "string"
                            }
                          }
                        },
                        "cinder": {
                          "description": "cinder represents a cinder volume attached and mounted on kubelets host machine.\nDeprecated: Cinder is deprecated. All operations for the in-tree cinder type\nare redirected to the cinder.csi.openstack.org CSI driver.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                          "type": "object",
                          "required": [
                            "volumeID"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                              "type": "boolean"
                            },
                            "secretRef": {
                              "description": "secretRef is optional: points to a secret object containing parameters used to connect\nto OpenStack.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "volumeID": {
                              "description": "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                              "type": "string"
                            }
                          }
                        },
                        "configMap": {
                          "description": "configMap represents a configMap that should populate this volume",
                          "type": "object",
                          "properties": {
                            "defaultMode": {
                              "description": "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "items": {
                              "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                              "type": "array",
                              "items": {
                                "description": "Maps a string key to a path within a volume.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "path"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the key to project.",
                                    "type": "string"
                                  },
                                  "mode": {
                                    "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "path": {
                                    "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "description": "optional specify whether the ConfigMap or its keys must be defined",
                              "type": "boolean"
                            }
                          },
                          "x-kubernetes-map-type": "atomic"
                        },
                        "csi": {
                          "description": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.",
                          "type": "object",
                          "required": [
                            "driver"
                          ],
                          "properties": {
                            "driver": {
                              "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.",
                              "type": "string"
                            },
                            "fsType": {
                              "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.",
                              "type": "string"
                            },
                            "nodePublishSecretRef": {
                              "description": "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "readOnly": {
                              "description": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).",
                              "type": "boolean"
                            },
                            "volumeAttributes": {
                              "description": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "downwardAPI": {
                          "description": "downwardAPI represents downward API about the pod that should populate this volume",
                          "type": "object",
                          "properties": {
                            "defaultMode": {
                              "description": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "items": {
                              "description": "Items is a list of downward API volume file",
                              "type": "array",
                              "items": {
                                "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                "type": "object",
                                "required": [
                                  "path"
                                ],
                                "properties": {
                                  "fieldRef": {
                                    "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                    "type": "object",
                                    "required": [
                                      "fieldPath"
                                    ],
                                    "properties": {
                                      "apiVersion": {
                                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                        "type": "string"
                                      },
                                      "fieldPath": {
                                        "description": "Path of the field to select in the specified API version.",
                                        "type": "string"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "mode": {
                                    "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "path": {
                                    "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                    "type": "string"
                                  },
                                  "resourceFieldRef": {
                                    "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                    "type": "object",
                                    "required": [
                                      "resource"
                                    ],
                                    "properties": {
                                      "containerName": {
                                        "description": "Container name: required for volumes, optional for env vars",
                                        "type": "string"
                                      },
                                      "divisor": {
                                        "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "resource": {
                                        "description": "Required: resource to select",
                                        "type": "string"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "emptyDir": {
                          "description": "emptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                          "type": "object",
                          "properties": {
                            "medium": {
                              "description": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                              "type": "string"
                            },
                            "sizeLimit": {
                              "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "ephemeral": {
                          "description": "ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time.",
                          "type": "object",
                          "properties": {
                            "volumeClaimTemplate": {
                              "description": "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `\u003cpod name\u003e-\u003cvolume name\u003e` where\n`\u003cvolume name\u003e` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\nRequired, must not be nil.",
                              "type": "object",
                              "required": [
                                "spec"
                              ],
                              "properties": {
                                "metadata": {
                                  "description": "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation.",
                                  "type": "object",
                                  "properties": {
                                    "annotations": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "finalizers": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "labels": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "spec": {
                                  "description": "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here.",
                                  "type": "object",
                                  "properties": {
                                    "accessModes": {
                                      "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "dataSource": {
                                      "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                                      "type": "object",
                                      "required": [
                                        "kind",
                                        "name"
                                      ],
                                      "properties": {
                                        "apiGroup": {
                                          "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                          "type": "string"
                                        },
                                        "kind": {
                                          "description": "Kind is the type of resource being referenced",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name is the name of resource being referenced",
                                          "type": "string"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "dataSourceRef": {
                                      "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                      "type": "object",
                                      "required": [
                                        "kind",
                                        "name"
                                      ],
                                      "properties": {
                                        "apiGroup": {
                                          "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                          "type": "string"
                                        },
                                        "kind": {
                                          "description": "Kind is the type of resource being referenced",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name is the name of resource being referenced",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "resources": {
                                      "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                      "type": "object",
                                      "properties": {
                                        "limits": {
                                          "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                          "type": "object",
                                          "additionalProperties": {
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        },
                                        "requests": {
                                          "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                          "type": "object",
                                          "additionalProperties": {
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          }
                                        }
                                      }
                                    },
                                    "selector": {
                                      "description": "selector is a label query over volumes to consider for binding.",
                                      "type": "object",
                                      "properties": {
                                        "matchExpressions": {
                                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                          "type": "array",
                                          "items": {
                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                            "type": "object",
                                            "required": [
                                              "key",
                                              "operator"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "key is the label key that the selector applies to.",
                                                "type": "string"
                                              },
                                              "operator": {
                                                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                "type": "string"
                                              },
                                              "values": {
                                                "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "x-kubernetes-list-type": "atomic"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "matchLabels": {
                                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "storageClassName": {
                                      "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                                      "type": "string"
                                    },
                                    "volumeAttributesClassName": {
                                      "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                                      "type": "string"
                                    },
                                    "volumeMode": {
                                      "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                                      "type": "string"
                                    },
                                    "volumeName": {
                                      "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "fc": {
                          "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                          "type": "object",
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": "string"
                            },
                            "lun": {
                              "description": "lun is Optional: FC target lun number",
                              "type": "integer",
                              "format": "int32"
                            },
                            "readOnly": {
                              "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean"
                            },
                            "targetWWNs": {
                              "description": "targetWWNs is Optional: FC target worldwide names (WWNs)",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "wwids": {
                              "description": "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "flexVolume": {
                          "description": "flexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.\nDeprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.",
                          "type": "object",
                          "required": [
                            "driver"
                          ],
                          "properties": {
                            "driver": {
                              "description": "driver is the name of the driver to use for this volume.",
                              "type": "string"
                            },
                            "fsType": {
                              "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                              "type": "string"
                            },
                            "options": {
                              "description": "options is Optional: this field holds extra command options if any.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "readOnly": {
                              "description": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean"
                            },
                            "secretRef": {
                              "description": "secretRef is Optional: secretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            }
                          }
                        },
                        "flocker": {
                          "description": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.\nDeprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.",
                          "type": "object",
                          "properties": {
                            "datasetName": {
                              "description": "datasetName is Name of the dataset stored as metadata -\u003e name on the dataset for Flocker\nshould be considered as deprecated",
                              "type": "string"
                            },
                            "datasetUUID": {
                              "description": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset",
                              "type": "string"
                            }
                          }
                        },
                        "gcePersistentDisk": {
                          "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nDeprecated: GCEPersistentDisk is deprecated. All operations for the in-tree\ngcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                          "type": "object",
                          "required": [
                            "pdName"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                              "type": "string"
                            },
                            "partition": {
                              "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                              "type": "integer",
                              "format": "int32"
                            },
                            "pdName": {
                              "description": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                              "type": "boolean"
                            }
                          }
                        },
                        "gitRepo": {
                          "description": "gitRepo represents a git repository at a particular revision.\nDeprecated: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container.",
                          "type": "object",
                          "required": [
                            "repository"
                          ],
                          "properties": {
                            "directory": {
                              "description": "directory is the target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name.",
                              "type": "string"
                            },
                            "repository": {
                              "description": "repository is the URL",
                              "type": "string"
                            },
                            "revision": {
                              "description": "revision is the commit hash for the specified revision.",
                              "type": "string"
                            }
                          }
                        },
                        "glusterfs": {
                          "description": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nDeprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md",
                          "type": "object",
                          "required": [
                            "endpoints",
                            "path"
                          ],
                          "properties": {
                            "endpoints": {
                              "description": "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                              "type": "string"
                            },
                            "path": {
                              "description": "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                              "type": "boolean"
                            }
                          }
                        },
                        "hostPath": {
                          "description": "hostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                          "type": "object",
                          "required": [
                            "path"
                          ],
                          "properties": {
                            "path": {
                              "description": "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                              "type": "string"
                            },
                            "type": {
                              "description": "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                              "type": "string"
                            }
                          }
                        },
                        "image": {
                          "description": "image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.\nThe volume is resolved at pod startup depending on which PullPolicy value is provided:\n\n- Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.\n- Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.\n- IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.\n\nThe volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.\nA failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.\nThe types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.\nThe OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.\nThe volume will be mounted read-only (ro) and non-executable files (noexec).\nSub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath).\nThe field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.",
                          "type": "object",
                          "properties": {
                            "pullPolicy": {
                              "description": "Policy for pulling OCI objects. Possible values are:\nAlways: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.\nNever: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.\nIfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.",
                              "type": "string"
                            },
                            "reference": {
                              "description": "Required: Image or artifact reference to be used.\nBehaves in the same way as pod.spec.containers[*].image.\nPull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.",
                              "type": "string"
                            }
                          }
                        },
                        "iscsi": {
                          "description": "iscsi represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md",
                          "type": "object",
                          "required": [
                            "iqn",
                            "lun",
                            "targetPortal"
                          ],
                          "properties": {
                            "chapAuthDiscovery": {
                              "description": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication",
                              "type": "boolean"
                            },
                            "chapAuthSession": {
                              "description": "chapAuthSession defines whether support iSCSI Session CHAP authentication",
                              "type": "boolean"
                            },
                            "fsType": {
                              "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                              "type": "string"
                            },
                            "initiatorName": {
                              "description": "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n\u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.",
                              "type": "string"
                            },
                            "iqn": {
                              "description": "iqn is the target iSCSI Qualified Name.",
                              "type": "string"
                            },
                            "iscsiInterface": {
                              "description": "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).",
                              "type": "string",
                              "default": "default"
                            },
                            "lun": {
                              "description": "lun represents iSCSI Target Lun number.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "portals": {
                              "description": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "readOnly": {
                              "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.",
                              "type": "boolean"
                            },
                            "secretRef": {
                              "description": "secretRef is the CHAP Secret for iSCSI target and initiator authentication",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "targetPortal": {
                              "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                              "type": "string"
                            }
                          }
                        },
                        "nfs": {
                          "description": "nfs represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                          "type": "object",
                          "required": [
                            "path",
                            "server"
                          ],
                          "properties": {
                            "path": {
                              "description": "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                              "type": "boolean"
                            },
                            "server": {
                              "description": "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                              "type": "string"
                            }
                          }
                        },
                        "persistentVolumeClaim": {
                          "description": "persistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                          "type": "object",
                          "required": [
                            "claimName"
                          ],
                          "properties": {
                            "claimName": {
                              "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                              "type": "boolean"
                            }
                          }
                        },
                        "photonPersistentDisk": {
                          "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.\nDeprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.",
                          "type": "object",
                          "required": [
                            "pdID"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": "string"
                            },
                            "pdID": {
                              "description": "pdID is the ID that identifies Photon Controller persistent disk",
                              "type": "string"
                            }
                          }
                        },
                        "portworxVolume": {
                          "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine.\nDeprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type\nare redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate\nis on.",
                          "type": "object",
                          "required": [
                            "volumeID"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean"
                            },
                            "volumeID": {
                              "description": "volumeID uniquely identifies a Portworx volume",
                              "type": "string"
                            }
                          }
                        },
                        "projected": {
                          "description": "projected items for all in one resources secrets, configmaps, and downward API",
                          "type": "object",
                          "properties": {
                            "defaultMode": {
                              "description": "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "sources": {
                              "description": "sources is the list of volume projections. Each entry in this list\nhandles one source.",
                              "type": "array",
                              "items": {
                                "description": "Projection that may be projected along with other supported volume types.\nExactly one of these fields must be set.",
                                "type": "object",
                                "properties": {
                                  "clusterTrustBundle": {
                                    "description": "ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field\nof ClusterTrustBundle objects in an auto-updating file.\n\nAlpha, gated by the ClusterTrustBundleProjection feature gate.\n\nClusterTrustBundle objects can either be selected by name, or by the\ncombination of signer name and a label selector.\n\nKubelet performs aggressive normalization of the PEM contents written\ninto the pod filesystem.  Esoteric PEM features such as inter-block\ncomments and block headers are stripped.  Certificates are deduplicated.\nThe ordering of certificates within the file is arbitrary, and Kubelet\nmay change the order over time.",
                                    "type": "object",
                                    "required": [
                                      "path"
                                    ],
                                    "properties": {
                                      "labelSelector": {
                                        "description": "Select all ClusterTrustBundles that match this label selector.  Only has\neffect if signerName is set.  Mutually-exclusive with name.  If unset,\ninterpreted as \"match nothing\".  If set but empty, interpreted as \"match\neverything\".",
                                        "type": "object",
                                        "properties": {
                                          "matchExpressions": {
                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                            "type": "array",
                                            "items": {
                                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "operator"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "key is the label key that the selector applies to.",
                                                  "type": "string"
                                                },
                                                "operator": {
                                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                  "type": "string"
                                                },
                                                "values": {
                                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                }
                                              }
                                            },
                                            "x-kubernetes-list-type": "atomic"
                                          },
                                          "matchLabels": {
                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                            "type": "object",
                                            "additionalProperties": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "name": {
                                        "description": "Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector.",
                                        "type": "string"
                                      },
                                      "optional": {
                                        "description": "If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles.",
                                        "type": "boolean"
                                      },
                                      "path": {
                                        "description": "Relative path from the volume root to write the bundle.",
                                        "type": "string"
                                      },
                                      "signerName": {
                                        "description": "Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "configMap": {
                                    "description": "configMap information about the configMap data to project",
                                    "type": "object",
                                    "properties": {
                                      "items": {
                                        "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                        "type": "array",
                                        "items": {
                                          "description": "Maps a string key to a path within a volume.",
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "path"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "key is the key to project.",
                                              "type": "string"
                                            },
                                            "mode": {
                                              "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "path": {
                                              "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "name": {
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string",
                                        "default": ""
                                      },
                                      "optional": {
                                        "description": "optional specify whether the ConfigMap or its keys must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "downwardAPI": {
                                    "description": "downwardAPI information about the downwardAPI data to project",
                                    "type": "object",
                                    "properties": {
                                      "items": {
                                        "description": "Items is a list of DownwardAPIVolume file",
                                        "type": "array",
                                        "items": {
                                          "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                          "type": "object",
                                          "required": [
                                            "path"
                                          ],
                                          "properties": {
                                            "fieldRef": {
                                              "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                              "type": "object",
                                              "required": [
                                                "fieldPath"
                                              ],
                                              "properties": {
                                                "apiVersion": {
                                                  "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                  "type": "string"
                                                },
                                                "fieldPath": {
                                                  "description": "Path of the field to select in the specified API version.",
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "mode": {
                                              "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "path": {
                                              "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                              "type": "string"
                                            },
                                            "resourceFieldRef": {
                                              "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                              "type": "object",
                                              "required": [
                                                "resource"
                                              ],
                                              "properties": {
                                                "containerName": {
                                                  "description": "Container name: required for volumes, optional for env vars",
                                                  "type": "string"
                                                },
                                                "divisor": {
                                                  "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                  "anyOf": [
                                                    {
                                                      "type": "integer"
                                                    },
                                                    {
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "x-kubernetes-int-or-string": true
                                                },
                                                "resource": {
                                                  "description": "Required: resource to select",
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    }
                                  },
                                  "secret": {
                                    "description": "secret information about the secret data to project",
                                    "type": "object",
                                    "properties": {
                                      "items": {
                                        "description": "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                        "type": "array",
                                        "items": {
                                          "description": "Maps a string key to a path within a volume.",
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "path"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "key is the key to project.",
                                              "type": "string"
                                            },
                                            "mode": {
                                              "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                              "type": "integer",
                                              "format": "int32"
                                            },
                                            "path": {
                                              "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "name": {
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string",
                                        "default": ""
                                      },
                                      "optional": {
                                        "description": "optional field specify whether the Secret or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "serviceAccountToken": {
                                    "description": "serviceAccountToken is information about the serviceAccountToken data to project",
                                    "type": "object",
                                    "required": [
                                      "path"
                                    ],
                                    "properties": {
                                      "audience": {
                                        "description": "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.",
                                        "type": "string"
                                      },
                                      "expirationSeconds": {
                                        "description": "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.",
                                        "type": "integer",
                                        "format": "int64"
                                      },
                                      "path": {
                                        "description": "path is the path relative to the mount point of the file to project the\ntoken into.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "quobyte": {
                          "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime.\nDeprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.",
                          "type": "object",
                          "required": [
                            "registry",
                            "volume"
                          ],
                          "properties": {
                            "group": {
                              "description": "group to map volume access to\nDefault is no group",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.",
                              "type": "boolean"
                            },
                            "registry": {
                              "description": "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes",
                              "type": "string"
                            },
                            "tenant": {
                              "description": "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin",
                              "type": "string"
                            },
                            "user": {
                              "description": "user to map volume access to\nDefaults to serivceaccount user",
                              "type": "string"
                            },
                            "volume": {
                              "description": "volume is a string that references an already created Quobyte volume by name.",
                              "type": "string"
                            }
                          }
                        },
                        "rbd": {
                          "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.\nDeprecated: RBD is deprecated and the in-tree rbd type is no longer supported.\nMore info: https://examples.k8s.io/volumes/rbd/README.md",
                          "type": "object",
                          "required": [
                            "image",
                            "monitors"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                              "type": "string"
                            },
                            "image": {
                              "description": "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "string"
                            },
                            "keyring": {
                              "description": "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "string",
                              "default": "/etc/ceph/keyring"
                            },
                            "monitors": {
                              "description": "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "pool": {
                              "description": "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "string",
                              "default": "rbd"
                            },
                            "readOnly": {
                              "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "boolean"
                            },
                            "secretRef": {
                              "description": "secretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "user": {
                              "description": "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                              "type": "string",
                              "default": "admin"
                            }
                          }
                        },
                        "scaleIO": {
                          "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.\nDeprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.",
                          "type": "object",
                          "required": [
                            "gateway",
                            "secretRef",
                            "system"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".",
                              "type": "string",
                              "default": "xfs"
                            },
                            "gateway": {
                              "description": "gateway is the host address of the ScaleIO API Gateway.",
                              "type": "string"
                            },
                            "protectionDomain": {
                              "description": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean"
                            },
                            "secretRef": {
                              "description": "secretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "sslEnabled": {
                              "description": "sslEnabled Flag enable/disable SSL communication with Gateway, default false",
                              "type": "boolean"
                            },
                            "storageMode": {
                              "description": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.",
                              "type": "string",
                              "default": "ThinProvisioned"
                            },
                            "storagePool": {
                              "description": "storagePool is the ScaleIO Storage Pool associated with the protection domain.",
                              "type": "string"
                            },
                            "system": {
                              "description": "system is the name of the storage system as configured in ScaleIO.",
                              "type": "string"
                            },
                            "volumeName": {
                              "description": "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source.",
                              "type": "string"
                            }
                          }
                        },
                        "secret": {
                          "description": "secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                          "type": "object",
                          "properties": {
                            "defaultMode": {
                              "description": "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "items": {
                              "description": "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                              "type": "array",
                              "items": {
                                "description": "Maps a string key to a path within a volume.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "path"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the key to project.",
                                    "type": "string"
                                  },
                                  "mode": {
                                    "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "path": {
                                    "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "optional": {
                              "description": "optional field specify whether the Secret or its keys must be defined",
                              "type": "boolean"
                            },
                            "secretName": {
                              "description": "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                              "type": "string"
                            }
                          }
                        },
                        "storageos": {
                          "description": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.\nDeprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.",
                          "type": "object",
                          "properties": {
                            "fsType": {
                              "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": "string"
                            },
                            "readOnly": {
                              "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                              "type": "boolean"
                            },
                            "secretRef": {
                              "description": "secretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "volumeName": {
                              "description": "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace.",
                              "type": "string"
                            },
                            "volumeNamespace": {
                              "description": "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.",
                              "type": "string"
                            }
                          }
                        },
                        "vsphereVolume": {
                          "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.\nDeprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type\nare redirected to the csi.vsphere.vmware.com CSI driver.",
                          "type": "object",
                          "required": [
                            "volumePath"
                          ],
                          "properties": {
                            "fsType": {
                              "description": "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                              "type": "string"
                            },
                            "storagePolicyID": {
                              "description": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
                              "type": "string"
                            },
                            "storagePolicyName": {
                              "description": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.",
                              "type": "string"
                            },
                            "volumePath": {
                              "description": "volumePath is the path that identifies vSphere volume vmdk",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "halted": {
                    "description": "Indicates that the vault server is halted and all offshoot Kubernetes resources except PVCs are deleted.",
                    "type": "boolean"
                  },
                  "healthChecker": {
                    "description": "HealthChecker defines attributes of the health checker",
                    "type": "object",
                    "default": {
                      "failureThreshold": 1,
                      "periodSeconds": 10,
                      "timeoutSeconds": 10
                    },
                    "properties": {
                      "disableWriteCheck": {
                        "description": "Whether to disable write check on database.\nDefaults to false.",
                        "type": "boolean"
                      },
                      "failureThreshold": {
                        "description": "Minimum consecutive failures for the health check to be considered failed after having succeeded.\nDefaults to 1. Minimum value is 1.",
                        "type": "integer",
                        "format": "int32",
                        "default": 1
                      },
                      "periodSeconds": {
                        "description": "How often (in seconds) to perform the health check.\nDefault to 10 seconds. Minimum value is 1.",
                        "type": "integer",
                        "format": "int32",
                        "default": 10
                      },
                      "timeoutSeconds": {
                        "description": "Number of seconds after which the probe times out.\nDefaults to 10 second. Minimum value is 1.\nIt should be less than the periodSeconds.",
                        "type": "integer",
                        "format": "int32",
                        "default": 10
                      }
                    }
                  },
                  "monitor": {
                    "description": "Monitor is used monitor database instance",
                    "type": "object",
                    "properties": {
                      "agent": {
                        "type": "string",
                        "enum": [
                          "prometheus.io/operator",
                          "prometheus.io",
                          "prometheus.io/builtin"
                        ]
                      },
                      "prometheus": {
                        "type": "object",
                        "properties": {
                          "exporter": {
                            "type": "object",
                            "properties": {
                              "args": {
                                "description": "Arguments to the entrypoint.\nThe docker image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax\ncan be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,\nregardless of whether the variable exists or not.\nCannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "env": {
                                "description": "List of environment variables to set in the container.\nCannot be updated.",
                                "type": "array",
                                "items": {
                                  "description": "EnvVar represents an environment variable present in a Container.",
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                      "type": "string"
                                    },
                                    "valueFrom": {
                                      "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                      "type": "object",
                                      "properties": {
                                        "configMapKeyRef": {
                                          "description": "Selects a key of a ConfigMap.",
                                          "type": "object",
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "The key to select.",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                              "type": "string",
                                              "default": ""
                                            },
                                            "optional": {
                                              "description": "Specify whether the ConfigMap or its key must be defined",
                                              "type": "boolean"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "fieldRef": {
                                          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                          "type": "object",
                                          "required": [
                                            "fieldPath"
                                          ],
                                          "properties": {
                                            "apiVersion": {
                                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                              "type": "string"
                                            },
                                            "fieldPath": {
                                              "description": "Path of the field to select in the specified API version.",
                                              "type": "string"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "resourceFieldRef": {
                                          "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                          "type": "object",
                                          "required": [
                                            "resource"
                                          ],
                                          "properties": {
                                            "containerName": {
                                              "description": "Container name: required for volumes, optional for env vars",
                                              "type": "string"
                                            },
                                            "divisor": {
                                              "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "resource": {
                                              "description": "Required: resource to select",
                                              "type": "string"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "secretKeyRef": {
                                          "description": "Selects a key of a secret in the pod's namespace",
                                          "type": "object",
                                          "required": [
                                            "key"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                              "type": "string",
                                              "default": ""
                                            },
                                            "optional": {
                                              "description": "Specify whether the Secret or its key must be defined",
                                              "type": "boolean"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "port": {
                                "description": "Port number for the exporter side car.",
                                "type": "integer",
                                "format": "int32",
                                "default": 56790
                              },
                              "resources": {
                                "description": "Compute Resources required by exporter container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/",
                                "type": "object",
                                "properties": {
                                  "claims": {
                                    "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                    "type": "array",
                                    "items": {
                                      "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                          "type": "string"
                                        },
                                        "request": {
                                          "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-map-keys": [
                                      "name"
                                    ],
                                    "x-kubernetes-list-type": "map"
                                  },
                                  "limits": {
                                    "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                    "type": "object",
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  },
                                  "requests": {
                                    "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                    "type": "object",
                                    "additionalProperties": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  }
                                }
                              },
                              "securityContext": {
                                "description": "Security options the pod should run with.\nMore info: https://kubernetes.io/docs/concepts/policy/security-context/\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                                "type": "object",
                                "properties": {
                                  "allowPrivilegeEscalation": {
                                    "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "boolean"
                                  },
                                  "appArmorProfile": {
                                    "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "localhostProfile": {
                                        "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "capabilities": {
                                    "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "object",
                                    "properties": {
                                      "add": {
                                        "description": "Added capabilities",
                                        "type": "array",
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "drop": {
                                        "description": "Removed capabilities",
                                        "type": "array",
                                        "items": {
                                          "description": "Capability represent POSIX capabilities type",
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    }
                                  },
                                  "privileged": {
                                    "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "boolean"
                                  },
                                  "procMount": {
                                    "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "string"
                                  },
                                  "readOnlyRootFilesystem": {
                                    "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "boolean"
                                  },
                                  "runAsGroup": {
                                    "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "runAsNonRoot": {
                                    "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                    "type": "boolean"
                                  },
                                  "runAsUser": {
                                    "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "seLinuxOptions": {
                                    "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "object",
                                    "properties": {
                                      "level": {
                                        "description": "Level is SELinux level label that applies to the container.",
                                        "type": "string"
                                      },
                                      "role": {
                                        "description": "Role is a SELinux role label that applies to the container.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "Type is a SELinux type label that applies to the container.",
                                        "type": "string"
                                      },
                                      "user": {
                                        "description": "User is a SELinux user label that applies to the container.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "seccompProfile": {
                                    "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "localhostProfile": {
                                        "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "windowsOptions": {
                                    "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                                    "type": "object",
                                    "properties": {
                                      "gmsaCredentialSpec": {
                                        "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                        "type": "string"
                                      },
                                      "gmsaCredentialSpecName": {
                                        "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                        "type": "string"
                                      },
                                      "hostProcess": {
                                        "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                        "type": "boolean"
                                      },
                                      "runAsUserName": {
                                        "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "serviceMonitor": {
                            "type": "object",
                            "properties": {
                              "interval": {
                                "description": "Interval at which metrics should be scraped",
                                "type": "string"
                              },
                              "labels": {
                                "description": "Labels are key value pairs that is used to select Prometheus instance via ServiceMonitor labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "podTemplate": {
                    "description": "PodTemplate is an optional configuration for pods used to run vault",
                    "type": "object",
                    "properties": {
                      "controller": {
                        "description": "Workload controller's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "spec": {
                        "description": "Specification of the desired behavior of the pod.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                        "type": "object",
                        "properties": {
                          "affinity": {
                            "description": "If specified, the pod's scheduling constraints",
                            "type": "object",
                            "properties": {
                              "nodeAffinity": {
                                "description": "Describes node affinity scheduling rules for the pod.",
                                "type": "object",
                                "properties": {
                                  "preferredDuringSchedulingIgnoredDuringExecution": {
                                    "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.",
                                    "type": "array",
                                    "items": {
                                      "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                                      "type": "object",
                                      "required": [
                                        "preference",
                                        "weight"
                                      ],
                                      "properties": {
                                        "preference": {
                                          "description": "A node selector term, associated with the corresponding weight.",
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "description": "A list of node selector requirements by node's labels.",
                                              "type": "array",
                                              "items": {
                                                "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "The label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "matchFields": {
                                              "description": "A list of node selector requirements by node's fields.",
                                              "type": "array",
                                              "items": {
                                                "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "The label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "weight": {
                                          "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.",
                                    "type": "object",
                                    "required": [
                                      "nodeSelectorTerms"
                                    ],
                                    "properties": {
                                      "nodeSelectorTerms": {
                                        "description": "Required. A list of node selector terms. The terms are ORed.",
                                        "type": "array",
                                        "items": {
                                          "description": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "description": "A list of node selector requirements by node's labels.",
                                              "type": "array",
                                              "items": {
                                                "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "The label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "matchFields": {
                                              "description": "A list of node selector requirements by node's fields.",
                                              "type": "array",
                                              "items": {
                                                "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "The label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                }
                              },
                              "podAffinity": {
                                "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
                                "type": "object",
                                "properties": {
                                  "preferredDuringSchedulingIgnoredDuringExecution": {
                                    "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                                    "type": "array",
                                    "items": {
                                      "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                      "type": "object",
                                      "required": [
                                        "podAffinityTerm",
                                        "weight"
                                      ],
                                      "properties": {
                                        "podAffinityTerm": {
                                          "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                          "type": "object",
                                          "required": [
                                            "topologyKey"
                                          ],
                                          "properties": {
                                            "labelSelector": {
                                              "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                              "type": "object",
                                              "properties": {
                                                "matchExpressions": {
                                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                  "type": "array",
                                                  "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                    "type": "object",
                                                    "required": [
                                                      "key",
                                                      "operator"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "description": "key is the label key that the selector applies to.",
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "x-kubernetes-list-type": "atomic"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "matchLabels": {
                                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "matchLabelKeys": {
                                              "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "mismatchLabelKeys": {
                                              "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "namespaceSelector": {
                                              "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                              "type": "object",
                                              "properties": {
                                                "matchExpressions": {
                                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                  "type": "array",
                                                  "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                    "type": "object",
                                                    "required": [
                                                      "key",
                                                      "operator"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "description": "key is the label key that the selector applies to.",
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "x-kubernetes-list-type": "atomic"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "matchLabels": {
                                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "namespaces": {
                                              "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "topologyKey": {
                                              "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "weight": {
                                          "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                    "type": "array",
                                    "items": {
                                      "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key \u003ctopologyKey\u003e matches that of any node on which\na pod of the set of pods is running",
                                      "type": "object",
                                      "required": [
                                        "topologyKey"
                                      ],
                                      "properties": {
                                        "labelSelector": {
                                          "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                              "type": "array",
                                              "items": {
                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "key is the label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "matchLabels": {
                                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "matchLabelKeys": {
                                          "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "mismatchLabelKeys": {
                                          "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "namespaceSelector": {
                                          "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                              "type": "array",
                                              "items": {
                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "key is the label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "matchLabels": {
                                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "namespaces": {
                                          "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "topologyKey": {
                                          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              },
                              "podAntiAffinity": {
                                "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
                                "type": "object",
                                "properties": {
                                  "preferredDuringSchedulingIgnoredDuringExecution": {
                                    "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                                    "type": "array",
                                    "items": {
                                      "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                                      "type": "object",
                                      "required": [
                                        "podAffinityTerm",
                                        "weight"
                                      ],
                                      "properties": {
                                        "podAffinityTerm": {
                                          "description": "Required. A pod affinity term, associated with the corresponding weight.",
                                          "type": "object",
                                          "required": [
                                            "topologyKey"
                                          ],
                                          "properties": {
                                            "labelSelector": {
                                              "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                              "type": "object",
                                              "properties": {
                                                "matchExpressions": {
                                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                  "type": "array",
                                                  "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                    "type": "object",
                                                    "required": [
                                                      "key",
                                                      "operator"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "description": "key is the label key that the selector applies to.",
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "x-kubernetes-list-type": "atomic"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "matchLabels": {
                                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "matchLabelKeys": {
                                              "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "mismatchLabelKeys": {
                                              "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "namespaceSelector": {
                                              "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                              "type": "object",
                                              "properties": {
                                                "matchExpressions": {
                                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                  "type": "array",
                                                  "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                    "type": "object",
                                                    "required": [
                                                      "key",
                                                      "operator"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "description": "key is the label key that the selector applies to.",
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "x-kubernetes-list-type": "atomic"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "matchLabels": {
                                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "namespaces": {
                                              "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "topologyKey": {
                                              "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "weight": {
                                          "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                                          "type": "integer",
                                          "format": "int32"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "description": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                                    "type": "array",
                                    "items": {
                                      "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key \u003ctopologyKey\u003e matches that of any node on which\na pod of the set of pods is running",
                                      "type": "object",
                                      "required": [
                                        "topologyKey"
                                      ],
                                      "properties": {
                                        "labelSelector": {
                                          "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                              "type": "array",
                                              "items": {
                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "key is the label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "matchLabels": {
                                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "matchLabelKeys": {
                                          "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "mismatchLabelKeys": {
                                          "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.\nThis is a beta field and requires enabling MatchLabelKeysInPodAffinity feature gate (enabled by default).",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "namespaceSelector": {
                                          "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                              "type": "array",
                                              "items": {
                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "key is the label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "matchLabels": {
                                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "namespaces": {
                                          "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "topologyKey": {
                                          "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              }
                            }
                          },
                          "args": {
                            "description": "Arguments to the entrypoint.\nThe docker image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax\ncan be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,\nregardless of whether the variable exists or not.\nCannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "containerSecurityContext": {
                            "description": "Security options the pod should run with.\nMore info: https://kubernetes.io/docs/concepts/policy/security-context/\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "boolean"
                              },
                              "appArmorProfile": {
                                "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "localhostProfile": {
                                    "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                    "type": "string"
                                  }
                                }
                              },
                              "capabilities": {
                                "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "description": "Added capabilities",
                                    "type": "array",
                                    "items": {
                                      "description": "Capability represent POSIX capabilities type",
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "drop": {
                                    "description": "Removed capabilities",
                                    "type": "array",
                                    "items": {
                                      "description": "Capability represent POSIX capabilities type",
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              },
                              "privileged": {
                                "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "boolean"
                              },
                              "procMount": {
                                "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "description": "Level is SELinux level label that applies to the container.",
                                    "type": "string"
                                  },
                                  "role": {
                                    "description": "Role is a SELinux role label that applies to the container.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type is a SELinux type label that applies to the container.",
                                    "type": "string"
                                  },
                                  "user": {
                                    "description": "User is a SELinux user label that applies to the container.",
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "localhostProfile": {
                                    "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                    "type": "string"
                                  }
                                }
                              },
                              "windowsOptions": {
                                "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "dnsConfig": {
                            "description": "Specifies the DNS parameters of a pod.\nParameters specified here will be merged to the generated DNS\nconfiguration based on DNSPolicy.",
                            "type": "object",
                            "properties": {
                              "nameservers": {
                                "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "options": {
                                "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
                                "type": "array",
                                "items": {
                                  "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name is this DNS resolver option's name.\nRequired.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value is this DNS resolver option's value.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "searches": {
                                "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            }
                          },
                          "dnsPolicy": {
                            "description": "Set DNS policy for the pod.\nDefaults to \"ClusterFirst\".\nValid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.\nDNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.\nTo have DNS options set along with hostNetwork, you have to specify DNS policy\nexplicitly to 'ClusterFirstWithHostNet'.",
                            "type": "string"
                          },
                          "enableServiceLinks": {
                            "description": "EnableServiceLinks indicates whether information about services should be injected into pod's\nenvironment variables, matching the syntax of Docker links.\nOptional: Defaults to true.",
                            "type": "boolean"
                          },
                          "env": {
                            "description": "List of environment variables to set in the container.\nCannot be updated.",
                            "type": "array",
                            "items": {
                              "description": "EnvVar represents an environment variable present in a Container.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "description": "Selects a key of a ConfigMap.",
                                      "type": "object",
                                      "required": [
                                        "key"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "The key to select.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        },
                                        "optional": {
                                          "description": "Specify whether the ConfigMap or its key must be defined",
                                          "type": "boolean"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "fieldRef": {
                                      "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                      "type": "object",
                                      "required": [
                                        "fieldPath"
                                      ],
                                      "properties": {
                                        "apiVersion": {
                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "description": "Path of the field to select in the specified API version.",
                                          "type": "string"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "resourceFieldRef": {
                                      "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                      "type": "object",
                                      "required": [
                                        "resource"
                                      ],
                                      "properties": {
                                        "containerName": {
                                          "description": "Container name: required for volumes, optional for env vars",
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "resource": {
                                          "description": "Required: resource to select",
                                          "type": "string"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "secretKeyRef": {
                                      "description": "Selects a key of a secret in the pod's namespace",
                                      "type": "object",
                                      "required": [
                                        "key"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        },
                                        "optional": {
                                          "description": "Specify whether the Secret or its key must be defined",
                                          "type": "boolean"
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "hostIPC": {
                            "description": "Use the host's ipc namespace.\nOptional: Default to false.",
                            "type": "boolean"
                          },
                          "hostNetwork": {
                            "description": "Host networking requested for this pod. Use the host's network namespace.\nIf this option is set, the ports that will be used must be specified.\nDefault to false.",
                            "type": "boolean"
                          },
                          "hostPID": {
                            "description": "Use the host's pid namespace.\nOptional: Default to false.",
                            "type": "boolean"
                          },
                          "imagePullSecrets": {
                            "description": "ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.\nIf specified, these secrets will be passed to individual puller implementations for them to use.\nMore info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod",
                            "type": "array",
                            "items": {
                              "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "initContainers": {
                            "description": "List of initialization containers belonging to the pod.\nInit containers are executed in order prior to containers being started. If any\ninit container fails, the pod is considered to have failed and is handled according\nto its restartPolicy. The name for an init container or normal container must be\nunique among all containers.\nInit containers may not have Lifecycle actions, Readiness probes, or Liveness probes.\nThe resourceRequirements of an init container are taken into account during scheduling\nby finding the highest request/limit for each resource type, and then using the max of\nof that value or the sum of the normal containers. Limits are applied to init containers\nin a similar fashion.\nInit containers cannot currently be added or removed.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/",
                            "type": "array",
                            "items": {
                              "description": "A single application container that you want to run within a pod.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "args": {
                                  "description": "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "command": {
                                  "description": "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "env": {
                                  "description": "List of environment variables to set in the container.\nCannot be updated.",
                                  "type": "array",
                                  "items": {
                                    "description": "EnvVar represents an environment variable present in a Container.",
                                    "type": "object",
                                    "required": [
                                      "name"
                                    ],
                                    "properties": {
                                      "name": {
                                        "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                        "type": "string"
                                      },
                                      "valueFrom": {
                                        "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                        "type": "object",
                                        "properties": {
                                          "configMapKeyRef": {
                                            "description": "Selects a key of a ConfigMap.",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key to select.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "fieldRef": {
                                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                            "type": "object",
                                            "required": [
                                              "fieldPath"
                                            ],
                                            "properties": {
                                              "apiVersion": {
                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                "type": "string"
                                              },
                                              "fieldPath": {
                                                "description": "Path of the field to select in the specified API version.",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "resourceFieldRef": {
                                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                            "type": "object",
                                            "required": [
                                              "resource"
                                            ],
                                            "properties": {
                                              "containerName": {
                                                "description": "Container name: required for volumes, optional for env vars",
                                                "type": "string"
                                              },
                                              "divisor": {
                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "anyOf": [
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "string"
                                                  }
                                                ],
                                                "x-kubernetes-int-or-string": true
                                              },
                                              "resource": {
                                                "description": "Required: resource to select",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "secretKeyRef": {
                                            "description": "Selects a key of a secret in the pod's namespace",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "Specify whether the Secret or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-map-keys": [
                                    "name"
                                  ],
                                  "x-kubernetes-list-type": "map"
                                },
                                "envFrom": {
                                  "description": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.",
                                  "type": "array",
                                  "items": {
                                    "description": "EnvFromSource represents the source of a set of ConfigMaps",
                                    "type": "object",
                                    "properties": {
                                      "configMapRef": {
                                        "description": "The ConfigMap to select from",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string",
                                            "default": ""
                                          },
                                          "optional": {
                                            "description": "Specify whether the ConfigMap must be defined",
                                            "type": "boolean"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "prefix": {
                                        "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                                        "type": "string"
                                      },
                                      "secretRef": {
                                        "description": "The Secret to select from",
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string",
                                            "default": ""
                                          },
                                          "optional": {
                                            "description": "Specify whether the Secret must be defined",
                                            "type": "boolean"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "image": {
                                  "description": "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.",
                                  "type": "string"
                                },
                                "imagePullPolicy": {
                                  "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                                  "type": "string"
                                },
                                "lifecycle": {
                                  "description": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.",
                                  "type": "object",
                                  "properties": {
                                    "postStart": {
                                      "description": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                      "type": "object",
                                      "properties": {
                                        "exec": {
                                          "description": "Exec specifies a command to execute in the container.",
                                          "type": "object",
                                          "properties": {
                                            "command": {
                                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          }
                                        },
                                        "httpGet": {
                                          "description": "HTTPGet specifies an HTTP GET request to perform.",
                                          "type": "object",
                                          "required": [
                                            "port"
                                          ],
                                          "properties": {
                                            "host": {
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                              "type": "string"
                                            },
                                            "httpHeaders": {
                                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                              "type": "array",
                                              "items": {
                                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                                "type": "object",
                                                "required": [
                                                  "name",
                                                  "value"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "description": "The header field value",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "path": {
                                              "description": "Path to access on the HTTP server.",
                                              "type": "string"
                                            },
                                            "port": {
                                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "scheme": {
                                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "sleep": {
                                          "description": "Sleep represents a duration that the container should sleep.",
                                          "type": "object",
                                          "required": [
                                            "seconds"
                                          ],
                                          "properties": {
                                            "seconds": {
                                              "description": "Seconds is the number of seconds to sleep.",
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          }
                                        },
                                        "tcpSocket": {
                                          "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                                          "type": "object",
                                          "required": [
                                            "port"
                                          ],
                                          "properties": {
                                            "host": {
                                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                              "type": "string"
                                            },
                                            "port": {
                                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "x-kubernetes-int-or-string": true
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "preStop": {
                                      "description": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                      "type": "object",
                                      "properties": {
                                        "exec": {
                                          "description": "Exec specifies a command to execute in the container.",
                                          "type": "object",
                                          "properties": {
                                            "command": {
                                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            }
                                          }
                                        },
                                        "httpGet": {
                                          "description": "HTTPGet specifies an HTTP GET request to perform.",
                                          "type": "object",
                                          "required": [
                                            "port"
                                          ],
                                          "properties": {
                                            "host": {
                                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                              "type": "string"
                                            },
                                            "httpHeaders": {
                                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                              "type": "array",
                                              "items": {
                                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                                "type": "object",
                                                "required": [
                                                  "name",
                                                  "value"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                                    "type": "string"
                                                  },
                                                  "value": {
                                                    "description": "The header field value",
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "path": {
                                              "description": "Path to access on the HTTP server.",
                                              "type": "string"
                                            },
                                            "port": {
                                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "x-kubernetes-int-or-string": true
                                            },
                                            "scheme": {
                                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "sleep": {
                                          "description": "Sleep represents a duration that the container should sleep.",
                                          "type": "object",
                                          "required": [
                                            "seconds"
                                          ],
                                          "properties": {
                                            "seconds": {
                                              "description": "Seconds is the number of seconds to sleep.",
                                              "type": "integer",
                                              "format": "int64"
                                            }
                                          }
                                        },
                                        "tcpSocket": {
                                          "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                                          "type": "object",
                                          "required": [
                                            "port"
                                          ],
                                          "properties": {
                                            "host": {
                                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                              "type": "string"
                                            },
                                            "port": {
                                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                              "anyOf": [
                                                {
                                                  "type": "integer"
                                                },
                                                {
                                                  "type": "string"
                                                }
                                              ],
                                              "x-kubernetes-int-or-string": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "livenessProbe": {
                                  "description": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                  "type": "object",
                                  "properties": {
                                    "exec": {
                                      "description": "Exec specifies a command to execute in the container.",
                                      "type": "object",
                                      "properties": {
                                        "command": {
                                          "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      }
                                    },
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "grpc": {
                                      "description": "GRPC specifies a GRPC HealthCheckRequest.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "port": {
                                          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "service": {
                                          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                          "type": "string",
                                          "default": ""
                                        }
                                      }
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies an HTTP GET request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies a connection to a TCP port.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                },
                                "name": {
                                  "description": "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated.",
                                  "type": "string"
                                },
                                "ports": {
                                  "description": "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated.",
                                  "type": "array",
                                  "items": {
                                    "description": "ContainerPort represents a network port in a single container.",
                                    "type": "object",
                                    "required": [
                                      "containerPort"
                                    ],
                                    "properties": {
                                      "containerPort": {
                                        "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 \u003c x \u003c 65536.",
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "hostIP": {
                                        "description": "What host IP to bind the external port to.",
                                        "type": "string"
                                      },
                                      "hostPort": {
                                        "description": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 \u003c x \u003c 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.",
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "name": {
                                        "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.",
                                        "type": "string"
                                      },
                                      "protocol": {
                                        "description": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".",
                                        "type": "string",
                                        "default": "TCP"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-map-keys": [
                                    "containerPort",
                                    "protocol"
                                  ],
                                  "x-kubernetes-list-type": "map"
                                },
                                "readinessProbe": {
                                  "description": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                  "type": "object",
                                  "properties": {
                                    "exec": {
                                      "description": "Exec specifies a command to execute in the container.",
                                      "type": "object",
                                      "properties": {
                                        "command": {
                                          "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      }
                                    },
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "grpc": {
                                      "description": "GRPC specifies a GRPC HealthCheckRequest.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "port": {
                                          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "service": {
                                          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                          "type": "string",
                                          "default": ""
                                        }
                                      }
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies an HTTP GET request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies a connection to a TCP port.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                },
                                "resizePolicy": {
                                  "description": "Resources resize policy for the container.",
                                  "type": "array",
                                  "items": {
                                    "description": "ContainerResizePolicy represents resource resize policy for the container.",
                                    "type": "object",
                                    "required": [
                                      "resourceName",
                                      "restartPolicy"
                                    ],
                                    "properties": {
                                      "resourceName": {
                                        "description": "Name of the resource to which this resource resize policy applies.\nSupported values: cpu, memory.",
                                        "type": "string"
                                      },
                                      "restartPolicy": {
                                        "description": "Restart policy to apply when specified resource is resized.\nIf not specified, it defaults to NotRequired.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "resources": {
                                  "description": "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                  "type": "object",
                                  "properties": {
                                    "claims": {
                                      "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                      "type": "array",
                                      "items": {
                                        "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                        "type": "object",
                                        "required": [
                                          "name"
                                        ],
                                        "properties": {
                                          "name": {
                                            "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                            "type": "string"
                                          },
                                          "request": {
                                            "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-kubernetes-list-map-keys": [
                                        "name"
                                      ],
                                      "x-kubernetes-list-type": "map"
                                    },
                                    "limits": {
                                      "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                      "type": "object",
                                      "additionalProperties": {
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "requests": {
                                      "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                      "type": "object",
                                      "additionalProperties": {
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    }
                                  }
                                },
                                "restartPolicy": {
                                  "description": "RestartPolicy defines the restart behavior of individual containers in a pod.\nThis field may only be set for init containers, and the only allowed value is \"Always\".\nFor non-init containers or when this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nSetting the RestartPolicy as \"Always\" for the init container will have the following effect:\nthis init container will be continually restarted on\nexit until all regular containers have terminated. Once all regular\ncontainers have completed, all init containers with restartPolicy \"Always\"\nwill be shut down. This lifecycle differs from normal init containers and\nis often referred to as a \"sidecar\" container. Although this init\ncontainer still starts in the init container sequence, it does not wait\nfor the container to complete before proceeding to the next init\ncontainer. Instead, the next init container starts immediately after this\ninit container is started, or after any startupProbe has successfully\ncompleted.",
                                  "type": "string"
                                },
                                "securityContext": {
                                  "description": "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                                  "type": "object",
                                  "properties": {
                                    "allowPrivilegeEscalation": {
                                      "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "boolean"
                                    },
                                    "appArmorProfile": {
                                      "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "localhostProfile": {
                                          "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "capabilities": {
                                      "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "object",
                                      "properties": {
                                        "add": {
                                          "description": "Added capabilities",
                                          "type": "array",
                                          "items": {
                                            "description": "Capability represent POSIX capabilities type",
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "drop": {
                                          "description": "Removed capabilities",
                                          "type": "array",
                                          "items": {
                                            "description": "Capability represent POSIX capabilities type",
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      }
                                    },
                                    "privileged": {
                                      "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "boolean"
                                    },
                                    "procMount": {
                                      "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "string"
                                    },
                                    "readOnlyRootFilesystem": {
                                      "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "boolean"
                                    },
                                    "runAsGroup": {
                                      "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "runAsNonRoot": {
                                      "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                      "type": "boolean"
                                    },
                                    "runAsUser": {
                                      "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "seLinuxOptions": {
                                      "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "object",
                                      "properties": {
                                        "level": {
                                          "description": "Level is SELinux level label that applies to the container.",
                                          "type": "string"
                                        },
                                        "role": {
                                          "description": "Role is a SELinux role label that applies to the container.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "Type is a SELinux type label that applies to the container.",
                                          "type": "string"
                                        },
                                        "user": {
                                          "description": "User is a SELinux user label that applies to the container.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "seccompProfile": {
                                      "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "localhostProfile": {
                                          "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "windowsOptions": {
                                      "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                                      "type": "object",
                                      "properties": {
                                        "gmsaCredentialSpec": {
                                          "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                          "type": "string"
                                        },
                                        "gmsaCredentialSpecName": {
                                          "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                          "type": "string"
                                        },
                                        "hostProcess": {
                                          "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                          "type": "boolean"
                                        },
                                        "runAsUserName": {
                                          "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "startupProbe": {
                                  "description": "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                  "type": "object",
                                  "properties": {
                                    "exec": {
                                      "description": "Exec specifies a command to execute in the container.",
                                      "type": "object",
                                      "properties": {
                                        "command": {
                                          "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      }
                                    },
                                    "failureThreshold": {
                                      "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "grpc": {
                                      "description": "GRPC specifies a GRPC HealthCheckRequest.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "port": {
                                          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                          "type": "integer",
                                          "format": "int32"
                                        },
                                        "service": {
                                          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                          "type": "string",
                                          "default": ""
                                        }
                                      }
                                    },
                                    "httpGet": {
                                      "description": "HTTPGet specifies an HTTP GET request to perform.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                          "type": "string"
                                        },
                                        "httpHeaders": {
                                          "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                          "type": "array",
                                          "items": {
                                            "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                            "type": "object",
                                            "required": [
                                              "name",
                                              "value"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "path": {
                                          "description": "Path to access on the HTTP server.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "scheme": {
                                          "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "initialDelaySeconds": {
                                      "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "periodSeconds": {
                                      "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "successThreshold": {
                                      "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "tcpSocket": {
                                      "description": "TCPSocket specifies a connection to a TCP port.",
                                      "type": "object",
                                      "required": [
                                        "port"
                                      ],
                                      "properties": {
                                        "host": {
                                          "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                          "type": "string"
                                        },
                                        "port": {
                                          "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        }
                                      }
                                    },
                                    "terminationGracePeriodSeconds": {
                                      "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "timeoutSeconds": {
                                      "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                },
                                "stdin": {
                                  "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.",
                                  "type": "boolean"
                                },
                                "stdinOnce": {
                                  "description": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false",
                                  "type": "boolean"
                                },
                                "terminationMessagePath": {
                                  "description": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.",
                                  "type": "string"
                                },
                                "terminationMessagePolicy": {
                                  "description": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.",
                                  "type": "string"
                                },
                                "tty": {
                                  "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.",
                                  "type": "boolean"
                                },
                                "volumeDevices": {
                                  "description": "volumeDevices is the list of block devices to be used by the container.",
                                  "type": "array",
                                  "items": {
                                    "description": "volumeDevice describes a mapping of a raw block device within a container.",
                                    "type": "object",
                                    "required": [
                                      "devicePath",
                                      "name"
                                    ],
                                    "properties": {
                                      "devicePath": {
                                        "description": "devicePath is the path inside of the container that the device will be mapped to.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "name must match the name of a persistentVolumeClaim in the pod",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-map-keys": [
                                    "devicePath"
                                  ],
                                  "x-kubernetes-list-type": "map"
                                },
                                "volumeMounts": {
                                  "description": "Pod volumes to mount into the container's filesystem.\nCannot be updated.",
                                  "type": "array",
                                  "items": {
                                    "description": "VolumeMount describes a mounting of a Volume within a container.",
                                    "type": "object",
                                    "required": [
                                      "mountPath",
                                      "name"
                                    ],
                                    "properties": {
                                      "mountPath": {
                                        "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                                        "type": "string"
                                      },
                                      "mountPropagation": {
                                        "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "This must match the Name of a Volume.",
                                        "type": "string"
                                      },
                                      "readOnly": {
                                        "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                                        "type": "boolean"
                                      },
                                      "recursiveReadOnly": {
                                        "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                                        "type": "string"
                                      },
                                      "subPath": {
                                        "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                                        "type": "string"
                                      },
                                      "subPathExpr": {
                                        "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-list-map-keys": [
                                    "mountPath"
                                  ],
                                  "x-kubernetes-list-type": "map"
                                },
                                "workingDir": {
                                  "description": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "lifecycle": {
                            "description": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.",
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "description": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "description": "Exec specifies a command to execute in the container.",
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "description": "HTTPGet specifies an HTTP GET request to perform.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                        "type": "array",
                                        "items": {
                                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "value"
                                          ],
                                          "properties": {
                                            "name": {
                                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The header field value",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "path": {
                                        "description": "Path to access on the HTTP server.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "sleep": {
                                    "description": "Sleep represents a duration that the container should sleep.",
                                    "type": "object",
                                    "required": [
                                      "seconds"
                                    ],
                                    "properties": {
                                      "seconds": {
                                        "description": "Seconds is the number of seconds to sleep.",
                                        "type": "integer",
                                        "format": "int64"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    }
                                  }
                                }
                              },
                              "preStop": {
                                "description": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "description": "Exec specifies a command to execute in the container.",
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    }
                                  },
                                  "httpGet": {
                                    "description": "HTTPGet specifies an HTTP GET request to perform.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                        "type": "array",
                                        "items": {
                                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "value"
                                          ],
                                          "properties": {
                                            "name": {
                                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The header field value",
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "path": {
                                        "description": "Path to access on the HTTP server.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "sleep": {
                                    "description": "Sleep represents a duration that the container should sleep.",
                                    "type": "object",
                                    "required": [
                                      "seconds"
                                    ],
                                    "properties": {
                                      "seconds": {
                                        "description": "Seconds is the number of seconds to sleep.",
                                        "type": "integer",
                                        "format": "int64"
                                      }
                                    }
                                  },
                                  "tcpSocket": {
                                    "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "livenessProbe": {
                            "description": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nControllers may set default LivenessProbe if no liveness probe is provided.\nTo ignore defaulting, set the value to empty LivenessProbe \"{}\".\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": "object",
                            "properties": {
                              "exec": {
                                "description": "Exec specifies a command to execute in the container.",
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              },
                              "failureThreshold": {
                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "grpc": {
                                "description": "GRPC specifies a GRPC HealthCheckRequest.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "port": {
                                    "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                    "type": "string",
                                    "default": ""
                                  }
                                }
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies an HTTP GET request to perform.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": "array",
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                    "type": "string"
                                  }
                                }
                              },
                              "initialDelaySeconds": {
                                "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies a connection to a TCP port.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  }
                                }
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "nodeSelector": {
                            "description": "NodeSelector is a selector which must be true for the pod to fit on a node.\nSelector which must match a node's labels for the pod to be scheduled on that node.\nMore info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "podPlacementPolicy": {
                            "description": "PodPlacementPolicy is the reference of the podPlacementPolicy",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "priority": {
                            "description": "The priority value. Various system components use this field to find the\npriority of the pod. When Priority Admission Controller is enabled, it\nprevents users from setting this field. The admission controller populates\nthis field from PriorityClassName.\nThe higher the value, the higher the priority.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "priorityClassName": {
                            "description": "If specified, indicates the pod's priority. \"system-node-critical\" and\n\"system-cluster-critical\" are two special keywords which indicate the\nhighest priorities with the former being the highest priority. Any other\nname must be defined by creating a PriorityClass object with that name.\nIf not specified, the pod priority will be default or zero if there is no\ndefault.",
                            "type": "string"
                          },
                          "readinessProbe": {
                            "description": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nControllers may set default ReadinessProbe if no readyness probe is provided.\nTo ignore defaulting, set the value to empty ReadynessProbe \"{}\".\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": "object",
                            "properties": {
                              "exec": {
                                "description": "Exec specifies a command to execute in the container.",
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              },
                              "failureThreshold": {
                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "grpc": {
                                "description": "GRPC specifies a GRPC HealthCheckRequest.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "port": {
                                    "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                    "type": "string",
                                    "default": ""
                                  }
                                }
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies an HTTP GET request to perform.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": "array",
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                    "type": "string"
                                  }
                                }
                              },
                              "initialDelaySeconds": {
                                "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies a connection to a TCP port.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  }
                                }
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "resources": {
                            "description": "Compute Resources required by the sidecar container.",
                            "type": "object",
                            "properties": {
                              "claims": {
                                "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                "type": "array",
                                "items": {
                                  "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                      "type": "string"
                                    },
                                    "request": {
                                      "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-kubernetes-list-map-keys": [
                                  "name"
                                ],
                                "x-kubernetes-list-type": "map"
                              },
                              "limits": {
                                "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              },
                              "requests": {
                                "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            }
                          },
                          "runtimeClassName": {
                            "description": "RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used\nto run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.\nIf unset or empty, the \"legacy\" RuntimeClass will be used, which is an implicit class with an\nempty definition that uses the default runtime handler.\nMore info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class",
                            "type": "string"
                          },
                          "schedulerName": {
                            "description": "If specified, the pod will be dispatched by specified scheduler.\nIf not specified, the pod will be dispatched by default scheduler.",
                            "type": "string"
                          },
                          "securityContext": {
                            "description": "SecurityContext holds pod-level security attributes and common container settings.\nOptional: Defaults to empty.  See type description for default values of each field.",
                            "type": "object",
                            "properties": {
                              "appArmorProfile": {
                                "description": "appArmorProfile is the AppArmor options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "localhostProfile": {
                                    "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                    "type": "string"
                                  }
                                }
                              },
                              "fsGroup": {
                                "description": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:\n\n1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "fsGroupChangePolicy": {
                                "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "string"
                              },
                              "runAsGroup": {
                                "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxChangePolicy": {
                                "description": "seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.\nIt has no effect on nodes that do not support SELinux or to volumes does not support SELinux.\nValid values are \"MountOption\" and \"Recursive\".\n\n\"Recursive\" means relabeling of all files on all Pod volumes by the container runtime.\nThis may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.\n\n\"MountOption\" mounts all eligible Pod volumes with `-o context` mount option.\nThis requires all Pods that share the same volume to use the same SELinux label.\nIt is not possible to share the same volume among privileged and unprivileged Pods.\nEligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes\nwhose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their\nCSIDriver instance. Other volumes are always re-labelled recursively.\n\"MountOption\" value is allowed only when SELinuxMount feature gate is enabled.\n\nIf not specified and SELinuxMount feature gate is enabled, \"MountOption\" is used.\nIf not specified and SELinuxMount feature gate is disabled, \"MountOption\" is used for ReadWriteOncePod volumes\nand \"Recursive\" for all other volumes.\n\nThis field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.\n\nAll Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "string"
                              },
                              "seLinuxOptions": {
                                "description": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "description": "Level is SELinux level label that applies to the container.",
                                    "type": "string"
                                  },
                                  "role": {
                                    "description": "Role is a SELinux role label that applies to the container.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type is a SELinux type label that applies to the container.",
                                    "type": "string"
                                  },
                                  "user": {
                                    "description": "User is a SELinux user label that applies to the container.",
                                    "type": "string"
                                  }
                                }
                              },
                              "seccompProfile": {
                                "description": "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "localhostProfile": {
                                    "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                    "type": "string"
                                  }
                                }
                              },
                              "supplementalGroups": {
                                "description": "A list of groups applied to the first process run in each container, in\naddition to the container's primary GID and fsGroup (if specified).  If\nthe SupplementalGroupsPolicy feature is enabled, the\nsupplementalGroupsPolicy field determines whether these are in addition\nto or instead of any group memberships defined in the container image.\nIf unspecified, no additional groups are added, though group memberships\ndefined in the container image may still be used, depending on the\nsupplementalGroupsPolicy field.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "supplementalGroupsPolicy": {
                                "description": "Defines how supplemental groups of the first container processes are calculated.\nValid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used.\n(Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled\nand the container runtime must implement support for this feature.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "string"
                              },
                              "sysctls": {
                                "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "array",
                                "items": {
                                  "description": "Sysctl defines a kernel parameter to be set",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name of a property to set",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value of a property to set",
                                      "type": "string"
                                    }
                                  }
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "windowsOptions": {
                                "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "serviceAccountName": {
                            "description": "ServiceAccountName is the name of the ServiceAccount to use to run this pod.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/",
                            "type": "string"
                          },
                          "shareProcessNamespace": {
                            "description": "Share a single process namespace between all of the containers in a pod.\nWhen this is set containers will be able to view and signal processes from other containers\nin the same pod, and the first process in each container will not be assigned PID 1.\nHostPID and ShareProcessNamespace cannot both be set.\nOptional: Default to false.",
                            "type": "boolean"
                          },
                          "terminationGracePeriodSeconds": {
                            "description": "Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nIf this value is nil, the default grace period will be used instead.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nDefaults to 30 seconds.",
                            "type": "integer",
                            "format": "int64"
                          },
                          "tolerations": {
                            "description": "If specified, the pod's tolerations.",
                            "type": "array",
                            "items": {
                              "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
                              "type": "object",
                              "properties": {
                                "effect": {
                                  "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                  "type": "string"
                                },
                                "key": {
                                  "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                                  "type": "string"
                                },
                                "tolerationSeconds": {
                                  "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "value": {
                                  "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "topologySpreadConstraints": {
                            "description": "TopologySpreadConstraints describes how a group of pods ought to spread across topology\ndomains. Scheduler will schedule pods in a way which abides by the constraints.\nAll topologySpreadConstraints are ANDed.",
                            "type": "array",
                            "items": {
                              "description": "TopologySpreadConstraint specifies how to spread matching pods among the given topology.",
                              "type": "object",
                              "required": [
                                "maxSkew",
                                "topologyKey",
                                "whenUnsatisfiable"
                              ],
                              "properties": {
                                "labelSelector": {
                                  "description": "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain.",
                                  "type": "object",
                                  "properties": {
                                    "matchExpressions": {
                                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                      "type": "array",
                                      "items": {
                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "key is the label key that the selector applies to.",
                                            "type": "string"
                                          },
                                          "operator": {
                                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                            "type": "string"
                                          },
                                          "values": {
                                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            },
                                            "x-kubernetes-list-type": "atomic"
                                          }
                                        }
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "matchLabels": {
                                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "matchLabelKeys": {
                                  "description": "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "maxSkew": {
                                  "description": "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "minDomains": {
                                  "description": "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "nodeAffinityPolicy": {
                                  "description": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
                                  "type": "string"
                                },
                                "nodeTaintsPolicy": {
                                  "description": "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.\nThis is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.",
                                  "type": "string"
                                },
                                "topologyKey": {
                                  "description": "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each \u003ckey, value\u003e as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field.",
                                  "type": "string"
                                },
                                "whenUnsatisfiable": {
                                  "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-list-map-keys": [
                              "topologyKey",
                              "whenUnsatisfiable"
                            ],
                            "x-kubernetes-list-type": "map"
                          },
                          "volumeMounts": {
                            "description": "Pod volumes to mount into the container's filesystem.\nCannot be updated.",
                            "type": "array",
                            "items": {
                              "description": "VolumeMount describes a mounting of a Volume within a container.",
                              "type": "object",
                              "required": [
                                "mountPath",
                                "name"
                              ],
                              "properties": {
                                "mountPath": {
                                  "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "This must match the Name of a Volume.",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                                  "type": "boolean"
                                },
                                "recursiveReadOnly": {
                                  "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                                  "type": "string"
                                },
                                "subPath": {
                                  "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "volumes": {
                            "description": "List of volumes that can be mounted by containers belonging to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes",
                            "type": "array",
                            "items": {
                              "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "awsElasticBlockStore": {
                                  "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                  "type": "object",
                                  "required": [
                                    "volumeID"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                      "type": "string"
                                    },
                                    "partition": {
                                      "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "readOnly": {
                                      "description": "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                      "type": "boolean"
                                    },
                                    "volumeID": {
                                      "description": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                      "type": "string"
                                    }
                                  }
                                },
                                "azureDisk": {
                                  "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.",
                                  "type": "object",
                                  "required": [
                                    "diskName",
                                    "diskURI"
                                  ],
                                  "properties": {
                                    "cachingMode": {
                                      "description": "cachingMode is the Host Caching mode: None, Read Only, Read Write.",
                                      "type": "string"
                                    },
                                    "diskName": {
                                      "description": "diskName is the Name of the data disk in the blob storage",
                                      "type": "string"
                                    },
                                    "diskURI": {
                                      "description": "diskURI is the URI of data disk in the blob storage",
                                      "type": "string"
                                    },
                                    "fsType": {
                                      "description": "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                      "type": "string",
                                      "default": "ext4"
                                    },
                                    "kind": {
                                      "description": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean",
                                      "default": false
                                    }
                                  }
                                },
                                "azureFile": {
                                  "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod.",
                                  "type": "object",
                                  "required": [
                                    "secretName",
                                    "shareName"
                                  ],
                                  "properties": {
                                    "readOnly": {
                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean"
                                    },
                                    "secretName": {
                                      "description": "secretName is the  name of secret that contains Azure Storage Account Name and Key",
                                      "type": "string"
                                    },
                                    "shareName": {
                                      "description": "shareName is the azure share Name",
                                      "type": "string"
                                    }
                                  }
                                },
                                "cephfs": {
                                  "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime",
                                  "type": "object",
                                  "required": [
                                    "monitors"
                                  ],
                                  "properties": {
                                    "monitors": {
                                      "description": "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "path": {
                                      "description": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                      "type": "boolean"
                                    },
                                    "secretFile": {
                                      "description": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                      "type": "string"
                                    },
                                    "secretRef": {
                                      "description": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "user": {
                                      "description": "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                      "type": "string"
                                    }
                                  }
                                },
                                "cinder": {
                                  "description": "cinder represents a cinder volume attached and mounted on kubelets host machine.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                  "type": "object",
                                  "required": [
                                    "volumeID"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                      "type": "boolean"
                                    },
                                    "secretRef": {
                                      "description": "secretRef is optional: points to a secret object containing parameters used to connect\nto OpenStack.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "volumeID": {
                                      "description": "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                      "type": "string"
                                    }
                                  }
                                },
                                "configMap": {
                                  "description": "configMap represents a configMap that should populate this volume",
                                  "type": "object",
                                  "properties": {
                                    "defaultMode": {
                                      "description": "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "items": {
                                      "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                      "type": "array",
                                      "items": {
                                        "description": "Maps a string key to a path within a volume.",
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "path"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "key is the key to project.",
                                            "type": "string"
                                          },
                                          "mode": {
                                            "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "path": {
                                            "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "optional specify whether the ConfigMap or its keys must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "csi": {
                                  "description": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).",
                                  "type": "object",
                                  "required": [
                                    "driver"
                                  ],
                                  "properties": {
                                    "driver": {
                                      "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.",
                                      "type": "string"
                                    },
                                    "fsType": {
                                      "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.",
                                      "type": "string"
                                    },
                                    "nodePublishSecretRef": {
                                      "description": "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "readOnly": {
                                      "description": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).",
                                      "type": "boolean"
                                    },
                                    "volumeAttributes": {
                                      "description": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "downwardAPI": {
                                  "description": "downwardAPI represents downward API about the pod that should populate this volume",
                                  "type": "object",
                                  "properties": {
                                    "defaultMode": {
                                      "description": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "items": {
                                      "description": "Items is a list of downward API volume file",
                                      "type": "array",
                                      "items": {
                                        "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                        "type": "object",
                                        "required": [
                                          "path"
                                        ],
                                        "properties": {
                                          "fieldRef": {
                                            "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                            "type": "object",
                                            "required": [
                                              "fieldPath"
                                            ],
                                            "properties": {
                                              "apiVersion": {
                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                "type": "string"
                                              },
                                              "fieldPath": {
                                                "description": "Path of the field to select in the specified API version.",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "mode": {
                                            "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "path": {
                                            "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                            "type": "string"
                                          },
                                          "resourceFieldRef": {
                                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                            "type": "object",
                                            "required": [
                                              "resource"
                                            ],
                                            "properties": {
                                              "containerName": {
                                                "description": "Container name: required for volumes, optional for env vars",
                                                "type": "string"
                                              },
                                              "divisor": {
                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "anyOf": [
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "string"
                                                  }
                                                ],
                                                "x-kubernetes-int-or-string": true
                                              },
                                              "resource": {
                                                "description": "Required: resource to select",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          }
                                        }
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  }
                                },
                                "emptyDir": {
                                  "description": "emptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                  "type": "object",
                                  "properties": {
                                    "medium": {
                                      "description": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                      "type": "string"
                                    },
                                    "sizeLimit": {
                                      "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    }
                                  }
                                },
                                "ephemeral": {
                                  "description": "ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time.",
                                  "type": "object",
                                  "properties": {
                                    "volumeClaimTemplate": {
                                      "description": "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `\u003cpod name\u003e-\u003cvolume name\u003e` where\n`\u003cvolume name\u003e` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\nRequired, must not be nil.",
                                      "type": "object",
                                      "required": [
                                        "spec"
                                      ],
                                      "properties": {
                                        "metadata": {
                                          "description": "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation.",
                                          "type": "object",
                                          "properties": {
                                            "annotations": {
                                              "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "generateName": {
                                              "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will\nNOT return a 409 - instead, it will either return 201 Created or 500 with Reason\nServerTimeout indicating a unique name could not be found in the time allotted, and the client\nshould retry (optionally after the time indicated in the Retry-After header).\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency",
                                              "type": "string"
                                            },
                                            "labels": {
                                              "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            },
                                            "name": {
                                              "description": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/identifiers#names",
                                              "type": "string"
                                            },
                                            "namespace": {
                                              "description": "Namespace defines the space within each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: http://kubernetes.io/docs/user-guide/namespaces",
                                              "type": "string"
                                            },
                                            "ownerReferences": {
                                              "description": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.",
                                              "type": "array",
                                              "items": {
                                                "description": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.",
                                                "type": "object",
                                                "required": [
                                                  "apiVersion",
                                                  "kind",
                                                  "name",
                                                  "uid"
                                                ],
                                                "properties": {
                                                  "apiVersion": {
                                                    "description": "API version of the referent.",
                                                    "type": "string"
                                                  },
                                                  "blockOwnerDeletion": {
                                                    "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.",
                                                    "type": "boolean"
                                                  },
                                                  "controller": {
                                                    "description": "If true, this reference points to the managing controller.",
                                                    "type": "boolean"
                                                  },
                                                  "kind": {
                                                    "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                  },
                                                  "name": {
                                                    "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names",
                                                    "type": "string"
                                                  },
                                                  "uid": {
                                                    "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids",
                                                    "type": "string"
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              }
                                            }
                                          }
                                        },
                                        "spec": {
                                          "description": "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here.",
                                          "type": "object",
                                          "properties": {
                                            "accessModes": {
                                              "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "dataSource": {
                                              "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                                              "type": "object",
                                              "required": [
                                                "kind",
                                                "name"
                                              ],
                                              "properties": {
                                                "apiGroup": {
                                                  "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                                  "type": "string"
                                                },
                                                "kind": {
                                                  "description": "Kind is the type of resource being referenced",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "description": "Name is the name of resource being referenced",
                                                  "type": "string"
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "dataSourceRef": {
                                              "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                              "type": "object",
                                              "required": [
                                                "kind",
                                                "name"
                                              ],
                                              "properties": {
                                                "apiGroup": {
                                                  "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                                  "type": "string"
                                                },
                                                "kind": {
                                                  "description": "Kind is the type of resource being referenced",
                                                  "type": "string"
                                                },
                                                "name": {
                                                  "description": "Name is the name of resource being referenced",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "resources": {
                                              "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                              "type": "object",
                                              "properties": {
                                                "limits": {
                                                  "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                    "anyOf": [
                                                      {
                                                        "type": "integer"
                                                      },
                                                      {
                                                        "type": "string"
                                                      }
                                                    ],
                                                    "x-kubernetes-int-or-string": true
                                                  }
                                                },
                                                "requests": {
                                                  "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                    "anyOf": [
                                                      {
                                                        "type": "integer"
                                                      },
                                                      {
                                                        "type": "string"
                                                      }
                                                    ],
                                                    "x-kubernetes-int-or-string": true
                                                  }
                                                }
                                              }
                                            },
                                            "selector": {
                                              "description": "selector is a label query over volumes to consider for binding.",
                                              "type": "object",
                                              "properties": {
                                                "matchExpressions": {
                                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                  "type": "array",
                                                  "items": {
                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                    "type": "object",
                                                    "required": [
                                                      "key",
                                                      "operator"
                                                    ],
                                                    "properties": {
                                                      "key": {
                                                        "description": "key is the label key that the selector applies to.",
                                                        "type": "string"
                                                      },
                                                      "operator": {
                                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                        "type": "string"
                                                      },
                                                      "values": {
                                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                        "type": "array",
                                                        "items": {
                                                          "type": "string"
                                                        },
                                                        "x-kubernetes-list-type": "atomic"
                                                      }
                                                    }
                                                  },
                                                  "x-kubernetes-list-type": "atomic"
                                                },
                                                "matchLabels": {
                                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                  "type": "object",
                                                  "additionalProperties": {
                                                    "type": "string"
                                                  }
                                                }
                                              },
                                              "x-kubernetes-map-type": "atomic"
                                            },
                                            "storageClassName": {
                                              "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                                              "type": "string"
                                            },
                                            "volumeAttributesClassName": {
                                              "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                                              "type": "string"
                                            },
                                            "volumeMode": {
                                              "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                                              "type": "string"
                                            },
                                            "volumeName": {
                                              "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                                              "type": "string"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "fc": {
                                  "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                                  "type": "object",
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                      "type": "string"
                                    },
                                    "lun": {
                                      "description": "lun is Optional: FC target lun number",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "readOnly": {
                                      "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean"
                                    },
                                    "targetWWNs": {
                                      "description": "targetWWNs is Optional: FC target worldwide names (WWNs)",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "wwids": {
                                      "description": "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  }
                                },
                                "flexVolume": {
                                  "description": "flexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.",
                                  "type": "object",
                                  "required": [
                                    "driver"
                                  ],
                                  "properties": {
                                    "driver": {
                                      "description": "driver is the name of the driver to use for this volume.",
                                      "type": "string"
                                    },
                                    "fsType": {
                                      "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                      "type": "string"
                                    },
                                    "options": {
                                      "description": "options is Optional: this field holds extra command options if any.",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    },
                                    "readOnly": {
                                      "description": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean"
                                    },
                                    "secretRef": {
                                      "description": "secretRef is Optional: secretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    }
                                  }
                                },
                                "flocker": {
                                  "description": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running",
                                  "type": "object",
                                  "properties": {
                                    "datasetName": {
                                      "description": "datasetName is Name of the dataset stored as metadata -\u003e name on the dataset for Flocker\nshould be considered as deprecated",
                                      "type": "string"
                                    },
                                    "datasetUUID": {
                                      "description": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset",
                                      "type": "string"
                                    }
                                  }
                                },
                                "gcePersistentDisk": {
                                  "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "type": "object",
                                  "required": [
                                    "pdName"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                      "type": "string"
                                    },
                                    "partition": {
                                      "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "pdName": {
                                      "description": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "glusterfs": {
                                  "description": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md",
                                  "type": "object",
                                  "required": [
                                    "endpoints",
                                    "path"
                                  ],
                                  "properties": {
                                    "endpoints": {
                                      "description": "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "hostPath": {
                                  "description": "hostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                  "type": "object",
                                  "required": [
                                    "path"
                                  ],
                                  "properties": {
                                    "path": {
                                      "description": "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                      "type": "string"
                                    },
                                    "type": {
                                      "description": "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                      "type": "string"
                                    }
                                  }
                                },
                                "iscsi": {
                                  "description": "iscsi represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md",
                                  "type": "object",
                                  "required": [
                                    "iqn",
                                    "lun",
                                    "targetPortal"
                                  ],
                                  "properties": {
                                    "chapAuthDiscovery": {
                                      "description": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication",
                                      "type": "boolean"
                                    },
                                    "chapAuthSession": {
                                      "description": "chapAuthSession defines whether support iSCSI Session CHAP authentication",
                                      "type": "boolean"
                                    },
                                    "fsType": {
                                      "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                                      "type": "string"
                                    },
                                    "initiatorName": {
                                      "description": "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n\u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.",
                                      "type": "string"
                                    },
                                    "iqn": {
                                      "description": "iqn is the target iSCSI Qualified Name.",
                                      "type": "string"
                                    },
                                    "iscsiInterface": {
                                      "description": "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).",
                                      "type": "string",
                                      "default": "default"
                                    },
                                    "lun": {
                                      "description": "lun represents iSCSI Target Lun number.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "portals": {
                                      "description": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "readOnly": {
                                      "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.",
                                      "type": "boolean"
                                    },
                                    "secretRef": {
                                      "description": "secretRef is the CHAP Secret for iSCSI target and initiator authentication",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "targetPortal": {
                                      "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                                      "type": "string"
                                    }
                                  }
                                },
                                "name": {
                                  "description": "name of the volume.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "nfs": {
                                  "description": "nfs represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                  "type": "object",
                                  "required": [
                                    "path",
                                    "server"
                                  ],
                                  "properties": {
                                    "path": {
                                      "description": "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                      "type": "boolean"
                                    },
                                    "server": {
                                      "description": "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                      "type": "string"
                                    }
                                  }
                                },
                                "persistentVolumeClaim": {
                                  "description": "persistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                  "type": "object",
                                  "required": [
                                    "claimName"
                                  ],
                                  "properties": {
                                    "claimName": {
                                      "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "photonPersistentDisk": {
                                  "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine",
                                  "type": "object",
                                  "required": [
                                    "pdID"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                      "type": "string"
                                    },
                                    "pdID": {
                                      "description": "pdID is the ID that identifies Photon Controller persistent disk",
                                      "type": "string"
                                    }
                                  }
                                },
                                "portworxVolume": {
                                  "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine",
                                  "type": "object",
                                  "required": [
                                    "volumeID"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean"
                                    },
                                    "volumeID": {
                                      "description": "volumeID uniquely identifies a Portworx volume",
                                      "type": "string"
                                    }
                                  }
                                },
                                "projected": {
                                  "description": "projected items for all in one resources secrets, configmaps, and downward API",
                                  "type": "object",
                                  "properties": {
                                    "defaultMode": {
                                      "description": "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "sources": {
                                      "description": "sources is the list of volume projections. Each entry in this list\nhandles one source.",
                                      "type": "array",
                                      "items": {
                                        "description": "Projection that may be projected along with other supported volume types.\nExactly one of these fields must be set.",
                                        "type": "object",
                                        "properties": {
                                          "clusterTrustBundle": {
                                            "description": "ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field\nof ClusterTrustBundle objects in an auto-updating file.\n\nAlpha, gated by the ClusterTrustBundleProjection feature gate.\n\nClusterTrustBundle objects can either be selected by name, or by the\ncombination of signer name and a label selector.\n\nKubelet performs aggressive normalization of the PEM contents written\ninto the pod filesystem.  Esoteric PEM features such as inter-block\ncomments and block headers are stripped.  Certificates are deduplicated.\nThe ordering of certificates within the file is arbitrary, and Kubelet\nmay change the order over time.",
                                            "type": "object",
                                            "required": [
                                              "path"
                                            ],
                                            "properties": {
                                              "labelSelector": {
                                                "description": "Select all ClusterTrustBundles that match this label selector.  Only has\neffect if signerName is set.  Mutually-exclusive with name.  If unset,\ninterpreted as \"match nothing\".  If set but empty, interpreted as \"match\neverything\".",
                                                "type": "object",
                                                "properties": {
                                                  "matchExpressions": {
                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                    "type": "array",
                                                    "items": {
                                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                      "type": "object",
                                                      "required": [
                                                        "key",
                                                        "operator"
                                                      ],
                                                      "properties": {
                                                        "key": {
                                                          "description": "key is the label key that the selector applies to.",
                                                          "type": "string"
                                                        },
                                                        "operator": {
                                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                          "type": "string"
                                                        },
                                                        "values": {
                                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                          "type": "array",
                                                          "items": {
                                                            "type": "string"
                                                          },
                                                          "x-kubernetes-list-type": "atomic"
                                                        }
                                                      }
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  },
                                                  "matchLabels": {
                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-map-type": "atomic"
                                              },
                                              "name": {
                                                "description": "Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector.",
                                                "type": "string"
                                              },
                                              "optional": {
                                                "description": "If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles.",
                                                "type": "boolean"
                                              },
                                              "path": {
                                                "description": "Relative path from the volume root to write the bundle.",
                                                "type": "string"
                                              },
                                              "signerName": {
                                                "description": "Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated.",
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "configMap": {
                                            "description": "configMap information about the configMap data to project",
                                            "type": "object",
                                            "properties": {
                                              "items": {
                                                "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                                "type": "array",
                                                "items": {
                                                  "description": "Maps a string key to a path within a volume.",
                                                  "type": "object",
                                                  "required": [
                                                    "key",
                                                    "path"
                                                  ],
                                                  "properties": {
                                                    "key": {
                                                      "description": "key is the key to project.",
                                                      "type": "string"
                                                    },
                                                    "mode": {
                                                      "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "path": {
                                                      "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-list-type": "atomic"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "optional specify whether the ConfigMap or its keys must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "downwardAPI": {
                                            "description": "downwardAPI information about the downwardAPI data to project",
                                            "type": "object",
                                            "properties": {
                                              "items": {
                                                "description": "Items is a list of DownwardAPIVolume file",
                                                "type": "array",
                                                "items": {
                                                  "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                                  "type": "object",
                                                  "required": [
                                                    "path"
                                                  ],
                                                  "properties": {
                                                    "fieldRef": {
                                                      "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                                      "type": "object",
                                                      "required": [
                                                        "fieldPath"
                                                      ],
                                                      "properties": {
                                                        "apiVersion": {
                                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                          "type": "string"
                                                        },
                                                        "fieldPath": {
                                                          "description": "Path of the field to select in the specified API version.",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-kubernetes-map-type": "atomic"
                                                    },
                                                    "mode": {
                                                      "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "path": {
                                                      "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                                      "type": "string"
                                                    },
                                                    "resourceFieldRef": {
                                                      "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                                      "type": "object",
                                                      "required": [
                                                        "resource"
                                                      ],
                                                      "properties": {
                                                        "containerName": {
                                                          "description": "Container name: required for volumes, optional for env vars",
                                                          "type": "string"
                                                        },
                                                        "divisor": {
                                                          "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                          "anyOf": [
                                                            {
                                                              "type": "integer"
                                                            },
                                                            {
                                                              "type": "string"
                                                            }
                                                          ],
                                                          "x-kubernetes-int-or-string": true
                                                        },
                                                        "resource": {
                                                          "description": "Required: resource to select",
                                                          "type": "string"
                                                        }
                                                      },
                                                      "x-kubernetes-map-type": "atomic"
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-list-type": "atomic"
                                              }
                                            }
                                          },
                                          "secret": {
                                            "description": "secret information about the secret data to project",
                                            "type": "object",
                                            "properties": {
                                              "items": {
                                                "description": "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                                "type": "array",
                                                "items": {
                                                  "description": "Maps a string key to a path within a volume.",
                                                  "type": "object",
                                                  "required": [
                                                    "key",
                                                    "path"
                                                  ],
                                                  "properties": {
                                                    "key": {
                                                      "description": "key is the key to project.",
                                                      "type": "string"
                                                    },
                                                    "mode": {
                                                      "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                                      "type": "integer",
                                                      "format": "int32"
                                                    },
                                                    "path": {
                                                      "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "x-kubernetes-list-type": "atomic"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "optional field specify whether the Secret or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "serviceAccountToken": {
                                            "description": "serviceAccountToken is information about the serviceAccountToken data to project",
                                            "type": "object",
                                            "required": [
                                              "path"
                                            ],
                                            "properties": {
                                              "audience": {
                                                "description": "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.",
                                                "type": "string"
                                              },
                                              "expirationSeconds": {
                                                "description": "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.",
                                                "type": "integer",
                                                "format": "int64"
                                              },
                                              "path": {
                                                "description": "path is the path relative to the mount point of the file to project the\ntoken into.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  }
                                },
                                "quobyte": {
                                  "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime",
                                  "type": "object",
                                  "required": [
                                    "registry",
                                    "volume"
                                  ],
                                  "properties": {
                                    "group": {
                                      "description": "group to map volume access to\nDefault is no group",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.",
                                      "type": "boolean"
                                    },
                                    "registry": {
                                      "description": "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes",
                                      "type": "string"
                                    },
                                    "tenant": {
                                      "description": "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin",
                                      "type": "string"
                                    },
                                    "user": {
                                      "description": "user to map volume access to\nDefaults to serivceaccount user",
                                      "type": "string"
                                    },
                                    "volume": {
                                      "description": "volume is a string that references an already created Quobyte volume by name.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "rbd": {
                                  "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.\nMore info: https://examples.k8s.io/volumes/rbd/README.md",
                                  "type": "object",
                                  "required": [
                                    "image",
                                    "monitors"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                                      "type": "string"
                                    },
                                    "image": {
                                      "description": "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "string"
                                    },
                                    "keyring": {
                                      "description": "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "string",
                                      "default": "/etc/ceph/keyring"
                                    },
                                    "monitors": {
                                      "description": "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "pool": {
                                      "description": "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "string",
                                      "default": "rbd"
                                    },
                                    "readOnly": {
                                      "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "boolean"
                                    },
                                    "secretRef": {
                                      "description": "secretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "user": {
                                      "description": "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                      "type": "string",
                                      "default": "admin"
                                    }
                                  }
                                },
                                "scaleIO": {
                                  "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.",
                                  "type": "object",
                                  "required": [
                                    "gateway",
                                    "secretRef",
                                    "system"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".",
                                      "type": "string",
                                      "default": "xfs"
                                    },
                                    "gateway": {
                                      "description": "gateway is the host address of the ScaleIO API Gateway.",
                                      "type": "string"
                                    },
                                    "protectionDomain": {
                                      "description": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean"
                                    },
                                    "secretRef": {
                                      "description": "secretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "sslEnabled": {
                                      "description": "sslEnabled Flag enable/disable SSL communication with Gateway, default false",
                                      "type": "boolean"
                                    },
                                    "storageMode": {
                                      "description": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.",
                                      "type": "string",
                                      "default": "ThinProvisioned"
                                    },
                                    "storagePool": {
                                      "description": "storagePool is the ScaleIO Storage Pool associated with the protection domain.",
                                      "type": "string"
                                    },
                                    "system": {
                                      "description": "system is the name of the storage system as configured in ScaleIO.",
                                      "type": "string"
                                    },
                                    "volumeName": {
                                      "description": "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "secret": {
                                  "description": "secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                  "type": "object",
                                  "properties": {
                                    "defaultMode": {
                                      "description": "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "items": {
                                      "description": "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                      "type": "array",
                                      "items": {
                                        "description": "Maps a string key to a path within a volume.",
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "path"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "key is the key to project.",
                                            "type": "string"
                                          },
                                          "mode": {
                                            "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                            "type": "integer",
                                            "format": "int32"
                                          },
                                          "path": {
                                            "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "optional": {
                                      "description": "optional field specify whether the Secret or its keys must be defined",
                                      "type": "boolean"
                                    },
                                    "secretName": {
                                      "description": "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                      "type": "string"
                                    }
                                  }
                                },
                                "storageos": {
                                  "description": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.",
                                  "type": "object",
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                      "type": "string"
                                    },
                                    "readOnly": {
                                      "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                      "type": "boolean"
                                    },
                                    "secretRef": {
                                      "description": "secretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted.",
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        }
                                      },
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "volumeName": {
                                      "description": "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace.",
                                      "type": "string"
                                    },
                                    "volumeNamespace": {
                                      "description": "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "vsphereVolume": {
                                  "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine",
                                  "type": "object",
                                  "required": [
                                    "volumePath"
                                  ],
                                  "properties": {
                                    "fsType": {
                                      "description": "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                      "type": "string"
                                    },
                                    "storagePolicyID": {
                                      "description": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
                                      "type": "string"
                                    },
                                    "storagePolicyName": {
                                      "description": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.",
                                      "type": "string"
                                    },
                                    "volumePath": {
                                      "description": "volumePath is the path that identifies vSphere volume vmdk",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "replicas": {
                    "description": "Number of instances to deploy for a VaultServer.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "serviceTemplates": {
                    "description": "ServiceTemplates is an optional configuration for services used to expose database",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "alias"
                      ],
                      "properties": {
                        "alias": {
                          "description": "Alias represents the identifier of the service.",
                          "type": "string",
                          "enum": [
                            "internal",
                            "vault",
                            "stats"
                          ]
                        },
                        "metadata": {
                          "description": "Standard object's metadata.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
                          "type": "object",
                          "properties": {
                            "annotations": {
                              "description": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: http://kubernetes.io/docs/user-guide/annotations",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "labels": {
                              "description": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: http://kubernetes.io/docs/user-guide/labels",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "spec": {
                          "description": "Specification of the desired behavior of the service.\nMore info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status",
                          "type": "object",
                          "properties": {
                            "clusterIP": {
                              "description": "clusterIP is the IP address of the service and is usually assigned\nrandomly by the master. If an address is specified manually and is not in\nuse by others, it will be allocated to the service; otherwise, creation\nof the service will fail. This field can not be changed through updates.\nValid values are \"None\", empty string (\"\"), or a valid IP address. \"None\"\ncan be specified for headless services when proxying is not required.\nOnly applies to types ClusterIP, NodePort, and LoadBalancer. Ignored if\ntype is ExternalName.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
                              "type": "string"
                            },
                            "externalIPs": {
                              "description": "externalIPs is a list of IP addresses for which nodes in the cluster\nwill also accept traffic for this service.  These IPs are not managed by\nKubernetes.  The user is responsible for ensuring that traffic arrives\nat a node with this IP.  A common example is external load-balancers\nthat are not part of the Kubernetes system.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "externalTrafficPolicy": {
                              "description": "externalTrafficPolicy denotes if this Service desires to route external\ntraffic to node-local or cluster-wide endpoints. \"Local\" preserves the\nclient source IP and avoids a second hop for LoadBalancer and Nodeport\ntype services, but risks potentially imbalanced traffic spreading.\n\"Cluster\" obscures the client source IP and may cause a second hop to\nanother node, but should have good overall load-spreading.",
                              "type": "string"
                            },
                            "healthCheckNodePort": {
                              "description": "healthCheckNodePort specifies the healthcheck nodePort for the service.\nIf not specified, HealthCheckNodePort is created by the service api\nbackend with the allocated nodePort. Will use user-specified nodePort value\nif specified by the client. Only effects when Type is set to LoadBalancer\nand ExternalTrafficPolicy is set to Local.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "loadBalancerIP": {
                              "description": "Only applies to Service Type: LoadBalancer\nLoadBalancer will get created with the IP specified in this field.\nThis feature depends on whether the underlying cloud-provider supports specifying\nthe loadBalancerIP when a load balancer is created.\nThis field will be ignored if the cloud-provider does not support the feature.",
                              "type": "string"
                            },
                            "loadBalancerSourceRanges": {
                              "description": "If specified and supported by the platform, this will restrict traffic through the cloud-provider\nload-balancer will be restricted to the specified client IPs. This field will be ignored if the\ncloud-provider does not support the feature.\"\nMore info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ports": {
                              "description": "The list of ports that are exposed by this service.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies",
                              "type": "array",
                              "items": {
                                "description": "ServicePort contains information on service's port.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The name of this port within the service. This must be a DNS_LABEL.\nAll ports within a ServiceSpec must have unique names. This maps to\nthe 'Name' field in EndpointPort objects.\nOptional if only one ServicePort is defined on this service.",
                                    "type": "string"
                                  },
                                  "nodePort": {
                                    "description": "The port on each node on which this service is exposed when type=NodePort or LoadBalancer.\nUsually assigned by the system. If specified, it will be allocated to the service\nif unused or else creation of the service will fail.\nDefault is to auto-allocate a port if the ServiceType of this Service requires one.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "port": {
                                    "description": "The port that will be exposed by this service.",
                                    "type": "integer",
                                    "format": "int32"
                                  }
                                }
                              }
                            },
                            "sessionAffinityConfig": {
                              "description": "sessionAffinityConfig contains the configurations of session affinity.",
                              "type": "object",
                              "properties": {
                                "clientIP": {
                                  "description": "clientIP contains the configurations of Client IP based session affinity.",
                                  "type": "object",
                                  "properties": {
                                    "timeoutSeconds": {
                                      "description": "timeoutSeconds specifies the seconds of ClientIP type session sticky time.\nThe value must be \u003e0 \u0026\u0026 \u003c=86400(for 1 day) if ServiceAffinity == \"ClientIP\".\nDefault value is 10800(for 3 hours).",
                                      "type": "integer",
                                      "format": "int32"
                                    }
                                  }
                                }
                              }
                            },
                            "type": {
                              "description": "type determines how the Service is exposed. Defaults to ClusterIP. Valid\noptions are ExternalName, ClusterIP, NodePort, and LoadBalancer.\n\"ExternalName\" maps to the specified externalName.\n\"ClusterIP\" allocates a cluster-internal IP address for load-balancing to\nendpoints. Endpoints are determined by the selector or if that is not\nspecified, by manual construction of an Endpoints object. If clusterIP is\n\"None\", no virtual IP is allocated and the endpoints are published as a\nset of endpoints rather than a stable IP.\n\"NodePort\" builds on ClusterIP and allocates a port on every node which\nroutes to the clusterIP.\n\"LoadBalancer\" builds on NodePort and creates an\nexternal load-balancer (if supported in the current cloud) which routes\nto the clusterIP.\nMore info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services---service-types",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "terminationPolicy": {
                    "description": "TerminationPolicy controls the delete operation for vault server",
                    "type": "string",
                    "enum": [
                      "Halt",
                      "Delete",
                      "WipeOut",
                      "DoNotTerminate"
                    ]
                  },
                  "tls": {
                    "description": "TLS policy of vault nodes",
                    "type": "object",
                    "properties": {
                      "certificates": {
                        "description": "Certificate provides server and/or client certificate options used by application pods.\nThese options are passed to a cert-manager Certificate object.\nxref: https://github.com/jetstack/cert-manager/blob/v0.16.0/pkg/apis/certmanager/v1beta1/types_certificate.go#L82-L162",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "alias"
                          ],
                          "properties": {
                            "alias": {
                              "description": "Alias represents the identifier of the certificate.",
                              "type": "string"
                            },
                            "dnsNames": {
                              "description": "DNSNames is a list of subject alt names to be used on the Certificate.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "duration": {
                              "description": "Certificate default Duration",
                              "type": "string"
                            },
                            "emailAddresses": {
                              "description": "EmailAddresses is a list of email subjectAltNames to be set on the Certificate.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ipAddresses": {
                              "description": "IPAddresses is a list of IP addresses to be used on the Certificate",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "issuerRef": {
                              "description": "IssuerRef is a reference to a Certificate Issuer.",
                              "type": "object",
                              "required": [
                                "kind",
                                "name"
                              ],
                              "properties": {
                                "apiGroup": {
                                  "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                  "type": "string"
                                },
                                "kind": {
                                  "description": "Kind is the type of resource being referenced",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name is the name of resource being referenced",
                                  "type": "string"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "privateKey": {
                              "description": "Options to control private keys used for the Certificate.",
                              "type": "object",
                              "properties": {
                                "encoding": {
                                  "description": "The private key cryptography standards (PKCS) encoding for this\ncertificate's private key to be encoded in.\nIf provided, allowed values are \"pkcs1\" and \"pkcs8\" standing for PKCS#1\nand PKCS#8, respectively.\nDefaults to PKCS#1 if not specified.\nSee here for the difference between the formats: https://stackoverflow.com/a/48960291",
                                  "type": "string",
                                  "enum": [
                                    "PKCS1",
                                    "PKCS8"
                                  ]
                                }
                              }
                            },
                            "renewBefore": {
                              "description": "Certificate renew before expiration duration\n\nDeprecated use `ReconfigureTLS` type OpsRequest instead.",
                              "type": "string"
                            },
                            "secretName": {
                              "description": "Specifies the k8s secret name that holds the certificates.\nDefault to \u003cresource-name\u003e-\u003ccert-alias\u003e-cert.",
                              "type": "string"
                            },
                            "subject": {
                              "description": "Full X509 name specification (https://golang.org/pkg/crypto/x509/pkix/#Name).",
                              "type": "object",
                              "properties": {
                                "countries": {
                                  "description": "Countries to be used on the CertificateSpec.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "localities": {
                                  "description": "Cities to be used on the CertificateSpec.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "organizationalUnits": {
                                  "description": "Organizational Units to be used on the CertificateSpec.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "organizations": {
                                  "description": "Organizations to be used on the Certificate.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "postalCodes": {
                                  "description": "Postal codes to be used on the CertificateSpec.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "provinces": {
                                  "description": "State/Provinces to be used on the CertificateSpec.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "serialNumber": {
                                  "description": "Serial number to be used on the CertificateSpec.",
                                  "type": "string"
                                },
                                "streetAddresses": {
                                  "description": "Street addresses to be used on the CertificateSpec.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "uris": {
                              "description": "URIs is a list of URI subjectAltNames to be set on the Certificate.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "issuerRef": {
                        "description": "IssuerRef is a reference to a Certificate Issuer.",
                        "type": "object",
                        "required": [
                          "kind",
                          "name"
                        ],
                        "properties": {
                          "apiGroup": {
                            "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind is the type of resource being referenced",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the name of resource being referenced",
                            "type": "string"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    }
                  },
                  "unsealer": {
                    "description": "Unsealer configuration for vault",
                    "type": "object",
                    "properties": {
                      "mode": {
                        "description": "mode contains unseal mechanism",
                        "type": "object",
                        "properties": {
                          "awsKmsSsm": {
                            "description": "AwsKmsSsmSpec contain the fields that required to unseal vault using aws kms ssm",
                            "type": "object",
                            "required": [
                              "kmsKeyID"
                            ],
                            "properties": {
                              "credentialSecretRef": {
                                "description": "Specifies the secret name containing AWS access key and AWS secret key\nsecret data:\n - access_key:\u003cvalue\u003e\n - secret_key:\u003cvalue\u003e",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string",
                                    "default": ""
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "endpoint": {
                                "description": "Used to make AWS KMS requests. This is useful,\nfor example, when connecting to KMS over a VPC Endpoint.\nIf not set, Vault will use the default API endpoint for your region.",
                                "type": "string"
                              },
                              "kmsKeyID": {
                                "description": "The ID or ARN of the AWS KMS key to encrypt values",
                                "type": "string"
                              },
                              "region": {
                                "type": "string"
                              },
                              "ssmKeyPrefix": {
                                "description": "An optional Key prefix for SSM Parameter store",
                                "type": "string"
                              }
                            }
                          },
                          "azureKeyVault": {
                            "description": "AzureKeyVault contain the fields that required to unseal vault using azure key vault",
                            "type": "object",
                            "required": [
                              "tenantID",
                              "vaultBaseURL"
                            ],
                            "properties": {
                              "cloud": {
                                "description": "The cloud environment identifier\ndefault: \"AZUREPUBLICCLOUD\"",
                                "type": "string"
                              },
                              "credentialSecretRef": {
                                "description": "Specifies the name of secret containing client id and client secret of AAD application\nsecret data:\n - client-id:\u003cvalue\u003e\n - client-secret:\u003cvalue\u003e",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string",
                                    "default": ""
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "tenantID": {
                                "description": "The AAD Tenant ID",
                                "type": "string"
                              },
                              "tlsSecretRef": {
                                "description": "Specifies the name of secret containing client cert and client cert password\nsecret data:\n - client-cert:\u003cvalue\u003e\n\t- client-cert-password: \u003cvalue\u003e",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string",
                                    "default": ""
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "useManagedIdentity": {
                                "description": "Use managed service identity for the virtual machine",
                                "type": "boolean"
                              },
                              "vaultBaseURL": {
                                "description": "Azure key vault url, for example https://myvault.vault.azure.net",
                                "type": "string"
                              }
                            }
                          },
                          "googleKmsGcs": {
                            "description": "GoogleKmsGcsSpec contain the fields that required to unseal vault using google kms",
                            "type": "object",
                            "required": [
                              "bucket",
                              "kmsCryptoKey",
                              "kmsKeyRing",
                              "kmsLocation",
                              "kmsProject"
                            ],
                            "properties": {
                              "bucket": {
                                "description": "The name of the Google Cloud Storage bucket to store values in",
                                "type": "string"
                              },
                              "credentialSecretRef": {
                                "description": "Secret containing Google application credential\nsecret data:\n - sa.json:\u003cvalue\u003e",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string",
                                    "default": ""
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "kmsCryptoKey": {
                                "description": "The name of the Google Cloud KMS crypto key to use",
                                "type": "string"
                              },
                              "kmsKeyRing": {
                                "description": "The name of the Google Cloud KMS key ring to use",
                                "type": "string"
                              },
                              "kmsLocation": {
                                "description": "The Google Cloud KMS location to use (eg. 'global', 'europe-west1')",
                                "type": "string"
                              },
                              "kmsProject": {
                                "description": "The Google Cloud KMS project to use",
                                "type": "string"
                              }
                            }
                          },
                          "kubernetesSecret": {
                            "description": "KubernetesSecretSpec contain the fields that required to unseal using kubernetes secret",
                            "type": "object",
                            "required": [
                              "secretName"
                            ],
                            "properties": {
                              "secretName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "overwriteExisting": {
                        "description": "overwrite existing unseal keys and root tokens, possibly dangerous!",
                        "type": "boolean"
                      },
                      "retryPeriodSeconds": {
                        "description": "How often to attempt to unseal the vault instance",
                        "type": "integer",
                        "format": "int64"
                      },
                      "secretShares": {
                        "description": "Total count of secret shares that exist",
                        "type": "integer",
                        "format": "int64"
                      },
                      "secretThreshold": {
                        "description": "Minimum required secret shares to unseal",
                        "type": "integer",
                        "format": "int64"
                      },
                      "storeRootToken": {
                        "description": "should the root token be stored in the key store (default true)",
                        "type": "boolean"
                      }
                    }
                  },
                  "version": {
                    "description": "Version of VaultServer to be deployed.",
                    "type": "string"
                  }
                }
              },
              "status": {
                "type": "object",
                "properties": {
                  "authMethodStatus": {
                    "description": "Status of the vault auth methods",
                    "type": "array",
                    "items": {
                      "description": "AuthMethodStatus specifies the status of the auth method maintained by the auth method controller",
                      "type": "object",
                      "required": [
                        "path",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "path": {
                          "description": "Specifies the path in which to enable the auth method.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "Specifies the reason why failed to enable auth method",
                          "type": "string"
                        },
                        "status": {
                          "description": "Specifies whether auth method is enabled or not",
                          "type": "string",
                          "enum": [
                            "EnableSucceeded",
                            "EnableFailed",
                            "DisableSucceeded",
                            "DisableFailed"
                          ]
                        },
                        "type": {
                          "description": " Specifies the name of the authentication method type, such as \"github\" or \"token\".",
                          "type": "string",
                          "enum": [
                            "kubernetes",
                            "aws",
                            "gcp",
                            "userpass",
                            "cert",
                            "azure",
                            "jwt",
                            "oidc"
                          ]
                        }
                      }
                    }
                  },
                  "clientPort": {
                    "description": "ClientPort is the port for vault client to access.\nIt's the same on client LB service and vault nodes.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "conditions": {
                    "description": "Represents the latest available observations of a VaultServer current state.",
                    "type": "array",
                    "items": {
                      "description": "Condition defines an observation of a object operational state.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A human-readable message indicating details about the transition.\nThis field may be empty.",
                          "type": "string"
                        },
                        "observedGeneration": {
                          "description": "If set, this represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "reason": {
                          "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether this field is considered a guaranteed API.\nThis field may not be empty.",
                          "type": "string"
                        },
                        "severity": {
                          "description": "Severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of the condition, one of True, False, Unknown.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary util\ncan be useful (see .node.status.util), the ability to deconflict is important.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "initialized": {
                    "description": "Initialized indicates if the Vault service is initialized.",
                    "type": "boolean"
                  },
                  "observedGeneration": {
                    "description": "ObservedGeneration is the most recent generation observed for this resource. It corresponds to the\nresource's generation, which is updated on mutation by the API Server.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "phase": {
                    "description": "Phase indicates the state this Vault server jumps in.",
                    "type": "string",
                    "enum": [
                      "Initializing",
                      "Unsealing",
                      "Sealed",
                      "Ready",
                      "NotReady",
                      "Critical"
                    ]
                  },
                  "serviceName": {
                    "description": "ServiceName is the LB service for accessing vault nodes.",
                    "type": "string"
                  },
                  "updatedNodes": {
                    "description": "PodNames of updated Vault nodes. Updated means the Vault container image version\nmatches the spec's version.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "vaultStatus": {
                    "description": "VaultStatus is the set of Vault node specific statuses: Active, Standby, and Sealed",
                    "type": "object",
                    "properties": {
                      "active": {
                        "description": "PodName of the active Vault node. Active node is unsealed.\nOnly active node can serve requests.\nVault service only points to the active node.",
                        "type": "string"
                      },
                      "sealed": {
                        "description": "PodNames of Sealed Vault nodes. Sealed nodes MUST be unsealed to\nbecome standby or leader.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "standby": {
                        "description": "PodNames of the standby Vault nodes. Standby nodes are unsealed.\nStandby nodes do not process requests, and instead redirect to the active Vault.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "unsealed": {
                        "description": "PodNames of Unsealed Vault nodes.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "Replicas",
            "type": "string",
            "jsonPath": ".spec.replicas"
          },
          {
            "name": "Version",
            "type": "string",
            "jsonPath": ".spec.version"
          },
          {
            "name": "Status",
            "type": "string",
            "jsonPath": ".status.phase"
          },
          {
            "name": "Age",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}