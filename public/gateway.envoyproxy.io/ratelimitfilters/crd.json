{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "ratelimitfilters.gateway.envoyproxy.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.10.0"
    }
  },
  "spec": {
    "group": "gateway.envoyproxy.io",
    "names": {
      "plural": "ratelimitfilters",
      "singular": "ratelimitfilter",
      "kind": "RateLimitFilter",
      "listKind": "RateLimitFilterList"
    },
    "scope": "Namespaced",
    "versions": [
      {
        "name": "v1alpha1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "RateLimitFilter allows the user to limit the number of incoming requests to a predefined value based on attributes within the traffic flow.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "Spec defines the desired state of RateLimitFilter.",
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "global": {
                    "description": "Global defines global rate limit configuration.",
                    "type": "object",
                    "required": [
                      "rules"
                    ],
                    "properties": {
                      "rules": {
                        "description": "Rules are a list of RateLimit selectors and limits. Each rule and its associated limit is applied in a mutually exclusive way i.e. if multiple rules get selected, each of their associated limits get applied, so a single traffic request might increase the rate limit counters for multiple rules if selected.",
                        "type": "array",
                        "maxItems": 16,
                        "items": {
                          "description": "RateLimitRule defines the semantics for matching attributes from the incoming requests, and setting limits for them.",
                          "type": "object",
                          "required": [
                            "limit"
                          ],
                          "properties": {
                            "clientSelectors": {
                              "description": "ClientSelectors holds the list of select conditions to select specific clients using attributes from the traffic flow. All individual select conditions must hold True for this rule and its limit to be applied. If this field is empty, it is equivalent to True, and the limit is applied.",
                              "type": "array",
                              "maxItems": 8,
                              "items": {
                                "description": "RateLimitSelectCondition specifies the attributes within the traffic flow that can be used to select a subset of clients to be ratelimited. All the individual conditions must hold True for the overall condition to hold True.",
                                "type": "object",
                                "properties": {
                                  "headers": {
                                    "description": "Headers is a list of request headers to match. Multiple header values are ANDed together, meaning, a request MUST match all the specified headers.",
                                    "type": "array",
                                    "maxItems": 16,
                                    "items": {
                                      "description": "HeaderMatch defines the match attributes within the HTTP Headers of the request.",
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the HTTP header.",
                                          "type": "string",
                                          "maxLength": 256,
                                          "minLength": 1
                                        },
                                        "type": {
                                          "description": "Type specifies how to match against the value of the header.",
                                          "type": "string",
                                          "default": "Exact",
                                          "enum": [
                                            "Exact",
                                            "RegularExpression",
                                            "Distinct"
                                          ]
                                        },
                                        "value": {
                                          "description": "Value within the HTTP header. Due to the case-insensitivity of header names, \"foo\" and \"Foo\" are considered equivalent. Do not set this field when Type=\"Distinct\", implying matching on any/all unique values within the header.",
                                          "type": "string",
                                          "maxLength": 1024
                                        }
                                      }
                                    },
                                    "x-kubernetes-list-map-keys": [
                                      "name"
                                    ],
                                    "x-kubernetes-list-type": "map"
                                  },
                                  "sourceCIDR": {
                                    "description": "SourceCIDR is the client IP Address range to match on.",
                                    "type": "object",
                                    "required": [
                                      "value"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "default": "Exact"
                                      },
                                      "value": {
                                        "description": "Value is the IP CIDR that represents the range of Source IP Addresses of the client. These could also be the intermediate addresses through which the request has flown through and is part of the  `X-Forwarded-For` header. For example, `192.168.0.1/32`, `192.168.0.0/24`, `001:db8::/64`.",
                                        "type": "string",
                                        "maxLength": 256,
                                        "minLength": 1
                                      }
                                    }
                                  },
                                  "sourceIP": {
                                    "description": "Deprecated: Use SourceCIDR instead.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "limit": {
                              "description": "Limit holds the rate limit values. This limit is applied for traffic flows when the selectors compute to True, causing the request to be counted towards the limit. The limit is enforced and the request is ratelimited, i.e. a response with 429 HTTP status code is sent back to the client when the selected requests have reached the limit.",
                              "type": "object",
                              "required": [
                                "requests",
                                "unit"
                              ],
                              "properties": {
                                "requests": {
                                  "type": "integer"
                                },
                                "unit": {
                                  "description": "RateLimitUnit specifies the intervals for setting rate limits. Valid RateLimitUnit values are \"Second\", \"Minute\", \"Hour\", and \"Day\".",
                                  "type": "string",
                                  "enum": [
                                    "Second",
                                    "Minute",
                                    "Hour",
                                    "Day"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "type": {
                    "description": "Type decides the scope for the RateLimits. Valid RateLimitType values are \"Global\".",
                    "type": "string",
                    "enum": [
                      "Global"
                    ]
                  }
                }
              }
            }
          }
        },
        "subresources": {},
        "additionalPrinterColumns": [
          {
            "name": "Age",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}