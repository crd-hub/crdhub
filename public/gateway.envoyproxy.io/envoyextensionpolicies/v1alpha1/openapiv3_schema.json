{
  "$schema": "http://json-schema.org/schema#",
  "description": "EnvoyExtensionPolicy allows the user to configure various envoy extensibility options for the Gateway.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "gateway.envoyproxy.io/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "EnvoyExtensionPolicy"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "Spec defines the desired state of EnvoyExtensionPolicy.",
      "type": "object",
      "properties": {
        "extProc": {
          "description": "ExtProc is an ordered list of external processing filters\nthat should added to the envoy filter chain",
          "type": "array",
          "maxItems": 16,
          "items": {
            "description": "ExtProc defines the configuration for External Processing filter.",
            "type": "object",
            "required": [
              "backendRefs"
            ],
            "properties": {
              "backendRefs": {
                "description": "BackendRefs defines the configuration of the external processing service",
                "type": "array",
                "maxItems": 1,
                "minItems": 1,
                "items": {
                  "description": "BackendRef defines how an ObjectReference that is specific to BackendRef.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "group": {
                      "description": "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred.",
                      "type": "string",
                      "default": "",
                      "maxLength": 253,
                      "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes resource kind of the referent. For example\n\"Service\".\n\n\nDefaults to \"Service\" when not specified.\n\n\nExternalName services can refer to CNAME DNS records that may live\noutside of the cluster and as such are difficult to reason about in\nterms of conformance. They also may not be safe to forward to (see\nCVE-2021-25740 for more information). Implementations SHOULD NOT\nsupport ExternalName Services.\n\n\nSupport: Core (Services with a type other than ExternalName)\n\n\nSupport: Implementation-specific (Services with type ExternalName)",
                      "type": "string",
                      "default": "Service",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                    },
                    "name": {
                      "description": "Name is the name of the referent.",
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1
                    },
                    "namespace": {
                      "description": "Namespace is the namespace of the backend. When unspecified, the local\nnamespace is inferred.\n\n\nNote that when a namespace different than the local namespace is specified,\na ReferenceGrant object is required in the referent namespace to allow that\nnamespace's owner to accept the reference. See the ReferenceGrant\ndocumentation for details.\n\n\nSupport: Core",
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "port": {
                      "description": "Port specifies the destination port number to use for this resource.\nPort is required when the referent is a Kubernetes Service. In this\ncase, the port number is the service port number, not the target port.\nFor other resources, destination port might be derived from the referent\nresource or this field.",
                      "type": "integer",
                      "format": "int32",
                      "maximum": 65535,
                      "minimum": 1
                    }
                  },
                  "x-kubernetes-validations": [
                    {
                      "rule": "(size(self.group) == 0 \u0026\u0026 self.kind == 'Service') ? has(self.port) : true",
                      "message": "Must have port for Service reference"
                    }
                  ]
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "self.all(f, f.kind == 'Service' || f.kind == 'Backend')",
                    "message": "BackendRefs only supports Service and Backend kind."
                  },
                  {
                    "rule": "self.all(f, f.group == '' || f.group == 'gateway.envoyproxy.io')",
                    "message": "BackendRefs only supports Core and gateway.envoyproxy.io group."
                  }
                ]
              },
              "failOpen": {
                "description": "FailOpen defines if requests or responses that cannot be processed due to connectivity to the\nexternal processor are terminated or passed-through.\nDefault: false",
                "type": "boolean"
              },
              "messageTimeout": {
                "description": "MessageTimeout is the timeout for a response to be returned from the external processor\nDefault: 200ms",
                "type": "string",
                "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
              },
              "processingMode": {
                "description": "ProcessingMode defines how request and response body is processed\nDefault: header and body are not sent to the external processor",
                "type": "object",
                "properties": {
                  "request": {
                    "description": "Defines processing mode for requests. If present, request headers are sent. Request body is processed according\nto the specified mode.",
                    "type": "object",
                    "properties": {
                      "body": {
                        "description": "Defines body processing mode",
                        "type": "string",
                        "enum": [
                          "Streamed",
                          "Buffered",
                          "BufferedPartial"
                        ]
                      }
                    }
                  },
                  "response": {
                    "description": "Defines processing mode for responses. If present, response headers are sent. Response body is processed according\nto the specified mode.",
                    "type": "object",
                    "properties": {
                      "body": {
                        "description": "Defines body processing mode",
                        "type": "string",
                        "enum": [
                          "Streamed",
                          "Buffered",
                          "BufferedPartial"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "targetRef": {
          "description": "TargetRef is the name of the resource this policy is being attached to.\nThis policy and the TargetRef MUST be in the same namespace for this\nPolicy to have effect\n\n\nDeprecated: use targetRefs/targetSelectors instead",
          "type": "object",
          "required": [
            "group",
            "kind",
            "name"
          ],
          "properties": {
            "group": {
              "description": "Group is the group of the target resource.",
              "type": "string",
              "maxLength": 253,
              "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
            },
            "kind": {
              "description": "Kind is kind of the target resource.",
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
            },
            "name": {
              "description": "Name is the name of the target resource.",
              "type": "string",
              "maxLength": 253,
              "minLength": 1
            },
            "sectionName": {
              "description": "SectionName is the name of a section within the target resource. When\nunspecified, this targetRef targets the entire resource. In the following\nresources, SectionName is interpreted as the following:\n\n\n* Gateway: Listener name\n* HTTPRoute: HTTPRouteRule name\n* Service: Port name\n\n\nIf a SectionName is specified, but does not exist on the targeted object,\nthe Policy must fail to attach, and the policy implementation should record\na `ResolvedRefs` or similar Condition in the Policy's status.",
              "type": "string",
              "maxLength": 253,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
            }
          }
        },
        "targetRefs": {
          "description": "TargetRefs are the names of the Gateway resources this policy\nis being attached to.",
          "type": "array",
          "items": {
            "description": "LocalPolicyTargetReferenceWithSectionName identifies an API object to apply a\ndirect policy to. This should be used as part of Policy resources that can\ntarget single resources. For more information on how this policy attachment\nmode works, and a sample Policy resource, refer to the policy attachment\ndocumentation for Gateway API.\n\n\nNote: This should only be used for direct policy attachment when references\nto SectionName are actually needed. In all other cases,\nLocalPolicyTargetReference should be used.",
            "type": "object",
            "required": [
              "group",
              "kind",
              "name"
            ],
            "properties": {
              "group": {
                "description": "Group is the group of the target resource.",
                "type": "string",
                "maxLength": 253,
                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              },
              "kind": {
                "description": "Kind is kind of the target resource.",
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
              },
              "name": {
                "description": "Name is the name of the target resource.",
                "type": "string",
                "maxLength": 253,
                "minLength": 1
              },
              "sectionName": {
                "description": "SectionName is the name of a section within the target resource. When\nunspecified, this targetRef targets the entire resource. In the following\nresources, SectionName is interpreted as the following:\n\n\n* Gateway: Listener name\n* HTTPRoute: HTTPRouteRule name\n* Service: Port name\n\n\nIf a SectionName is specified, but does not exist on the targeted object,\nthe Policy must fail to attach, and the policy implementation should record\na `ResolvedRefs` or similar Condition in the Policy's status.",
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              }
            }
          }
        },
        "targetSelectors": {
          "description": "TargetSelectors allow targeting resources for this policy based on labels",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "kind",
              "matchLabels"
            ],
            "properties": {
              "group": {
                "description": "Group is the group that this selector targets. Defaults to gateway.networking.k8s.io",
                "type": "string",
                "default": "gateway.networking.k8s.io",
                "maxLength": 253,
                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              },
              "kind": {
                "description": "Kind is the resource kind that this selector targets.",
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
              },
              "matchLabels": {
                "description": "MatchLabels are the set of label selectors for identifying the targeted resource",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "x-kubernetes-validations": [
              {
                "rule": "has(self.group) ? self.group == 'gateway.networking.k8s.io' : true ",
                "message": "group must be gateway.networking.k8s.io"
              }
            ]
          }
        },
        "wasm": {
          "description": "Wasm is a list of Wasm extensions to be loaded by the Gateway.\nOrder matters, as the extensions will be loaded in the order they are\ndefined in this list.",
          "type": "array",
          "maxItems": 16,
          "items": {
            "description": "Wasm defines a Wasm extension.\n\n\nNote: at the moment, Envoy Gateway does not support configuring Wasm runtime.\nv8 is used as the VM runtime for the Wasm extensions.",
            "type": "object",
            "required": [
              "code"
            ],
            "properties": {
              "code": {
                "description": "Code is the Wasm code for the extension.",
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "http": {
                    "description": "HTTP is the HTTP URL containing the Wasm code.\n\n\nNote that the HTTP server must be accessible from the Envoy proxy.",
                    "type": "object",
                    "required": [
                      "url"
                    ],
                    "properties": {
                      "sha256": {
                        "description": "SHA256 checksum that will be used to verify the Wasm code.\n\n\nIf not specified, Envoy Gateway will not verify the downloaded Wasm code.\nkubebuilder:validation:Pattern=`^[a-f0-9]{64}$`",
                        "type": "string"
                      },
                      "url": {
                        "description": "URL is the URL containing the Wasm code.",
                        "type": "string",
                        "pattern": "^((https?:)(\\/\\/\\/?)([\\w]*(?::[\\w]*)?@)?([\\d\\w\\.-]+)(?::(\\d+))?)?([\\/\\\\\\w\\.()-]*)?(?:([?][^#]*)?(#.*)?)*"
                      }
                    }
                  },
                  "image": {
                    "description": "Image is the OCI image containing the Wasm code.\n\n\nNote that the image must be accessible from the Envoy Gateway.",
                    "type": "object",
                    "required": [
                      "url"
                    ],
                    "properties": {
                      "pullSecretRef": {
                        "description": "PullSecretRef is a reference to the secret containing the credentials to pull the image.\nOnly support Kubernetes Secret resource from the same namespace.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "group": {
                            "description": "Group is the group of the referent. For example, \"gateway.networking.k8s.io\".\nWhen unspecified or empty string, core API group is inferred.",
                            "type": "string",
                            "default": "",
                            "maxLength": 253,
                            "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                          },
                          "kind": {
                            "description": "Kind is kind of the referent. For example \"Secret\".",
                            "type": "string",
                            "default": "Secret",
                            "maxLength": 63,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                          },
                          "name": {
                            "description": "Name is the name of the referent.",
                            "type": "string",
                            "maxLength": 253,
                            "minLength": 1
                          },
                          "namespace": {
                            "description": "Namespace is the namespace of the referenced object. When unspecified, the local\nnamespace is inferred.\n\n\nNote that when a namespace different than the local namespace is specified,\na ReferenceGrant object is required in the referent namespace to allow that\nnamespace's owner to accept the reference. See the ReferenceGrant\ndocumentation for details.\n\n\nSupport: Core",
                            "type": "string",
                            "maxLength": 63,
                            "minLength": 1,
                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                          }
                        },
                        "x-kubernetes-validations": [
                          {
                            "rule": "self.kind == 'Secret'",
                            "message": "only support Secret kind."
                          }
                        ]
                      },
                      "sha256": {
                        "description": "SHA256 checksum that will be used to verify the OCI image.\n\n\nIt must match the digest of the OCI image.\n\n\nIf not specified, Envoy Gateway will not verify the downloaded OCI image.\nkubebuilder:validation:Pattern=`^[a-f0-9]{64}$`",
                        "type": "string"
                      },
                      "url": {
                        "description": "URL is the URL of the OCI image.\nURL can be in the format of `registry/image:tag` or `registry/image@sha256:digest`.",
                        "type": "string"
                      }
                    }
                  },
                  "pullPolicy": {
                    "description": "PullPolicy is the policy to use when pulling the Wasm module by either the HTTP or Image source.\nThis field is only applicable when the SHA256 field is not set.\n\n\nIf not specified, the default policy is IfNotPresent except for OCI images whose tag is latest.\n\n\nNote: EG does not update the Wasm module every time an Envoy proxy requests\nthe Wasm module even if the pull policy is set to Always.\nIt only updates the Wasm module when the EnvoyExtension resource version changes.",
                    "type": "string",
                    "enum": [
                      "IfNotPresent",
                      "Always"
                    ]
                  },
                  "type": {
                    "description": "Type is the type of the source of the Wasm code.\nValid WasmCodeSourceType values are \"HTTP\" or \"Image\".",
                    "type": "string",
                    "allOf": [
                      {
                        "enum": [
                          "HTTP",
                          "Image"
                        ]
                      },
                      {
                        "enum": [
                          "HTTP",
                          "Image",
                          "ConfigMap"
                        ]
                      }
                    ]
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "self.type == 'HTTP' ? has(self.http) : !has(self.http)",
                    "message": "If type is HTTP, http field needs to be set."
                  },
                  {
                    "rule": "self.type == 'Image' ? has(self.image) : !has(self.image)",
                    "message": "If type is Image, image field needs to be set."
                  }
                ]
              },
              "config": {
                "description": "Config is the configuration for the Wasm extension.\nThis configuration will be passed as a JSON string to the Wasm extension.",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "failOpen": {
                "description": "FailOpen is a switch used to control the behavior when a fatal error occurs\nduring the initialization or the execution of the Wasm extension.\nIf FailOpen is set to true, the system bypasses the Wasm extension and\nallows the traffic to pass through. Otherwise, if it is set to false or\nnot set (defaulting to false), the system blocks the traffic and returns\nan HTTP 5xx error.",
                "type": "boolean",
                "default": false
              },
              "name": {
                "description": "Name is a unique name for this Wasm extension. It is used to identify the\nWasm extension if multiple extensions are handled by the same vm_id and root_id.\nIt's also used for logging/debugging.\nIf not specified, EG will generate a unique name for the Wasm extension.",
                "type": "string"
              },
              "rootID": {
                "description": "RootID is a unique ID for a set of extensions in a VM which will share a\nRootContext and Contexts if applicable (e.g., an Wasm HttpFilter and an Wasm AccessLog).\nIf left blank, all extensions with a blank root_id with the same vm_id will share Context(s).\n\n\nNote: RootID must match the root_id parameter used to register the Context in the Wasm code.",
                "type": "string"
              }
            }
          }
        }
      },
      "x-kubernetes-validations": [
        {
          "rule": "(has(self.targetRef) \u0026\u0026 !has(self.targetRefs)) || (!has(self.targetRef) \u0026\u0026 has(self.targetRefs)) || (has(self.targetSelectors) \u0026\u0026 self.targetSelectors.size() \u003e 0) ",
          "message": "either targetRef or targetRefs must be used"
        },
        {
          "rule": "has(self.targetRef) ? self.targetRef.group == 'gateway.networking.k8s.io' : true",
          "message": "this policy can only have a targetRef.group of gateway.networking.k8s.io"
        },
        {
          "rule": "has(self.targetRef) ? self.targetRef.kind in ['Gateway', 'HTTPRoute', 'GRPCRoute', 'UDPRoute', 'TCPRoute', 'TLSRoute'] : true",
          "message": "this policy can only have a targetRef.kind of Gateway/HTTPRoute/GRPCRoute/TCPRoute/UDPRoute/TLSRoute"
        },
        {
          "rule": "has(self.targetRef) ? !has(self.targetRef.sectionName) : true",
          "message": "this policy does not yet support the sectionName field"
        },
        {
          "rule": "has(self.targetRefs) ? self.targetRefs.all(ref, ref.group == 'gateway.networking.k8s.io') : true ",
          "message": "this policy can only have a targetRefs[*].group of gateway.networking.k8s.io"
        },
        {
          "rule": "has(self.targetRefs) ? self.targetRefs.all(ref, ref.kind in ['Gateway', 'HTTPRoute', 'GRPCRoute', 'UDPRoute', 'TCPRoute', 'TLSRoute']) : true ",
          "message": "this policy can only have a targetRefs[*].kind of Gateway/HTTPRoute/GRPCRoute/TCPRoute/UDPRoute/TLSRoute"
        },
        {
          "rule": "has(self.targetRefs) ? self.targetRefs.all(ref, !has(ref.sectionName)) : true",
          "message": "this policy does not yet support the sectionName field"
        }
      ]
    }
  }
}