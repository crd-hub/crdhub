{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "resourcepolicies.compute.gcp.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "compute.gcp.upbound.io",
    "names": {
      "plural": "resourcepolicies",
      "singular": "resourcepolicy",
      "kind": "ResourcePolicy",
      "listKind": "ResourcePolicyList",
      "categories": [
        "crossplane",
        "managed",
        "gcp"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "ResourcePolicy is the Schema for the ResourcePolicys API. A policy that can be attached to a resource to specify or schedule actions on that resource.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "ResourcePolicySpec defines the desired state of ResourcePolicy",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "required": [
                      "region"
                    ],
                    "properties": {
                      "description": {
                        "description": "An optional description of this resource. Provide this property when you create the resource.",
                        "type": "string"
                      },
                      "diskConsistencyGroupPolicy": {
                        "description": "Replication consistency group for asynchronous disk replication. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Enable disk consistency on the resource policy.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "groupPlacementPolicy": {
                        "description": "Resource policy for instances used for placement configuration. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "availabilityDomainCount": {
                              "description": "The number of availability domains instances will be spread across. If two instances are in different availability domain, they will not be put in the same low latency network",
                              "type": "number"
                            },
                            "collocation": {
                              "description": "Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network. Specify COLLOCATED to enable collocation. Can only be specified with vm_count. If compute instances are created with a COLLOCATED policy, then exactly vm_count instances must be created at the same time with the resource policy attached. Possible values are: COLLOCATED.",
                              "type": "string"
                            },
                            "vmCount": {
                              "description": "Number of VMs in this placement group. Google does not recommend that you use this field unless you use a compact policy and you want your policy to work only if it contains this exact number of VMs.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "instanceSchedulePolicy": {
                        "description": "Resource policy for scheduling instance operations. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "expirationTime": {
                              "description": "The expiration time of the schedule. The timestamp is an RFC3339 string.",
                              "type": "string"
                            },
                            "startTime": {
                              "description": "The start time of the schedule. The timestamp is an RFC3339 string.",
                              "type": "string"
                            },
                            "timeZone": {
                              "description": "Specifies the time zone to be used in interpreting the schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database.",
                              "type": "string"
                            },
                            "vmStartSchedule": {
                              "description": "Specifies the schedule for starting instances. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "schedule": {
                                    "description": "Specifies the frequency for the operation, using the unix-cron format.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "vmStopSchedule": {
                              "description": "Specifies the schedule for stopping instances. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "schedule": {
                                    "description": "Specifies the frequency for the operation, using the unix-cron format.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "region": {
                        "description": "Region where resource policy resides.",
                        "type": "string"
                      },
                      "snapshotSchedulePolicy": {
                        "description": "Policy for creating snapshots of persistent disks. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "retentionPolicy": {
                              "description": "Retention policy applied to snapshots created by this resource policy. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "maxRetentionDays": {
                                    "description": "Maximum age of the snapshot that is allowed to be kept.",
                                    "type": "number"
                                  },
                                  "onSourceDiskDelete": {
                                    "description": "Specifies the behavior to apply to scheduled snapshots when the source disk is deleted. Default value is KEEP_AUTO_SNAPSHOTS. Possible values are: KEEP_AUTO_SNAPSHOTS, APPLY_RETENTION_POLICY.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "schedule": {
                              "description": "Contains one of an hourlySchedule, dailySchedule, or weeklySchedule. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "dailySchedule": {
                                    "description": "The policy will execute every nth day at the specified time. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "daysInCycle": {
                                          "description": "Defines a schedule with units measured in days. The value determines how many days pass between the start of each cycle. Days in cycle for snapshot schedule policy must be 1.",
                                          "type": "number"
                                        },
                                        "startTime": {
                                          "description": "Time within the window to start the operations. It must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "hourlySchedule": {
                                    "description": "The policy will execute every nth hour starting at the specified time. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "hoursInCycle": {
                                          "description": "The number of hours between snapshots.",
                                          "type": "number"
                                        },
                                        "startTime": {
                                          "description": "Time within the window to start the operations. It must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "weeklySchedule": {
                                    "description": "Allows specifying a snapshot time for each day of the week. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "dayOfWeeks": {
                                          "description": "May contain up to seven (one for each day of the week) snapshot times. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "day": {
                                                "description": "The day of the week to create the snapshot. e.g. MONDAY Possible values are: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.",
                                                "type": "string"
                                              },
                                              "startTime": {
                                                "description": "Time within the window to start the operations. It must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "snapshotProperties": {
                              "description": "Properties with which the snapshots are created, such as labels. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "chainName": {
                                    "description": "Creates the new snapshot in the snapshot chain labeled with the specified name. The chain name must be 1-63 characters long and comply with RFC1035.",
                                    "type": "string"
                                  },
                                  "guestFlush": {
                                    "description": "Whether to perform a 'guest aware' snapshot.",
                                    "type": "boolean"
                                  },
                                  "labels": {
                                    "description": "A set of key-value pairs.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "storageLocations": {
                                    "description": "Cloud Storage bucket location to store the auto snapshot (regional or multi-regional)",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "An optional description of this resource. Provide this property when you create the resource.",
                        "type": "string"
                      },
                      "diskConsistencyGroupPolicy": {
                        "description": "Replication consistency group for asynchronous disk replication. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Enable disk consistency on the resource policy.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "groupPlacementPolicy": {
                        "description": "Resource policy for instances used for placement configuration. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "availabilityDomainCount": {
                              "description": "The number of availability domains instances will be spread across. If two instances are in different availability domain, they will not be put in the same low latency network",
                              "type": "number"
                            },
                            "collocation": {
                              "description": "Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network. Specify COLLOCATED to enable collocation. Can only be specified with vm_count. If compute instances are created with a COLLOCATED policy, then exactly vm_count instances must be created at the same time with the resource policy attached. Possible values are: COLLOCATED.",
                              "type": "string"
                            },
                            "vmCount": {
                              "description": "Number of VMs in this placement group. Google does not recommend that you use this field unless you use a compact policy and you want your policy to work only if it contains this exact number of VMs.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "instanceSchedulePolicy": {
                        "description": "Resource policy for scheduling instance operations. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "expirationTime": {
                              "description": "The expiration time of the schedule. The timestamp is an RFC3339 string.",
                              "type": "string"
                            },
                            "startTime": {
                              "description": "The start time of the schedule. The timestamp is an RFC3339 string.",
                              "type": "string"
                            },
                            "timeZone": {
                              "description": "Specifies the time zone to be used in interpreting the schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database.",
                              "type": "string"
                            },
                            "vmStartSchedule": {
                              "description": "Specifies the schedule for starting instances. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "schedule": {
                                    "description": "Specifies the frequency for the operation, using the unix-cron format.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "vmStopSchedule": {
                              "description": "Specifies the schedule for stopping instances. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "schedule": {
                                    "description": "Specifies the frequency for the operation, using the unix-cron format.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "snapshotSchedulePolicy": {
                        "description": "Policy for creating snapshots of persistent disks. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "retentionPolicy": {
                              "description": "Retention policy applied to snapshots created by this resource policy. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "maxRetentionDays": {
                                    "description": "Maximum age of the snapshot that is allowed to be kept.",
                                    "type": "number"
                                  },
                                  "onSourceDiskDelete": {
                                    "description": "Specifies the behavior to apply to scheduled snapshots when the source disk is deleted. Default value is KEEP_AUTO_SNAPSHOTS. Possible values are: KEEP_AUTO_SNAPSHOTS, APPLY_RETENTION_POLICY.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "schedule": {
                              "description": "Contains one of an hourlySchedule, dailySchedule, or weeklySchedule. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "dailySchedule": {
                                    "description": "The policy will execute every nth day at the specified time. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "daysInCycle": {
                                          "description": "Defines a schedule with units measured in days. The value determines how many days pass between the start of each cycle. Days in cycle for snapshot schedule policy must be 1.",
                                          "type": "number"
                                        },
                                        "startTime": {
                                          "description": "Time within the window to start the operations. It must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "hourlySchedule": {
                                    "description": "The policy will execute every nth hour starting at the specified time. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "hoursInCycle": {
                                          "description": "The number of hours between snapshots.",
                                          "type": "number"
                                        },
                                        "startTime": {
                                          "description": "Time within the window to start the operations. It must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "weeklySchedule": {
                                    "description": "Allows specifying a snapshot time for each day of the week. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "dayOfWeeks": {
                                          "description": "May contain up to seven (one for each day of the week) snapshot times. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "day": {
                                                "description": "The day of the week to create the snapshot. e.g. MONDAY Possible values are: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.",
                                                "type": "string"
                                              },
                                              "startTime": {
                                                "description": "Time within the window to start the operations. It must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "snapshotProperties": {
                              "description": "Properties with which the snapshots are created, such as labels. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "chainName": {
                                    "description": "Creates the new snapshot in the snapshot chain labeled with the specified name. The chain name must be 1-63 characters long and comply with RFC1035.",
                                    "type": "string"
                                  },
                                  "guestFlush": {
                                    "description": "Whether to perform a 'guest aware' snapshot.",
                                    "type": "boolean"
                                  },
                                  "labels": {
                                    "description": "A set of key-value pairs.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "storageLocations": {
                                    "description": "Cloud Storage bucket location to store the auto snapshot (regional or multi-regional)",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "ResourcePolicyStatus defines the observed state of ResourcePolicy.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "An optional description of this resource. Provide this property when you create the resource.",
                        "type": "string"
                      },
                      "diskConsistencyGroupPolicy": {
                        "description": "Replication consistency group for asynchronous disk replication. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Enable disk consistency on the resource policy.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "groupPlacementPolicy": {
                        "description": "Resource policy for instances used for placement configuration. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "availabilityDomainCount": {
                              "description": "The number of availability domains instances will be spread across. If two instances are in different availability domain, they will not be put in the same low latency network",
                              "type": "number"
                            },
                            "collocation": {
                              "description": "Collocation specifies whether to place VMs inside the same availability domain on the same low-latency network. Specify COLLOCATED to enable collocation. Can only be specified with vm_count. If compute instances are created with a COLLOCATED policy, then exactly vm_count instances must be created at the same time with the resource policy attached. Possible values are: COLLOCATED.",
                              "type": "string"
                            },
                            "vmCount": {
                              "description": "Number of VMs in this placement group. Google does not recommend that you use this field unless you use a compact policy and you want your policy to work only if it contains this exact number of VMs.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "id": {
                        "description": "an identifier for the resource with format projects/{{project}}/regions/{{region}}/resourcePolicies/{{name}}",
                        "type": "string"
                      },
                      "instanceSchedulePolicy": {
                        "description": "Resource policy for scheduling instance operations. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "expirationTime": {
                              "description": "The expiration time of the schedule. The timestamp is an RFC3339 string.",
                              "type": "string"
                            },
                            "startTime": {
                              "description": "The start time of the schedule. The timestamp is an RFC3339 string.",
                              "type": "string"
                            },
                            "timeZone": {
                              "description": "Specifies the time zone to be used in interpreting the schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database.",
                              "type": "string"
                            },
                            "vmStartSchedule": {
                              "description": "Specifies the schedule for starting instances. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "schedule": {
                                    "description": "Specifies the frequency for the operation, using the unix-cron format.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "vmStopSchedule": {
                              "description": "Specifies the schedule for stopping instances. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "schedule": {
                                    "description": "Specifies the frequency for the operation, using the unix-cron format.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "region": {
                        "description": "Region where resource policy resides.",
                        "type": "string"
                      },
                      "selfLink": {
                        "description": "The URI of the created resource.",
                        "type": "string"
                      },
                      "snapshotSchedulePolicy": {
                        "description": "Policy for creating snapshots of persistent disks. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "retentionPolicy": {
                              "description": "Retention policy applied to snapshots created by this resource policy. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "maxRetentionDays": {
                                    "description": "Maximum age of the snapshot that is allowed to be kept.",
                                    "type": "number"
                                  },
                                  "onSourceDiskDelete": {
                                    "description": "Specifies the behavior to apply to scheduled snapshots when the source disk is deleted. Default value is KEEP_AUTO_SNAPSHOTS. Possible values are: KEEP_AUTO_SNAPSHOTS, APPLY_RETENTION_POLICY.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "schedule": {
                              "description": "Contains one of an hourlySchedule, dailySchedule, or weeklySchedule. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "dailySchedule": {
                                    "description": "The policy will execute every nth day at the specified time. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "daysInCycle": {
                                          "description": "Defines a schedule with units measured in days. The value determines how many days pass between the start of each cycle. Days in cycle for snapshot schedule policy must be 1.",
                                          "type": "number"
                                        },
                                        "startTime": {
                                          "description": "Time within the window to start the operations. It must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "hourlySchedule": {
                                    "description": "The policy will execute every nth hour starting at the specified time. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "hoursInCycle": {
                                          "description": "The number of hours between snapshots.",
                                          "type": "number"
                                        },
                                        "startTime": {
                                          "description": "Time within the window to start the operations. It must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "weeklySchedule": {
                                    "description": "Allows specifying a snapshot time for each day of the week. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "dayOfWeeks": {
                                          "description": "May contain up to seven (one for each day of the week) snapshot times. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "day": {
                                                "description": "The day of the week to create the snapshot. e.g. MONDAY Possible values are: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.",
                                                "type": "string"
                                              },
                                              "startTime": {
                                                "description": "Time within the window to start the operations. It must be in format \"HH:MM\", where HH : [00-23] and MM : [00-00] GMT.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "snapshotProperties": {
                              "description": "Properties with which the snapshots are created, such as labels. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "chainName": {
                                    "description": "Creates the new snapshot in the snapshot chain labeled with the specified name. The chain name must be 1-63 characters long and comply with RFC1035.",
                                    "type": "string"
                                  },
                                  "guestFlush": {
                                    "description": "Whether to perform a 'guest aware' snapshot.",
                                    "type": "boolean"
                                  },
                                  "labels": {
                                    "description": "A set of key-value pairs.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "storageLocations": {
                                    "description": "Cloud Storage bucket location to store the auto snapshot (regional or multi-regional)",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}