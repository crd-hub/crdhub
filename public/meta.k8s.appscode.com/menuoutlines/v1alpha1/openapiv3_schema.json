{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "meta.k8s.appscode.com/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "MenuOutline"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "type": "object",
      "properties": {
        "home": {
          "type": "object",
          "properties": {
            "autoDiscoverAPIGroup": {
              "type": "string"
            },
            "icons": {
              "description": "Icons is an optional list of icons for an application. Icon information includes the source, size,\nand mime type.",
              "type": "array",
              "items": {
                "description": "ImageSpec contains information about an image used as an icon.",
                "type": "object",
                "required": [
                  "src"
                ],
                "properties": {
                  "size": {
                    "description": "(optional) The size of the image in pixels (e.g., 25x25).",
                    "type": "string"
                  },
                  "src": {
                    "description": "The source for image represented as either an absolute URL to the image or a Data URL containing\nthe image. Data URLs are defined in RFC 2397.",
                    "type": "string"
                  },
                  "type": {
                    "description": "(optional) The mine type of the image (e.g., \"image/png\").",
                    "type": "string"
                  }
                }
              }
            },
            "layoutName": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "path": {
              "type": "string"
            }
          }
        },
        "sections": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "items"
            ],
            "properties": {
              "autoDiscoverAPIGroup": {
                "type": "string"
              },
              "icons": {
                "description": "Icons is an optional list of icons for an application. Icon information includes the source, size,\nand mime type.",
                "type": "array",
                "items": {
                  "description": "ImageSpec contains information about an image used as an icon.",
                  "type": "object",
                  "required": [
                    "src"
                  ],
                  "properties": {
                    "size": {
                      "description": "(optional) The size of the image in pixels (e.g., 25x25).",
                      "type": "string"
                    },
                    "src": {
                      "description": "The source for image represented as either an absolute URL to the image or a Data URL containing\nthe image. Data URLs are defined in RFC 2397.",
                      "type": "string"
                    },
                    "type": {
                      "description": "(optional) The mine type of the image (e.g., \"image/png\").",
                      "type": "string"
                    }
                  }
                }
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "featureMode": {
                      "type": "string",
                      "enum": [
                        "ALPHA",
                        "BETA",
                        "GA"
                      ]
                    },
                    "icons": {
                      "type": "array",
                      "items": {
                        "description": "ImageSpec contains information about an image used as an icon.",
                        "type": "object",
                        "required": [
                          "src"
                        ],
                        "properties": {
                          "size": {
                            "description": "(optional) The size of the image in pixels (e.g., 25x25).",
                            "type": "string"
                          },
                          "src": {
                            "description": "The source for image represented as either an absolute URL to the image or a Data URL containing\nthe image. Data URLs are defined in RFC 2397.",
                            "type": "string"
                          },
                          "type": {
                            "description": "(optional) The mine type of the image (e.g., \"image/png\").",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "layoutName": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "required": {
                      "type": "boolean"
                    },
                    "type": {
                      "description": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
                      "type": "object",
                      "required": [
                        "group",
                        "kind"
                      ],
                      "properties": {
                        "group": {
                          "type": "string"
                        },
                        "kind": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "layoutName": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}