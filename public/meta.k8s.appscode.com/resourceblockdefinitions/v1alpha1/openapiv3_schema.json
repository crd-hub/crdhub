{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "meta.k8s.appscode.com/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "ResourceBlockDefinition"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "type": "object",
      "required": [
        "blocks"
      ],
      "properties": {
        "blocks": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "kind",
              "query",
              "ref"
            ],
            "properties": {
              "actions": {
                "type": "object",
                "required": [
                  "create"
                ],
                "properties": {
                  "create": {
                    "type": "string"
                  }
                }
              },
              "displayMode": {
                "type": "string",
                "enum": [
                  "List",
                  "Field"
                ]
              },
              "fieldPath": {
                "type": "string"
              },
              "icons": {
                "type": "array",
                "items": {
                  "description": "ImageSpec contains information about an image used as an icon.",
                  "type": "object",
                  "required": [
                    "src"
                  ],
                  "properties": {
                    "size": {
                      "description": "(optional) The size of the image in pixels (e.g., 25x25).",
                      "type": "string"
                    },
                    "src": {
                      "description": "The source for image represented as either an absolute URL to the image or a Data URL containing\nthe image. Data URLs are defined in RFC 2397.",
                      "type": "string"
                    },
                    "type": {
                      "description": "(optional) The mine type of the image (e.g., \"image/png\").",
                      "type": "string"
                    }
                  }
                }
              },
              "impersonate": {
                "type": "boolean"
              },
              "kind": {
                "type": "string",
                "enum": [
                  "Block",
                  "Self",
                  "SubTable",
                  "Connection",
                  "Custom"
                ]
              },
              "name": {
                "type": "string"
              },
              "query": {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "byLabel": {
                    "description": "ENUM(authn,authz,auth_secret,backup_via,catalog,cert_issuer,config,connect_via,exposed_by,event,located_on,monitored_by,ocm_bind,offshoot,ops,policy,recommended_for,restore_into,scaled_by,source,storage,view)",
                    "type": "string",
                    "enum": [
                      "authn",
                      "authz",
                      "auth_secret",
                      "backup_via",
                      "catalog",
                      "cert_issuer",
                      "config",
                      "connect_via",
                      "exposed_by",
                      "event",
                      "located_on",
                      "monitored_by",
                      "ocm_bind",
                      "offshoot",
                      "ops",
                      "policy",
                      "recommended_for",
                      "restore_into",
                      "scaled_by",
                      "source",
                      "storage",
                      "view"
                    ]
                  },
                  "raw": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "REST",
                      "GraphQL"
                    ]
                  }
                }
              },
              "ref": {
                "description": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying\nconcepts during lookup stages without having partially valid types",
                "type": "object",
                "required": [
                  "group",
                  "kind"
                ],
                "properties": {
                  "group": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  }
                }
              },
              "requiredFeatureSets": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "view": {
                "type": "object",
                "properties": {
                  "columns": {
                    "type": "array",
                    "items": {
                      "description": "ResourceColumnDefinition specifies a column for server side printing.",
                      "type": "object",
                      "required": [
                        "name",
                        "priority",
                        "type"
                      ],
                      "properties": {
                        "color": {
                          "type": "object",
                          "properties": {
                            "template": {
                              "description": "Available color codes: success,danger,warning,info, link, white, light, dark, black\nsee https://bulma.io/documentation/elements/tag/#colors",
                              "type": "string"
                            }
                          }
                        },
                        "dashboard": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "description": {
                          "description": "description is a human readable description of this column.",
                          "type": "string"
                        },
                        "exec": {
                          "type": "object",
                          "properties": {
                            "alias": {
                              "type": "string"
                            },
                            "command": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "container": {
                              "type": "string"
                            },
                            "help": {
                              "type": "string"
                            },
                            "serviceNameTemplate": {
                              "type": "string"
                            }
                          }
                        },
                        "format": {
                          "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied\nto the primary identifier column to assist in clients identifying column is the resource name.\nSee https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                          "type": "string"
                        },
                        "icon": {
                          "type": "object",
                          "properties": {
                            "template": {
                              "type": "string"
                            }
                          }
                        },
                        "link": {
                          "type": "object",
                          "properties": {
                            "template": {
                              "type": "string"
                            }
                          }
                        },
                        "name": {
                          "description": "name is a human readable name for the column.",
                          "type": "string"
                        },
                        "pathTemplate": {
                          "description": "PathTemplate is a Go text template that will be evaluated to determine cell value.\nUsers can use JSONPath expression to extract nested fields and apply template functions from Masterminds/sprig library.\nThe template function for JSON path is called `jp`.\nExample: {{ jp \"{.a.b}\" . }} or {{ jp \"{.a.b}\" true }}, if json output is desired from JSONPath parser",
                          "type": "string"
                        },
                        "priority": {
                          "description": "priority is an integer defining the relative importance of this column compared to others. Lower\nnumbers are considered higher priority. Columns that may be omitted in limited space scenarios\nshould be given a higher priority.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "shape": {
                          "type": "string",
                          "enum": [
                            "Rectangle",
                            "Pill"
                          ]
                        },
                        "sort": {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "enable": {
                              "type": "boolean"
                            },
                            "format": {
                              "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied\nto the primary identifier column to assist in clients identifying column is the resource name.\nSee https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                              "type": "string"
                            },
                            "template": {
                              "type": "string"
                            },
                            "type": {
                              "description": "type is an OpenAPI type definition for this column.\nSee https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                              "type": "string"
                            }
                          }
                        },
                        "textAlign": {
                          "type": "string"
                        },
                        "tooltip": {
                          "type": "object",
                          "properties": {
                            "template": {
                              "type": "string"
                            }
                          }
                        },
                        "type": {
                          "description": "type is an OpenAPI type definition for this column.\nSee https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "width": {
                "type": "integer"
              }
            }
          }
        },
        "resource": {
          "description": "ResourceID identifies a resource",
          "type": "object",
          "required": [
            "group"
          ],
          "properties": {
            "group": {
              "type": "string"
            },
            "kind": {
              "description": "Kind is the serialized kind of the resource.  It is normally CamelCase and singular.",
              "type": "string"
            },
            "name": {
              "description": "Name is the plural name of the resource to serve.  It must match the name of the CustomResourceDefinition-registration\ntoo: plural.group and it must be all lowercase.",
              "type": "string"
            },
            "scope": {
              "description": "ResourceScope is an enum defining the different scopes available to a custom resource",
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}