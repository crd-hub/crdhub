{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "meta.k8s.appscode.com/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "ResourceOutline"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "type": "object",
      "required": [
        "defaultLayout",
        "resource"
      ],
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "items"
            ],
            "properties": {
              "description": {
                "type": "string"
              },
              "items": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "flow",
                    "operationId"
                  ],
                  "properties": {
                    "description": {
                      "type": "string"
                    },
                    "disabledTemplate": {
                      "type": "string"
                    },
                    "editor": {
                      "description": "ChartSourceRef references to a single version of a Chart",
                      "type": "object",
                      "required": [
                        "name",
                        "sourceRef",
                        "version"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "sourceRef": {
                          "description": "TypedObjectReference represents an typed namespaced object.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "apiGroup": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                              "type": "string"
                            }
                          }
                        },
                        "version": {
                          "type": "string"
                        }
                      }
                    },
                    "flow": {
                      "type": "string"
                    },
                    "icons": {
                      "type": "array",
                      "items": {
                        "description": "ImageSpec contains information about an image used as an icon.",
                        "type": "object",
                        "required": [
                          "src"
                        ],
                        "properties": {
                          "size": {
                            "description": "(optional) The size of the image in pixels (e.g., 25x25).",
                            "type": "string"
                          },
                          "src": {
                            "description": "The source for image represented as either an absolute URL to the image or a Data URL containing the image. Data URLs are defined in RFC 2397.",
                            "type": "string"
                          },
                          "type": {
                            "description": "(optional) The mine type of the image (e.g., \"image/png\").",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "operationId": {
                      "type": "string"
                    }
                  }
                }
              },
              "name": {
                "type": "string"
              }
            }
          }
        },
        "defaultLayout": {
          "type": "boolean"
        },
        "header": {
          "type": "object",
          "required": [
            "kind",
            "query",
            "ref"
          ],
          "properties": {
            "actions": {
              "type": "object",
              "required": [
                "create"
              ],
              "properties": {
                "create": {
                  "type": "string"
                }
              }
            },
            "displayMode": {
              "type": "string",
              "enum": [
                "List",
                "Field"
              ]
            },
            "fieldPath": {
              "type": "string"
            },
            "icons": {
              "type": "array",
              "items": {
                "description": "ImageSpec contains information about an image used as an icon.",
                "type": "object",
                "required": [
                  "src"
                ],
                "properties": {
                  "size": {
                    "description": "(optional) The size of the image in pixels (e.g., 25x25).",
                    "type": "string"
                  },
                  "src": {
                    "description": "The source for image represented as either an absolute URL to the image or a Data URL containing the image. Data URLs are defined in RFC 2397.",
                    "type": "string"
                  },
                  "type": {
                    "description": "(optional) The mine type of the image (e.g., \"image/png\").",
                    "type": "string"
                  }
                }
              }
            },
            "kind": {
              "type": "string",
              "enum": [
                "Block",
                "Self",
                "SubTable",
                "Connection",
                "Custom"
              ]
            },
            "name": {
              "type": "string"
            },
            "query": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "byLabel": {
                  "description": "ENUM(authn,authz,auth_secret,backup_via,catalog,cert_issuer,config,connect_via,exposed_by,event,located_on,monitored_by,ocm_bind,offshoot,ops,placed_into,policy,recommended_for,restore_into,scaled_by,storage,view)",
                  "type": "string",
                  "enum": [
                    "authn",
                    "authz",
                    "auth_secret",
                    "backup_via",
                    "catalog",
                    "cert_issuer",
                    "config",
                    "connect_via",
                    "exposed_by",
                    "event",
                    "located_on",
                    "monitored_by",
                    "ocm_bind",
                    "offshoot",
                    "ops",
                    "placed_into",
                    "policy",
                    "recommended_for",
                    "restore_into",
                    "scaled_by",
                    "storage",
                    "view"
                  ]
                },
                "raw": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "REST",
                    "GraphQL"
                  ]
                }
              }
            },
            "ref": {
              "description": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types",
              "type": "object",
              "required": [
                "group",
                "kind"
              ],
              "properties": {
                "group": {
                  "type": "string"
                },
                "kind": {
                  "type": "string"
                }
              }
            },
            "view": {
              "type": "object",
              "properties": {
                "columns": {
                  "type": "array",
                  "items": {
                    "description": "ResourceColumnDefinition specifies a column for server side printing.",
                    "type": "object",
                    "required": [
                      "name",
                      "priority",
                      "type"
                    ],
                    "properties": {
                      "color": {
                        "type": "object",
                        "properties": {
                          "template": {
                            "description": "Available color codes: success,danger,warning,info, link, white, light, dark, black see https://bulma.io/documentation/elements/tag/#colors",
                            "type": "string"
                          }
                        }
                      },
                      "dashboard": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "description": {
                        "description": "description is a human readable description of this column.",
                        "type": "string"
                      },
                      "exec": {
                        "type": "object",
                        "properties": {
                          "alias": {
                            "type": "string"
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "container": {
                            "type": "string"
                          },
                          "help": {
                            "type": "string"
                          },
                          "serviceNameTemplate": {
                            "type": "string"
                          }
                        }
                      },
                      "format": {
                        "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                        "type": "string"
                      },
                      "icon": {
                        "type": "object",
                        "properties": {
                          "template": {
                            "type": "string"
                          }
                        }
                      },
                      "link": {
                        "type": "object",
                        "properties": {
                          "template": {
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "name is a human readable name for the column.",
                        "type": "string"
                      },
                      "pathTemplate": {
                        "description": "PathTemplate is a Go text template that will be evaluated to determine cell value. Users can use JSONPath expression to extract nested fields and apply template functions from Masterminds/sprig library. The template function for JSON path is called `jp`. Example: {{ jp \"{.a.b}\" . }} or {{ jp \"{.a.b}\" true }}, if json output is desired from JSONPath parser",
                        "type": "string"
                      },
                      "priority": {
                        "description": "priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "shape": {
                        "type": "string",
                        "enum": [
                          "Rectangle",
                          "Pill"
                        ]
                      },
                      "sort": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "format": {
                            "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                            "type": "string"
                          },
                          "template": {
                            "type": "string"
                          },
                          "type": {
                            "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                            "type": "string"
                          }
                        }
                      },
                      "textAlign": {
                        "type": "string"
                      },
                      "tooltip": {
                        "type": "object",
                        "properties": {
                          "template": {
                            "type": "string"
                          }
                        }
                      },
                      "type": {
                        "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                        "type": "string"
                      }
                    }
                  }
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "width": {
              "type": "integer"
            }
          }
        },
        "pages": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "sections": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "blocks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "kind",
                          "query",
                          "ref"
                        ],
                        "properties": {
                          "actions": {
                            "type": "object",
                            "required": [
                              "create"
                            ],
                            "properties": {
                              "create": {
                                "type": "string"
                              }
                            }
                          },
                          "displayMode": {
                            "type": "string",
                            "enum": [
                              "List",
                              "Field"
                            ]
                          },
                          "fieldPath": {
                            "type": "string"
                          },
                          "icons": {
                            "type": "array",
                            "items": {
                              "description": "ImageSpec contains information about an image used as an icon.",
                              "type": "object",
                              "required": [
                                "src"
                              ],
                              "properties": {
                                "size": {
                                  "description": "(optional) The size of the image in pixels (e.g., 25x25).",
                                  "type": "string"
                                },
                                "src": {
                                  "description": "The source for image represented as either an absolute URL to the image or a Data URL containing the image. Data URLs are defined in RFC 2397.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "(optional) The mine type of the image (e.g., \"image/png\").",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "kind": {
                            "type": "string",
                            "enum": [
                              "Block",
                              "Self",
                              "SubTable",
                              "Connection",
                              "Custom"
                            ]
                          },
                          "name": {
                            "type": "string"
                          },
                          "query": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "byLabel": {
                                "description": "ENUM(authn,authz,auth_secret,backup_via,catalog,cert_issuer,config,connect_via,exposed_by,event,located_on,monitored_by,ocm_bind,offshoot,ops,placed_into,policy,recommended_for,restore_into,scaled_by,storage,view)",
                                "type": "string",
                                "enum": [
                                  "authn",
                                  "authz",
                                  "auth_secret",
                                  "backup_via",
                                  "catalog",
                                  "cert_issuer",
                                  "config",
                                  "connect_via",
                                  "exposed_by",
                                  "event",
                                  "located_on",
                                  "monitored_by",
                                  "ocm_bind",
                                  "offshoot",
                                  "ops",
                                  "placed_into",
                                  "policy",
                                  "recommended_for",
                                  "restore_into",
                                  "scaled_by",
                                  "storage",
                                  "view"
                                ]
                              },
                              "raw": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "REST",
                                  "GraphQL"
                                ]
                              }
                            }
                          },
                          "ref": {
                            "description": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types",
                            "type": "object",
                            "required": [
                              "group",
                              "kind"
                            ],
                            "properties": {
                              "group": {
                                "type": "string"
                              },
                              "kind": {
                                "type": "string"
                              }
                            }
                          },
                          "view": {
                            "type": "object",
                            "properties": {
                              "columns": {
                                "type": "array",
                                "items": {
                                  "description": "ResourceColumnDefinition specifies a column for server side printing.",
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "priority",
                                    "type"
                                  ],
                                  "properties": {
                                    "color": {
                                      "type": "object",
                                      "properties": {
                                        "template": {
                                          "description": "Available color codes: success,danger,warning,info, link, white, light, dark, black see https://bulma.io/documentation/elements/tag/#colors",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "dashboard": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "description": {
                                      "description": "description is a human readable description of this column.",
                                      "type": "string"
                                    },
                                    "exec": {
                                      "type": "object",
                                      "properties": {
                                        "alias": {
                                          "type": "string"
                                        },
                                        "command": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "container": {
                                          "type": "string"
                                        },
                                        "help": {
                                          "type": "string"
                                        },
                                        "serviceNameTemplate": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "format": {
                                      "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                                      "type": "string"
                                    },
                                    "icon": {
                                      "type": "object",
                                      "properties": {
                                        "template": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "link": {
                                      "type": "object",
                                      "properties": {
                                        "template": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "name is a human readable name for the column.",
                                      "type": "string"
                                    },
                                    "pathTemplate": {
                                      "description": "PathTemplate is a Go text template that will be evaluated to determine cell value. Users can use JSONPath expression to extract nested fields and apply template functions from Masterminds/sprig library. The template function for JSON path is called `jp`. Example: {{ jp \"{.a.b}\" . }} or {{ jp \"{.a.b}\" true }}, if json output is desired from JSONPath parser",
                                      "type": "string"
                                    },
                                    "priority": {
                                      "description": "priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "shape": {
                                      "type": "string",
                                      "enum": [
                                        "Rectangle",
                                        "Pill"
                                      ]
                                    },
                                    "sort": {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "enable": {
                                          "type": "boolean"
                                        },
                                        "format": {
                                          "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                                          "type": "string"
                                        },
                                        "template": {
                                          "type": "string"
                                        },
                                        "type": {
                                          "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "textAlign": {
                                      "type": "string"
                                    },
                                    "tooltip": {
                                      "type": "object",
                                      "properties": {
                                        "template": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "type": {
                                      "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "width": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "icons": {
                      "type": "array",
                      "items": {
                        "description": "ImageSpec contains information about an image used as an icon.",
                        "type": "object",
                        "required": [
                          "src"
                        ],
                        "properties": {
                          "size": {
                            "description": "(optional) The size of the image in pixels (e.g., 25x25).",
                            "type": "string"
                          },
                          "src": {
                            "description": "The source for image represented as either an absolute URL to the image or a Data URL containing the image. Data URLs are defined in RFC 2397.",
                            "type": "string"
                          },
                          "type": {
                            "description": "(optional) The mine type of the image (e.g., \"image/png\").",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "info": {
                      "type": "object",
                      "required": [
                        "kind",
                        "query",
                        "ref"
                      ],
                      "properties": {
                        "actions": {
                          "type": "object",
                          "required": [
                            "create"
                          ],
                          "properties": {
                            "create": {
                              "type": "string"
                            }
                          }
                        },
                        "displayMode": {
                          "type": "string",
                          "enum": [
                            "List",
                            "Field"
                          ]
                        },
                        "fieldPath": {
                          "type": "string"
                        },
                        "icons": {
                          "type": "array",
                          "items": {
                            "description": "ImageSpec contains information about an image used as an icon.",
                            "type": "object",
                            "required": [
                              "src"
                            ],
                            "properties": {
                              "size": {
                                "description": "(optional) The size of the image in pixels (e.g., 25x25).",
                                "type": "string"
                              },
                              "src": {
                                "description": "The source for image represented as either an absolute URL to the image or a Data URL containing the image. Data URLs are defined in RFC 2397.",
                                "type": "string"
                              },
                              "type": {
                                "description": "(optional) The mine type of the image (e.g., \"image/png\").",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "enum": [
                            "Block",
                            "Self",
                            "SubTable",
                            "Connection",
                            "Custom"
                          ]
                        },
                        "name": {
                          "type": "string"
                        },
                        "query": {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "byLabel": {
                              "description": "ENUM(authn,authz,auth_secret,backup_via,catalog,cert_issuer,config,connect_via,exposed_by,event,located_on,monitored_by,ocm_bind,offshoot,ops,placed_into,policy,recommended_for,restore_into,scaled_by,storage,view)",
                              "type": "string",
                              "enum": [
                                "authn",
                                "authz",
                                "auth_secret",
                                "backup_via",
                                "catalog",
                                "cert_issuer",
                                "config",
                                "connect_via",
                                "exposed_by",
                                "event",
                                "located_on",
                                "monitored_by",
                                "ocm_bind",
                                "offshoot",
                                "ops",
                                "placed_into",
                                "policy",
                                "recommended_for",
                                "restore_into",
                                "scaled_by",
                                "storage",
                                "view"
                              ]
                            },
                            "raw": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "REST",
                                "GraphQL"
                              ]
                            }
                          }
                        },
                        "ref": {
                          "description": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types",
                          "type": "object",
                          "required": [
                            "group",
                            "kind"
                          ],
                          "properties": {
                            "group": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            }
                          }
                        },
                        "view": {
                          "type": "object",
                          "properties": {
                            "columns": {
                              "type": "array",
                              "items": {
                                "description": "ResourceColumnDefinition specifies a column for server side printing.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "priority",
                                  "type"
                                ],
                                "properties": {
                                  "color": {
                                    "type": "object",
                                    "properties": {
                                      "template": {
                                        "description": "Available color codes: success,danger,warning,info, link, white, light, dark, black see https://bulma.io/documentation/elements/tag/#colors",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "dashboard": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "description": {
                                    "description": "description is a human readable description of this column.",
                                    "type": "string"
                                  },
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "alias": {
                                        "type": "string"
                                      },
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "container": {
                                        "type": "string"
                                      },
                                      "help": {
                                        "type": "string"
                                      },
                                      "serviceNameTemplate": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "format": {
                                    "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                                    "type": "string"
                                  },
                                  "icon": {
                                    "type": "object",
                                    "properties": {
                                      "template": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "link": {
                                    "type": "object",
                                    "properties": {
                                      "template": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "name is a human readable name for the column.",
                                    "type": "string"
                                  },
                                  "pathTemplate": {
                                    "description": "PathTemplate is a Go text template that will be evaluated to determine cell value. Users can use JSONPath expression to extract nested fields and apply template functions from Masterminds/sprig library. The template function for JSON path is called `jp`. Example: {{ jp \"{.a.b}\" . }} or {{ jp \"{.a.b}\" true }}, if json output is desired from JSONPath parser",
                                    "type": "string"
                                  },
                                  "priority": {
                                    "description": "priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "shape": {
                                    "type": "string",
                                    "enum": [
                                      "Rectangle",
                                      "Pill"
                                    ]
                                  },
                                  "sort": {
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "enable": {
                                        "type": "boolean"
                                      },
                                      "format": {
                                        "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                                        "type": "string"
                                      },
                                      "template": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "textAlign": {
                                    "type": "string"
                                  },
                                  "tooltip": {
                                    "type": "object",
                                    "properties": {
                                      "template": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": {
                                    "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "width": {
                          "type": "integer"
                        }
                      }
                    },
                    "insight": {
                      "type": "object",
                      "required": [
                        "kind",
                        "query",
                        "ref"
                      ],
                      "properties": {
                        "actions": {
                          "type": "object",
                          "required": [
                            "create"
                          ],
                          "properties": {
                            "create": {
                              "type": "string"
                            }
                          }
                        },
                        "displayMode": {
                          "type": "string",
                          "enum": [
                            "List",
                            "Field"
                          ]
                        },
                        "fieldPath": {
                          "type": "string"
                        },
                        "icons": {
                          "type": "array",
                          "items": {
                            "description": "ImageSpec contains information about an image used as an icon.",
                            "type": "object",
                            "required": [
                              "src"
                            ],
                            "properties": {
                              "size": {
                                "description": "(optional) The size of the image in pixels (e.g., 25x25).",
                                "type": "string"
                              },
                              "src": {
                                "description": "The source for image represented as either an absolute URL to the image or a Data URL containing the image. Data URLs are defined in RFC 2397.",
                                "type": "string"
                              },
                              "type": {
                                "description": "(optional) The mine type of the image (e.g., \"image/png\").",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "kind": {
                          "type": "string",
                          "enum": [
                            "Block",
                            "Self",
                            "SubTable",
                            "Connection",
                            "Custom"
                          ]
                        },
                        "name": {
                          "type": "string"
                        },
                        "query": {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "byLabel": {
                              "description": "ENUM(authn,authz,auth_secret,backup_via,catalog,cert_issuer,config,connect_via,exposed_by,event,located_on,monitored_by,ocm_bind,offshoot,ops,placed_into,policy,recommended_for,restore_into,scaled_by,storage,view)",
                              "type": "string",
                              "enum": [
                                "authn",
                                "authz",
                                "auth_secret",
                                "backup_via",
                                "catalog",
                                "cert_issuer",
                                "config",
                                "connect_via",
                                "exposed_by",
                                "event",
                                "located_on",
                                "monitored_by",
                                "ocm_bind",
                                "offshoot",
                                "ops",
                                "placed_into",
                                "policy",
                                "recommended_for",
                                "restore_into",
                                "scaled_by",
                                "storage",
                                "view"
                              ]
                            },
                            "raw": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "REST",
                                "GraphQL"
                              ]
                            }
                          }
                        },
                        "ref": {
                          "description": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types",
                          "type": "object",
                          "required": [
                            "group",
                            "kind"
                          ],
                          "properties": {
                            "group": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            }
                          }
                        },
                        "view": {
                          "type": "object",
                          "properties": {
                            "columns": {
                              "type": "array",
                              "items": {
                                "description": "ResourceColumnDefinition specifies a column for server side printing.",
                                "type": "object",
                                "required": [
                                  "name",
                                  "priority",
                                  "type"
                                ],
                                "properties": {
                                  "color": {
                                    "type": "object",
                                    "properties": {
                                      "template": {
                                        "description": "Available color codes: success,danger,warning,info, link, white, light, dark, black see https://bulma.io/documentation/elements/tag/#colors",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "dashboard": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "description": {
                                    "description": "description is a human readable description of this column.",
                                    "type": "string"
                                  },
                                  "exec": {
                                    "type": "object",
                                    "properties": {
                                      "alias": {
                                        "type": "string"
                                      },
                                      "command": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "container": {
                                        "type": "string"
                                      },
                                      "help": {
                                        "type": "string"
                                      },
                                      "serviceNameTemplate": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "format": {
                                    "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                                    "type": "string"
                                  },
                                  "icon": {
                                    "type": "object",
                                    "properties": {
                                      "template": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "link": {
                                    "type": "object",
                                    "properties": {
                                      "template": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "name": {
                                    "description": "name is a human readable name for the column.",
                                    "type": "string"
                                  },
                                  "pathTemplate": {
                                    "description": "PathTemplate is a Go text template that will be evaluated to determine cell value. Users can use JSONPath expression to extract nested fields and apply template functions from Masterminds/sprig library. The template function for JSON path is called `jp`. Example: {{ jp \"{.a.b}\" . }} or {{ jp \"{.a.b}\" true }}, if json output is desired from JSONPath parser",
                                    "type": "string"
                                  },
                                  "priority": {
                                    "description": "priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "shape": {
                                    "type": "string",
                                    "enum": [
                                      "Rectangle",
                                      "Pill"
                                    ]
                                  },
                                  "sort": {
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "enable": {
                                        "type": "boolean"
                                      },
                                      "format": {
                                        "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                                        "type": "string"
                                      },
                                      "template": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "textAlign": {
                                    "type": "string"
                                  },
                                  "tooltip": {
                                    "type": "object",
                                    "properties": {
                                      "template": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "type": {
                                    "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "width": {
                          "type": "integer"
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "resource": {
          "description": "ResourceID identifies a resource",
          "type": "object",
          "required": [
            "group"
          ],
          "properties": {
            "group": {
              "type": "string"
            },
            "kind": {
              "description": "Kind is the serialized kind of the resource.  It is normally CamelCase and singular.",
              "type": "string"
            },
            "name": {
              "description": "Name is the plural name of the resource to serve.  It must match the name of the CustomResourceDefinition-registration too: plural.group and it must be all lowercase.",
              "type": "string"
            },
            "scope": {
              "description": "ResourceScope is an enum defining the different scopes available to a custom resource",
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          }
        },
        "tabBar": {
          "type": "object",
          "required": [
            "kind",
            "query",
            "ref"
          ],
          "properties": {
            "actions": {
              "type": "object",
              "required": [
                "create"
              ],
              "properties": {
                "create": {
                  "type": "string"
                }
              }
            },
            "displayMode": {
              "type": "string",
              "enum": [
                "List",
                "Field"
              ]
            },
            "fieldPath": {
              "type": "string"
            },
            "icons": {
              "type": "array",
              "items": {
                "description": "ImageSpec contains information about an image used as an icon.",
                "type": "object",
                "required": [
                  "src"
                ],
                "properties": {
                  "size": {
                    "description": "(optional) The size of the image in pixels (e.g., 25x25).",
                    "type": "string"
                  },
                  "src": {
                    "description": "The source for image represented as either an absolute URL to the image or a Data URL containing the image. Data URLs are defined in RFC 2397.",
                    "type": "string"
                  },
                  "type": {
                    "description": "(optional) The mine type of the image (e.g., \"image/png\").",
                    "type": "string"
                  }
                }
              }
            },
            "kind": {
              "type": "string",
              "enum": [
                "Block",
                "Self",
                "SubTable",
                "Connection",
                "Custom"
              ]
            },
            "name": {
              "type": "string"
            },
            "query": {
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "byLabel": {
                  "description": "ENUM(authn,authz,auth_secret,backup_via,catalog,cert_issuer,config,connect_via,exposed_by,event,located_on,monitored_by,ocm_bind,offshoot,ops,placed_into,policy,recommended_for,restore_into,scaled_by,storage,view)",
                  "type": "string",
                  "enum": [
                    "authn",
                    "authz",
                    "auth_secret",
                    "backup_via",
                    "catalog",
                    "cert_issuer",
                    "config",
                    "connect_via",
                    "exposed_by",
                    "event",
                    "located_on",
                    "monitored_by",
                    "ocm_bind",
                    "offshoot",
                    "ops",
                    "placed_into",
                    "policy",
                    "recommended_for",
                    "restore_into",
                    "scaled_by",
                    "storage",
                    "view"
                  ]
                },
                "raw": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "REST",
                    "GraphQL"
                  ]
                }
              }
            },
            "ref": {
              "description": "GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types",
              "type": "object",
              "required": [
                "group",
                "kind"
              ],
              "properties": {
                "group": {
                  "type": "string"
                },
                "kind": {
                  "type": "string"
                }
              }
            },
            "view": {
              "type": "object",
              "properties": {
                "columns": {
                  "type": "array",
                  "items": {
                    "description": "ResourceColumnDefinition specifies a column for server side printing.",
                    "type": "object",
                    "required": [
                      "name",
                      "priority",
                      "type"
                    ],
                    "properties": {
                      "color": {
                        "type": "object",
                        "properties": {
                          "template": {
                            "description": "Available color codes: success,danger,warning,info, link, white, light, dark, black see https://bulma.io/documentation/elements/tag/#colors",
                            "type": "string"
                          }
                        }
                      },
                      "dashboard": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "description": {
                        "description": "description is a human readable description of this column.",
                        "type": "string"
                      },
                      "exec": {
                        "type": "object",
                        "properties": {
                          "alias": {
                            "type": "string"
                          },
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "container": {
                            "type": "string"
                          },
                          "help": {
                            "type": "string"
                          },
                          "serviceNameTemplate": {
                            "type": "string"
                          }
                        }
                      },
                      "format": {
                        "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                        "type": "string"
                      },
                      "icon": {
                        "type": "object",
                        "properties": {
                          "template": {
                            "type": "string"
                          }
                        }
                      },
                      "link": {
                        "type": "object",
                        "properties": {
                          "template": {
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "name is a human readable name for the column.",
                        "type": "string"
                      },
                      "pathTemplate": {
                        "description": "PathTemplate is a Go text template that will be evaluated to determine cell value. Users can use JSONPath expression to extract nested fields and apply template functions from Masterminds/sprig library. The template function for JSON path is called `jp`. Example: {{ jp \"{.a.b}\" . }} or {{ jp \"{.a.b}\" true }}, if json output is desired from JSONPath parser",
                        "type": "string"
                      },
                      "priority": {
                        "description": "priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "shape": {
                        "type": "string",
                        "enum": [
                          "Rectangle",
                          "Pill"
                        ]
                      },
                      "sort": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "enable": {
                            "type": "boolean"
                          },
                          "format": {
                            "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                            "type": "string"
                          },
                          "template": {
                            "type": "string"
                          },
                          "type": {
                            "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                            "type": "string"
                          }
                        }
                      },
                      "textAlign": {
                        "type": "string"
                      },
                      "tooltip": {
                        "type": "object",
                        "properties": {
                          "template": {
                            "type": "string"
                          }
                        }
                      },
                      "type": {
                        "description": "type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for more.",
                        "type": "string"
                      }
                    }
                  }
                },
                "name": {
                  "type": "string"
                }
              }
            },
            "width": {
              "type": "integer"
            }
          }
        }
      }
    }
  }
}