{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "certificateauthorities.privateca.gcp.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "privateca.gcp.upbound.io",
    "names": {
      "plural": "certificateauthorities",
      "singular": "certificateauthority",
      "kind": "CertificateAuthority",
      "listKind": "CertificateAuthorityList",
      "categories": [
        "crossplane",
        "managed",
        "gcp"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "CertificateAuthority is the Schema for the CertificateAuthoritys API. A CertificateAuthority represents an individual Certificate Authority.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "CertificateAuthoritySpec defines the desired state of CertificateAuthority",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "required": [
                      "location"
                    ],
                    "properties": {
                      "config": {
                        "description": "The config used to create a self-signed X.509 certificate or CSR. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "subjectConfig": {
                              "description": "Specifies some of the values in a certificate that are related to the subject. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "subject": {
                                    "description": "Contains distinguished name fields such as the location and organization. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "commonName": {
                                          "description": "The common name of the distinguished name.",
                                          "type": "string"
                                        },
                                        "countryCode": {
                                          "description": "The country code of the subject.",
                                          "type": "string"
                                        },
                                        "locality": {
                                          "description": "The locality or city of the subject.",
                                          "type": "string"
                                        },
                                        "organization": {
                                          "description": "The organization of the subject.",
                                          "type": "string"
                                        },
                                        "organizationalUnit": {
                                          "description": "The organizational unit of the subject.",
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "description": "The postal code of the subject.",
                                          "type": "string"
                                        },
                                        "province": {
                                          "description": "The province, territory, or regional state of the subject.",
                                          "type": "string"
                                        },
                                        "streetAddress": {
                                          "description": "The street address of the subject.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "subjectAltName": {
                                    "description": "The subject alternative name fields. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "dnsNames": {
                                          "description": "Contains only valid, fully-qualified host names.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "emailAddresses": {
                                          "description": "Contains only valid RFC 2822 E-mail addresses.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "ipAddresses": {
                                          "description": "Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "uris": {
                                          "description": "Contains only valid RFC 3986 URIs.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "x509Config": {
                              "description": "Describes how some of the technical X.509 fields in a certificate should be populated. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "additionalExtensions": {
                                    "description": "Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "critical": {
                                          "description": "Indicates whether or not the name constraints are marked critical.",
                                          "type": "boolean"
                                        },
                                        "objectId": {
                                          "description": "Describes values that are relevant in a CA certificate. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "objectIdPath": {
                                                "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.",
                                                "type": "array",
                                                "items": {
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "value": {
                                          "description": "The value of this X.509 extension. A base64-encoded string.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "aiaOcspServers": {
                                    "description": "Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "caOptions": {
                                    "description": "Describes values that are relevant in a CA certificate. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "isCa": {
                                          "description": "When true, the \"CA\" in Basic Constraints extension will be set to true.",
                                          "type": "boolean"
                                        },
                                        "maxIssuerPathLength": {
                                          "description": "Refers to the \"path length constraint\" in Basic Constraints extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. Setting the value to 0 requires setting zero_max_issuer_path_length = true.",
                                          "type": "number"
                                        },
                                        "nonCa": {
                                          "description": "When true, the \"CA\" in Basic Constraints extension will be set to false. If both is_ca and non_ca are unset, the extension will be omitted from the CA certificate.",
                                          "type": "boolean"
                                        },
                                        "zeroMaxIssuerPathLength": {
                                          "description": "When true, the \"path length constraint\" in Basic Constraints extension will be set to 0. If both max_issuer_path_length and zero_max_issuer_path_length are unset, the max path length will be omitted from the CA certificate.",
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  },
                                  "keyUsage": {
                                    "description": "Indicates the intended use for keys that correspond to a certificate. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "baseKeyUsage": {
                                          "description": "Describes high-level ways in which a key may be used. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "certSign": {
                                                "description": "The key may be used to sign certificates.",
                                                "type": "boolean"
                                              },
                                              "contentCommitment": {
                                                "description": "The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\".",
                                                "type": "boolean"
                                              },
                                              "crlSign": {
                                                "description": "The key may be used sign certificate revocation lists.",
                                                "type": "boolean"
                                              },
                                              "dataEncipherment": {
                                                "description": "The key may be used to encipher data.",
                                                "type": "boolean"
                                              },
                                              "decipherOnly": {
                                                "description": "The key may be used to decipher only.",
                                                "type": "boolean"
                                              },
                                              "digitalSignature": {
                                                "description": "The key may be used for digital signatures.",
                                                "type": "boolean"
                                              },
                                              "encipherOnly": {
                                                "description": "The key may be used to encipher only.",
                                                "type": "boolean"
                                              },
                                              "keyAgreement": {
                                                "description": "The key may be used in a key agreement protocol.",
                                                "type": "boolean"
                                              },
                                              "keyEncipherment": {
                                                "description": "The key may be used to encipher other keys.",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        },
                                        "extendedKeyUsage": {
                                          "description": "Describes high-level ways in which a key may be used. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "clientAuth": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS.",
                                                "type": "boolean"
                                              },
                                              "codeSigning": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\".",
                                                "type": "boolean"
                                              },
                                              "emailProtection": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\".",
                                                "type": "boolean"
                                              },
                                              "ocspSigning": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\".",
                                                "type": "boolean"
                                              },
                                              "serverAuth": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS.",
                                                "type": "boolean"
                                              },
                                              "timeStamping": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\".",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        },
                                        "unknownExtendedKeyUsages": {
                                          "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "objectIdPath": {
                                                "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.",
                                                "type": "array",
                                                "items": {
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "nameConstraints": {
                                    "description": "Describes the X.509 name constraints extension. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "critical": {
                                          "description": "Indicates whether or not the name constraints are marked critical.",
                                          "type": "boolean"
                                        },
                                        "excludedDnsNames": {
                                          "description": "Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com, www.example.com, www.sub.example.com would satisfy example.com while example1.com does not.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "excludedEmailAddresses": {
                                          "description": "Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com) to indicate all email addresses in that domain.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "excludedIpRanges": {
                                          "description": "Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "excludedUris": {
                                          "description": "Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com)",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "permittedDnsNames": {
                                          "description": "Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com, www.example.com, www.sub.example.com would satisfy example.com while example1.com does not.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "permittedEmailAddresses": {
                                          "description": "Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com) to indicate all email addresses in that domain.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "permittedIpRanges": {
                                          "description": "Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "permittedUris": {
                                          "description": "Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com)",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "policyIds": {
                                    "description": "Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "objectIdPath": {
                                          "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.",
                                          "type": "array",
                                          "items": {
                                            "type": "number"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "deletionProtection": {
                        "type": "boolean"
                      },
                      "desiredState": {
                        "description": "Desired state of the CertificateAuthority. Set this field to STAGED to create a STAGED root CA.",
                        "type": "string"
                      },
                      "gcsBucket": {
                        "description": "The name of a Cloud Storage bucket where this CertificateAuthority will publish content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes (such as gs://) or suffixes (such as .googleapis.com). For example, to use a bucket named my-bucket, you would simply specify my-bucket. If not specified, a managed bucket will be created.",
                        "type": "string"
                      },
                      "ignoreActiveCertificatesOnDeletion": {
                        "description": "This field allows the CA to be deleted even if the CA has active certs. Active certs include both unrevoked and unexpired certs. Use with care. Defaults to false.",
                        "type": "boolean"
                      },
                      "keySpec": {
                        "description": "Used when issuing certificates for this CertificateAuthority. If this CertificateAuthority is a self-signed CertificateAuthority, this key is also used to sign the self-signed CA certificate. Otherwise, it is used to sign a CSR. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "algorithm": {
                              "description": "The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as HSM. Possible values are: SIGN_HASH_ALGORITHM_UNSPECIFIED, RSA_PSS_2048_SHA256, RSA_PSS_3072_SHA256, RSA_PSS_4096_SHA256, RSA_PKCS1_2048_SHA256, RSA_PKCS1_3072_SHA256, RSA_PKCS1_4096_SHA256, EC_P256_SHA256, EC_P384_SHA384.",
                              "type": "string"
                            },
                            "cloudKmsKeyVersion": {
                              "description": "The resource name for an existing Cloud KMS CryptoKeyVersion in the format projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "labels": {
                        "description": "Labels with user-defined metadata. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "description": "The desired lifetime of the CA certificate. Used to create the \"notBeforeTime\" and \"notAfterTime\" fields inside an X.509 certificate. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
                        "type": "string"
                      },
                      "location": {
                        "description": "Location of the CertificateAuthority. A full list of valid locations can be found by running gcloud privateca locations list.",
                        "type": "string"
                      },
                      "pemCaCertificate": {
                        "description": "The signed CA certificate issued from the subordinated CA's CSR. This is needed when activating the subordiante CA with a third party issuer.",
                        "type": "string"
                      },
                      "pool": {
                        "description": "The name of the CaPool this Certificate Authority belongs to.",
                        "type": "string"
                      },
                      "poolRef": {
                        "description": "Reference to a CAPool to populate pool.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "poolSelector": {
                        "description": "Selector for a CAPool to populate pool.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "skipGracePeriod": {
                        "description": "If this flag is set, the Certificate Authority will be deleted as soon as possible without a 30-day grace period where undeletion would have been allowed. If you proceed, there will be no way to recover this CA. Use with care. Defaults to false.",
                        "type": "boolean"
                      },
                      "subordinateConfig": {
                        "description": "If this is a subordinate CertificateAuthority, this field will be set with the subordinate configuration, which describes its issuers. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "certificateAuthority": {
                              "description": "This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format projects/*/locations/*/caPools/*/certificateAuthorities/*.",
                              "type": "string"
                            },
                            "certificateAuthorityRef": {
                              "description": "Reference to a CertificateAuthority in privateca to populate certificateAuthority.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "certificateAuthoritySelector": {
                              "description": "Selector for a CertificateAuthority in privateca to populate certificateAuthority.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "pemIssuerChain": {
                              "description": "Contains the PEM certificate chain for the issuers of this CertificateAuthority, but not pem certificate for this CA itself. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "pemCertificates": {
                                    "description": "Expected to be in leaf-to-root order according to RFC 5246.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "type": {
                        "description": "The Type of this CertificateAuthority. ~\u003e Note: For SUBORDINATE Certificate Authorities, they need to be activated before they can issue certificates. Default value is SELF_SIGNED. Possible values are: SELF_SIGNED, SUBORDINATE.",
                        "type": "string"
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "config": {
                        "description": "The config used to create a self-signed X.509 certificate or CSR. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "subjectConfig": {
                              "description": "Specifies some of the values in a certificate that are related to the subject. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "subject": {
                                    "description": "Contains distinguished name fields such as the location and organization. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "commonName": {
                                          "description": "The common name of the distinguished name.",
                                          "type": "string"
                                        },
                                        "countryCode": {
                                          "description": "The country code of the subject.",
                                          "type": "string"
                                        },
                                        "locality": {
                                          "description": "The locality or city of the subject.",
                                          "type": "string"
                                        },
                                        "organization": {
                                          "description": "The organization of the subject.",
                                          "type": "string"
                                        },
                                        "organizationalUnit": {
                                          "description": "The organizational unit of the subject.",
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "description": "The postal code of the subject.",
                                          "type": "string"
                                        },
                                        "province": {
                                          "description": "The province, territory, or regional state of the subject.",
                                          "type": "string"
                                        },
                                        "streetAddress": {
                                          "description": "The street address of the subject.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "subjectAltName": {
                                    "description": "The subject alternative name fields. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "dnsNames": {
                                          "description": "Contains only valid, fully-qualified host names.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "emailAddresses": {
                                          "description": "Contains only valid RFC 2822 E-mail addresses.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "ipAddresses": {
                                          "description": "Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "uris": {
                                          "description": "Contains only valid RFC 3986 URIs.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "x509Config": {
                              "description": "Describes how some of the technical X.509 fields in a certificate should be populated. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "additionalExtensions": {
                                    "description": "Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "critical": {
                                          "description": "Indicates whether or not the name constraints are marked critical.",
                                          "type": "boolean"
                                        },
                                        "objectId": {
                                          "description": "Describes values that are relevant in a CA certificate. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "objectIdPath": {
                                                "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.",
                                                "type": "array",
                                                "items": {
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "value": {
                                          "description": "The value of this X.509 extension. A base64-encoded string.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "aiaOcspServers": {
                                    "description": "Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "caOptions": {
                                    "description": "Describes values that are relevant in a CA certificate. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "isCa": {
                                          "description": "When true, the \"CA\" in Basic Constraints extension will be set to true.",
                                          "type": "boolean"
                                        },
                                        "maxIssuerPathLength": {
                                          "description": "Refers to the \"path length constraint\" in Basic Constraints extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. Setting the value to 0 requires setting zero_max_issuer_path_length = true.",
                                          "type": "number"
                                        },
                                        "nonCa": {
                                          "description": "When true, the \"CA\" in Basic Constraints extension will be set to false. If both is_ca and non_ca are unset, the extension will be omitted from the CA certificate.",
                                          "type": "boolean"
                                        },
                                        "zeroMaxIssuerPathLength": {
                                          "description": "When true, the \"path length constraint\" in Basic Constraints extension will be set to 0. If both max_issuer_path_length and zero_max_issuer_path_length are unset, the max path length will be omitted from the CA certificate.",
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  },
                                  "keyUsage": {
                                    "description": "Indicates the intended use for keys that correspond to a certificate. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "baseKeyUsage": {
                                          "description": "Describes high-level ways in which a key may be used. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "certSign": {
                                                "description": "The key may be used to sign certificates.",
                                                "type": "boolean"
                                              },
                                              "contentCommitment": {
                                                "description": "The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\".",
                                                "type": "boolean"
                                              },
                                              "crlSign": {
                                                "description": "The key may be used sign certificate revocation lists.",
                                                "type": "boolean"
                                              },
                                              "dataEncipherment": {
                                                "description": "The key may be used to encipher data.",
                                                "type": "boolean"
                                              },
                                              "decipherOnly": {
                                                "description": "The key may be used to decipher only.",
                                                "type": "boolean"
                                              },
                                              "digitalSignature": {
                                                "description": "The key may be used for digital signatures.",
                                                "type": "boolean"
                                              },
                                              "encipherOnly": {
                                                "description": "The key may be used to encipher only.",
                                                "type": "boolean"
                                              },
                                              "keyAgreement": {
                                                "description": "The key may be used in a key agreement protocol.",
                                                "type": "boolean"
                                              },
                                              "keyEncipherment": {
                                                "description": "The key may be used to encipher other keys.",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        },
                                        "extendedKeyUsage": {
                                          "description": "Describes high-level ways in which a key may be used. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "clientAuth": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS.",
                                                "type": "boolean"
                                              },
                                              "codeSigning": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\".",
                                                "type": "boolean"
                                              },
                                              "emailProtection": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\".",
                                                "type": "boolean"
                                              },
                                              "ocspSigning": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\".",
                                                "type": "boolean"
                                              },
                                              "serverAuth": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS.",
                                                "type": "boolean"
                                              },
                                              "timeStamping": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\".",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        },
                                        "unknownExtendedKeyUsages": {
                                          "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "objectIdPath": {
                                                "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.",
                                                "type": "array",
                                                "items": {
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "nameConstraints": {
                                    "description": "Describes the X.509 name constraints extension. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "critical": {
                                          "description": "Indicates whether or not the name constraints are marked critical.",
                                          "type": "boolean"
                                        },
                                        "excludedDnsNames": {
                                          "description": "Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com, www.example.com, www.sub.example.com would satisfy example.com while example1.com does not.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "excludedEmailAddresses": {
                                          "description": "Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com) to indicate all email addresses in that domain.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "excludedIpRanges": {
                                          "description": "Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "excludedUris": {
                                          "description": "Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com)",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "permittedDnsNames": {
                                          "description": "Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com, www.example.com, www.sub.example.com would satisfy example.com while example1.com does not.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "permittedEmailAddresses": {
                                          "description": "Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com) to indicate all email addresses in that domain.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "permittedIpRanges": {
                                          "description": "Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "permittedUris": {
                                          "description": "Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com)",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "policyIds": {
                                    "description": "Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "objectIdPath": {
                                          "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.",
                                          "type": "array",
                                          "items": {
                                            "type": "number"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "deletionProtection": {
                        "type": "boolean"
                      },
                      "desiredState": {
                        "description": "Desired state of the CertificateAuthority. Set this field to STAGED to create a STAGED root CA.",
                        "type": "string"
                      },
                      "gcsBucket": {
                        "description": "The name of a Cloud Storage bucket where this CertificateAuthority will publish content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes (such as gs://) or suffixes (such as .googleapis.com). For example, to use a bucket named my-bucket, you would simply specify my-bucket. If not specified, a managed bucket will be created.",
                        "type": "string"
                      },
                      "ignoreActiveCertificatesOnDeletion": {
                        "description": "This field allows the CA to be deleted even if the CA has active certs. Active certs include both unrevoked and unexpired certs. Use with care. Defaults to false.",
                        "type": "boolean"
                      },
                      "keySpec": {
                        "description": "Used when issuing certificates for this CertificateAuthority. If this CertificateAuthority is a self-signed CertificateAuthority, this key is also used to sign the self-signed CA certificate. Otherwise, it is used to sign a CSR. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "algorithm": {
                              "description": "The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as HSM. Possible values are: SIGN_HASH_ALGORITHM_UNSPECIFIED, RSA_PSS_2048_SHA256, RSA_PSS_3072_SHA256, RSA_PSS_4096_SHA256, RSA_PKCS1_2048_SHA256, RSA_PKCS1_3072_SHA256, RSA_PKCS1_4096_SHA256, EC_P256_SHA256, EC_P384_SHA384.",
                              "type": "string"
                            },
                            "cloudKmsKeyVersion": {
                              "description": "The resource name for an existing Cloud KMS CryptoKeyVersion in the format projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "labels": {
                        "description": "Labels with user-defined metadata. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "description": "The desired lifetime of the CA certificate. Used to create the \"notBeforeTime\" and \"notAfterTime\" fields inside an X.509 certificate. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
                        "type": "string"
                      },
                      "pemCaCertificate": {
                        "description": "The signed CA certificate issued from the subordinated CA's CSR. This is needed when activating the subordiante CA with a third party issuer.",
                        "type": "string"
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "skipGracePeriod": {
                        "description": "If this flag is set, the Certificate Authority will be deleted as soon as possible without a 30-day grace period where undeletion would have been allowed. If you proceed, there will be no way to recover this CA. Use with care. Defaults to false.",
                        "type": "boolean"
                      },
                      "subordinateConfig": {
                        "description": "If this is a subordinate CertificateAuthority, this field will be set with the subordinate configuration, which describes its issuers. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "pemIssuerChain": {
                              "description": "Contains the PEM certificate chain for the issuers of this CertificateAuthority, but not pem certificate for this CA itself. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "pemCertificates": {
                                    "description": "Expected to be in leaf-to-root order according to RFC 5246.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "type": {
                        "description": "The Type of this CertificateAuthority. ~\u003e Note: For SUBORDINATE Certificate Authorities, they need to be activated before they can issue certificates. Default value is SELF_SIGNED. Possible values are: SELF_SIGNED, SUBORDINATE.",
                        "type": "string"
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.config) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.config))",
                    "message": "spec.forProvider.config is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.keySpec) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.keySpec))",
                    "message": "spec.forProvider.keySpec is a required parameter"
                  }
                ]
              },
              "status": {
                "description": "CertificateAuthorityStatus defines the observed state of CertificateAuthority.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "accessUrls": {
                        "description": "URLs for accessing content published by this CA, such as the CA certificate and CRLs. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "caCertificateAccessUrl": {
                              "description": "(Output) The URL where this CertificateAuthority's CA certificate is published. This will only be set for CAs that have been activated.",
                              "type": "string"
                            },
                            "crlAccessUrls": {
                              "description": "(Output) The URL where this CertificateAuthority's CRLs are published. This will only be set for CAs that have been activated.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "config": {
                        "description": "The config used to create a self-signed X.509 certificate or CSR. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "subjectConfig": {
                              "description": "Specifies some of the values in a certificate that are related to the subject. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "subject": {
                                    "description": "Contains distinguished name fields such as the location and organization. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "commonName": {
                                          "description": "The common name of the distinguished name.",
                                          "type": "string"
                                        },
                                        "countryCode": {
                                          "description": "The country code of the subject.",
                                          "type": "string"
                                        },
                                        "locality": {
                                          "description": "The locality or city of the subject.",
                                          "type": "string"
                                        },
                                        "organization": {
                                          "description": "The organization of the subject.",
                                          "type": "string"
                                        },
                                        "organizationalUnit": {
                                          "description": "The organizational unit of the subject.",
                                          "type": "string"
                                        },
                                        "postalCode": {
                                          "description": "The postal code of the subject.",
                                          "type": "string"
                                        },
                                        "province": {
                                          "description": "The province, territory, or regional state of the subject.",
                                          "type": "string"
                                        },
                                        "streetAddress": {
                                          "description": "The street address of the subject.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "subjectAltName": {
                                    "description": "The subject alternative name fields. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "dnsNames": {
                                          "description": "Contains only valid, fully-qualified host names.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "emailAddresses": {
                                          "description": "Contains only valid RFC 2822 E-mail addresses.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "ipAddresses": {
                                          "description": "Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "uris": {
                                          "description": "Contains only valid RFC 3986 URIs.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "x509Config": {
                              "description": "Describes how some of the technical X.509 fields in a certificate should be populated. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "additionalExtensions": {
                                    "description": "Specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "critical": {
                                          "description": "Indicates whether or not the name constraints are marked critical.",
                                          "type": "boolean"
                                        },
                                        "objectId": {
                                          "description": "Describes values that are relevant in a CA certificate. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "objectIdPath": {
                                                "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.",
                                                "type": "array",
                                                "items": {
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "value": {
                                          "description": "The value of this X.509 extension. A base64-encoded string.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "aiaOcspServers": {
                                    "description": "Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "caOptions": {
                                    "description": "Describes values that are relevant in a CA certificate. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "isCa": {
                                          "description": "When true, the \"CA\" in Basic Constraints extension will be set to true.",
                                          "type": "boolean"
                                        },
                                        "maxIssuerPathLength": {
                                          "description": "Refers to the \"path length constraint\" in Basic Constraints extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. Setting the value to 0 requires setting zero_max_issuer_path_length = true.",
                                          "type": "number"
                                        },
                                        "nonCa": {
                                          "description": "When true, the \"CA\" in Basic Constraints extension will be set to false. If both is_ca and non_ca are unset, the extension will be omitted from the CA certificate.",
                                          "type": "boolean"
                                        },
                                        "zeroMaxIssuerPathLength": {
                                          "description": "When true, the \"path length constraint\" in Basic Constraints extension will be set to 0. If both max_issuer_path_length and zero_max_issuer_path_length are unset, the max path length will be omitted from the CA certificate.",
                                          "type": "boolean"
                                        }
                                      }
                                    }
                                  },
                                  "keyUsage": {
                                    "description": "Indicates the intended use for keys that correspond to a certificate. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "baseKeyUsage": {
                                          "description": "Describes high-level ways in which a key may be used. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "certSign": {
                                                "description": "The key may be used to sign certificates.",
                                                "type": "boolean"
                                              },
                                              "contentCommitment": {
                                                "description": "The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\".",
                                                "type": "boolean"
                                              },
                                              "crlSign": {
                                                "description": "The key may be used sign certificate revocation lists.",
                                                "type": "boolean"
                                              },
                                              "dataEncipherment": {
                                                "description": "The key may be used to encipher data.",
                                                "type": "boolean"
                                              },
                                              "decipherOnly": {
                                                "description": "The key may be used to decipher only.",
                                                "type": "boolean"
                                              },
                                              "digitalSignature": {
                                                "description": "The key may be used for digital signatures.",
                                                "type": "boolean"
                                              },
                                              "encipherOnly": {
                                                "description": "The key may be used to encipher only.",
                                                "type": "boolean"
                                              },
                                              "keyAgreement": {
                                                "description": "The key may be used in a key agreement protocol.",
                                                "type": "boolean"
                                              },
                                              "keyEncipherment": {
                                                "description": "The key may be used to encipher other keys.",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        },
                                        "extendedKeyUsage": {
                                          "description": "Describes high-level ways in which a key may be used. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "clientAuth": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS.",
                                                "type": "boolean"
                                              },
                                              "codeSigning": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\".",
                                                "type": "boolean"
                                              },
                                              "emailProtection": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\".",
                                                "type": "boolean"
                                              },
                                              "ocspSigning": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\".",
                                                "type": "boolean"
                                              },
                                              "serverAuth": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS.",
                                                "type": "boolean"
                                              },
                                              "timeStamping": {
                                                "description": "Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\".",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        },
                                        "unknownExtendedKeyUsages": {
                                          "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "objectIdPath": {
                                                "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.",
                                                "type": "array",
                                                "items": {
                                                  "type": "number"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "nameConstraints": {
                                    "description": "Describes the X.509 name constraints extension. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "critical": {
                                          "description": "Indicates whether or not the name constraints are marked critical.",
                                          "type": "boolean"
                                        },
                                        "excludedDnsNames": {
                                          "description": "Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com, www.example.com, www.sub.example.com would satisfy example.com while example1.com does not.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "excludedEmailAddresses": {
                                          "description": "Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com) to indicate all email addresses in that domain.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "excludedIpRanges": {
                                          "description": "Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "excludedUris": {
                                          "description": "Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com)",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "permittedDnsNames": {
                                          "description": "Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, example.com, www.example.com, www.sub.example.com would satisfy example.com while example1.com does not.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "permittedEmailAddresses": {
                                          "description": "Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. .example.com) to indicate all email addresses in that domain.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "permittedIpRanges": {
                                          "description": "Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "permittedUris": {
                                          "description": "Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like .example.com)",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "policyIds": {
                                    "description": "Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "objectIdPath": {
                                          "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.",
                                          "type": "array",
                                          "items": {
                                            "type": "number"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "createTime": {
                        "description": "The time at which this CertificateAuthority was created. A timestamp in RFC3339 UTC \"Zulu\" format, with nanosecond resolution and up to nine fractional digits. Examples: \"2014-10-02T15:01:23Z\" and \"2014-10-02T15:01:23.045123456Z\".",
                        "type": "string"
                      },
                      "deletionProtection": {
                        "type": "boolean"
                      },
                      "desiredState": {
                        "description": "Desired state of the CertificateAuthority. Set this field to STAGED to create a STAGED root CA.",
                        "type": "string"
                      },
                      "gcsBucket": {
                        "description": "The name of a Cloud Storage bucket where this CertificateAuthority will publish content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes (such as gs://) or suffixes (such as .googleapis.com). For example, to use a bucket named my-bucket, you would simply specify my-bucket. If not specified, a managed bucket will be created.",
                        "type": "string"
                      },
                      "id": {
                        "description": "an identifier for the resource with format projects/{{project}}/locations/{{location}}/caPools/{{pool}}/certificateAuthorities/{{certificate_authority_id}}",
                        "type": "string"
                      },
                      "ignoreActiveCertificatesOnDeletion": {
                        "description": "This field allows the CA to be deleted even if the CA has active certs. Active certs include both unrevoked and unexpired certs. Use with care. Defaults to false.",
                        "type": "boolean"
                      },
                      "keySpec": {
                        "description": "Used when issuing certificates for this CertificateAuthority. If this CertificateAuthority is a self-signed CertificateAuthority, this key is also used to sign the self-signed CA certificate. Otherwise, it is used to sign a CSR. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "algorithm": {
                              "description": "The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as HSM. Possible values are: SIGN_HASH_ALGORITHM_UNSPECIFIED, RSA_PSS_2048_SHA256, RSA_PSS_3072_SHA256, RSA_PSS_4096_SHA256, RSA_PKCS1_2048_SHA256, RSA_PKCS1_3072_SHA256, RSA_PKCS1_4096_SHA256, EC_P256_SHA256, EC_P384_SHA384.",
                              "type": "string"
                            },
                            "cloudKmsKeyVersion": {
                              "description": "The resource name for an existing Cloud KMS CryptoKeyVersion in the format projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "labels": {
                        "description": "Labels with user-defined metadata. An object containing a list of \"key\": value pairs. Example: { \"name\": \"wrench\", \"mass\": \"1.3kg\", \"count\": \"3\" }.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "lifetime": {
                        "description": "The desired lifetime of the CA certificate. Used to create the \"notBeforeTime\" and \"notAfterTime\" fields inside an X.509 certificate. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
                        "type": "string"
                      },
                      "location": {
                        "description": "Location of the CertificateAuthority. A full list of valid locations can be found by running gcloud privateca locations list.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The resource name for this CertificateAuthority in the format projects//locations//certificateAuthorities/*.",
                        "type": "string"
                      },
                      "pemCaCertificate": {
                        "description": "The signed CA certificate issued from the subordinated CA's CSR. This is needed when activating the subordiante CA with a third party issuer.",
                        "type": "string"
                      },
                      "pemCaCertificates": {
                        "description": "This CertificateAuthority's certificate chain, including the current CertificateAuthority's certificate. Ordered such that the root issuer is the final element (consistent with RFC 5246). For a self-signed CA, this will only list the current CertificateAuthority's certificate.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "pool": {
                        "description": "The name of the CaPool this Certificate Authority belongs to.",
                        "type": "string"
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "skipGracePeriod": {
                        "description": "If this flag is set, the Certificate Authority will be deleted as soon as possible without a 30-day grace period where undeletion would have been allowed. If you proceed, there will be no way to recover this CA. Use with care. Defaults to false.",
                        "type": "boolean"
                      },
                      "state": {
                        "description": "The State for this CertificateAuthority.",
                        "type": "string"
                      },
                      "subordinateConfig": {
                        "description": "If this is a subordinate CertificateAuthority, this field will be set with the subordinate configuration, which describes its issuers. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "certificateAuthority": {
                              "description": "This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format projects/*/locations/*/caPools/*/certificateAuthorities/*.",
                              "type": "string"
                            },
                            "pemIssuerChain": {
                              "description": "Contains the PEM certificate chain for the issuers of this CertificateAuthority, but not pem certificate for this CA itself. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "pemCertificates": {
                                    "description": "Expected to be in leaf-to-root order according to RFC 5246.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "type": {
                        "description": "The Type of this CertificateAuthority. ~\u003e Note: For SUBORDINATE Certificate Authorities, they need to be activated before they can issue certificates. Default value is SELF_SIGNED. Possible values are: SELF_SIGNED, SUBORDINATE.",
                        "type": "string"
                      },
                      "updateTime": {
                        "description": "The time at which this CertificateAuthority was updated. A timestamp in RFC3339 UTC \"Zulu\" format, with nanosecond resolution and up to nine fractional digits. Examples: \"2014-10-02T15:01:23Z\" and \"2014-10-02T15:01:23.045123456Z\".",
                        "type": "string"
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}