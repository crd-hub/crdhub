{
  "$schema": "http://json-schema.org/schema#",
  "description": "Config is the Schema for the configs API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "config.gatekeeper.sh/v1alpha1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "Config"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "ConfigSpec defines the desired state of Config.",
      "type": "object",
      "properties": {
        "match": {
          "description": "Configuration for namespace exclusion",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "excludedNamespaces": {
                "type": "array",
                "items": {
                  "description": "A string that supports globbing at its front or end. Ex: \"kube-*\" will match \"kube-system\" or \"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\".  The asterisk is required for wildcard matching.",
                  "type": "string",
                  "pattern": "^(\\*|\\*-)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\*|-\\*)?$"
                }
              },
              "processes": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "readiness": {
          "description": "Configuration for readiness tracker",
          "type": "object",
          "properties": {
            "statsEnabled": {
              "type": "boolean"
            }
          }
        },
        "sync": {
          "description": "Configuration for syncing k8s objects",
          "type": "object",
          "properties": {
            "syncOnly": {
              "description": "If non-empty, only entries on this list will be replicated into OPA",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "group": {
                    "type": "string"
                  },
                  "kind": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "validation": {
          "description": "Configuration for validation",
          "type": "object",
          "properties": {
            "traces": {
              "description": "List of requests to trace. Both \"user\" and \"kinds\" must be specified",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dump": {
                    "description": "Also dump the state of OPA with the trace. Set to `All` to dump everything.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Only trace requests of the following GroupVersionKind",
                    "type": "object",
                    "properties": {
                      "group": {
                        "type": "string"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    }
                  },
                  "user": {
                    "description": "Only trace requests from the specified user",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}