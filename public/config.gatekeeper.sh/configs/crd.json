{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "configs.config.gatekeeper.sh",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.10.0"
    }
  },
  "spec": {
    "group": "config.gatekeeper.sh",
    "names": {
      "plural": "configs",
      "singular": "config",
      "kind": "Config",
      "listKind": "ConfigList"
    },
    "scope": "Namespaced",
    "versions": [
      {
        "name": "v1alpha1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "Config is the Schema for the configs API.",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "ConfigSpec defines the desired state of Config.",
                "type": "object",
                "properties": {
                  "match": {
                    "description": "Configuration for namespace exclusion",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "excludedNamespaces": {
                          "type": "array",
                          "items": {
                            "description": "A string that supports globbing at its front or end. Ex: \"kube-*\" will match \"kube-system\" or \"kube-public\", \"*-system\" will match \"kube-system\" or \"gatekeeper-system\".  The asterisk is required for wildcard matching.",
                            "type": "string",
                            "pattern": "^(\\*|\\*-)?[a-z0-9]([-:a-z0-9]*[a-z0-9])?(\\*|-\\*)?$"
                          }
                        },
                        "processes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "readiness": {
                    "description": "Configuration for readiness tracker",
                    "type": "object",
                    "properties": {
                      "statsEnabled": {
                        "type": "boolean"
                      }
                    }
                  },
                  "sync": {
                    "description": "Configuration for syncing k8s objects",
                    "type": "object",
                    "properties": {
                      "syncOnly": {
                        "description": "If non-empty, only entries on this list will be replicated into OPA",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "group": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "version": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "validation": {
                    "description": "Configuration for validation",
                    "type": "object",
                    "properties": {
                      "traces": {
                        "description": "List of requests to trace. Both \"user\" and \"kinds\" must be specified",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dump": {
                              "description": "Also dump the state of OPA with the trace. Set to `All` to dump everything.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Only trace requests of the following GroupVersionKind",
                              "type": "object",
                              "properties": {
                                "group": {
                                  "type": "string"
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "version": {
                                  "type": "string"
                                }
                              }
                            },
                            "user": {
                              "description": "Only trace requests from the specified user",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "ConfigStatus defines the observed state of Config.",
                "type": "object"
              }
            }
          }
        }
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}