{
  "$schema": "http://json-schema.org/schema#",
  "description": "Connection is the Schema for the Connections API. Provides an EventBridge connection resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "cloudwatchevents.aws.upbound.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "Connection"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "ConnectionSpec defines the desired state of Connection",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "authParameters": {
              "description": "Parameters used for authorization. A maximum of 1 are allowed. Documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "apiKey": {
                    "description": "Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with basic and oauth. Documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "valueSecretRef"
                      ],
                      "properties": {
                        "key": {
                          "description": "Header Name.",
                          "type": "string"
                        },
                        "valueSecretRef": {
                          "description": "Header Value. Created and stored in AWS Secrets Manager.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "basic": {
                    "description": "Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with api_key and oauth. Documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "passwordSecretRef"
                      ],
                      "properties": {
                        "passwordSecretRef": {
                          "description": "A password for the authorization. Created and stored in AWS Secrets Manager.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          }
                        },
                        "username": {
                          "description": "A username for the authorization.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "invocationHttpParameters": {
                    "description": "Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "body": {
                          "description": "Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "isValueSecret": {
                                "description": "Specified whether the value is secret.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "Header Name.",
                                "type": "string"
                              },
                              "valueSecretRef": {
                                "description": "Header Value. Created and stored in AWS Secrets Manager.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "name",
                                  "namespace"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the secret.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the secret.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "header": {
                          "description": "Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "isValueSecret": {
                                "description": "Specified whether the value is secret.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "Header Name.",
                                "type": "string"
                              },
                              "valueSecretRef": {
                                "description": "Header Value. Created and stored in AWS Secrets Manager.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "name",
                                  "namespace"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the secret.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the secret.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "queryString": {
                          "description": "Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "isValueSecret": {
                                "description": "Specified whether the value is secret.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "Header Name.",
                                "type": "string"
                              },
                              "valueSecretRef": {
                                "description": "Header Value. Created and stored in AWS Secrets Manager.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "name",
                                  "namespace"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the secret.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the secret.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "oauth": {
                    "description": "Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with basic and api_key. Documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "authorizationEndpoint": {
                          "description": "The URL to the authorization endpoint.",
                          "type": "string"
                        },
                        "clientParameters": {
                          "description": "Contains the client parameters for OAuth authorization. Contains the following two parameters.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "clientSecretSecretRef"
                            ],
                            "properties": {
                              "clientId": {
                                "description": "The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.",
                                "type": "string"
                              },
                              "clientSecretSecretRef": {
                                "description": "The client secret for the credentials to use for authorization. Created and stored in AWS Secrets Manager.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "name",
                                  "namespace"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the secret.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the secret.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "httpMethod": {
                          "description": "A password for the authorization. Created and stored in AWS Secrets Manager.",
                          "type": "string"
                        },
                        "oauthHttpParameters": {
                          "description": "OAuth Http Parameters are additional credentials used to sign the request to the authorization endpoint to exchange the OAuth Client information for an access token. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "body": {
                                "description": "Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "isValueSecret": {
                                      "description": "Specified whether the value is secret.",
                                      "type": "boolean"
                                    },
                                    "key": {
                                      "description": "Header Name.",
                                      "type": "string"
                                    },
                                    "valueSecretRef": {
                                      "description": "Header Value. Created and stored in AWS Secrets Manager.",
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "name",
                                        "namespace"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "The key to select.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the secret.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace of the secret.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "header": {
                                "description": "Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "isValueSecret": {
                                      "description": "Specified whether the value is secret.",
                                      "type": "boolean"
                                    },
                                    "key": {
                                      "description": "Header Name.",
                                      "type": "string"
                                    },
                                    "valueSecretRef": {
                                      "description": "Header Value. Created and stored in AWS Secrets Manager.",
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "name",
                                        "namespace"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "The key to select.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the secret.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace of the secret.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "queryString": {
                                "description": "Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "isValueSecret": {
                                      "description": "Specified whether the value is secret.",
                                      "type": "boolean"
                                    },
                                    "key": {
                                      "description": "Header Name.",
                                      "type": "string"
                                    },
                                    "valueSecretRef": {
                                      "description": "Header Value. Created and stored in AWS Secrets Manager.",
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "name",
                                        "namespace"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "The key to select.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the secret.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "Namespace of the secret.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "authorizationType": {
              "description": "Choose the type of authorization to use for the connection. One of API_KEY,BASIC,OAUTH_CLIENT_CREDENTIALS.",
              "type": "string"
            },
            "description": {
              "description": "Enter a description for the connection. Maximum of 512 characters.",
              "type": "string"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            }
          }
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "type": "object",
          "properties": {
            "authParameters": {
              "description": "Parameters used for authorization. A maximum of 1 are allowed. Documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "apiKey": {
                    "description": "Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with basic and oauth. Documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "Header Name.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "basic": {
                    "description": "Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with api_key and oauth. Documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "A username for the authorization.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "invocationHttpParameters": {
                    "description": "Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "body": {
                          "description": "Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "isValueSecret": {
                                "description": "Specified whether the value is secret.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "Header Name.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "header": {
                          "description": "Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "isValueSecret": {
                                "description": "Specified whether the value is secret.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "Header Name.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "queryString": {
                          "description": "Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "isValueSecret": {
                                "description": "Specified whether the value is secret.",
                                "type": "boolean"
                              },
                              "key": {
                                "description": "Header Name.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "oauth": {
                    "description": "Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with basic and api_key. Documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "authorizationEndpoint": {
                          "description": "The URL to the authorization endpoint.",
                          "type": "string"
                        },
                        "clientParameters": {
                          "description": "Contains the client parameters for OAuth authorization. Contains the following two parameters.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "clientId": {
                                "description": "The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "httpMethod": {
                          "description": "A password for the authorization. Created and stored in AWS Secrets Manager.",
                          "type": "string"
                        },
                        "oauthHttpParameters": {
                          "description": "OAuth Http Parameters are additional credentials used to sign the request to the authorization endpoint to exchange the OAuth Client information for an access token. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "body": {
                                "description": "Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "isValueSecret": {
                                      "description": "Specified whether the value is secret.",
                                      "type": "boolean"
                                    },
                                    "key": {
                                      "description": "Header Name.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "header": {
                                "description": "Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "isValueSecret": {
                                      "description": "Specified whether the value is secret.",
                                      "type": "boolean"
                                    },
                                    "key": {
                                      "description": "Header Name.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "queryString": {
                                "description": "Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "isValueSecret": {
                                      "description": "Specified whether the value is secret.",
                                      "type": "boolean"
                                    },
                                    "key": {
                                      "description": "Header Name.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "authorizationType": {
              "description": "Choose the type of authorization to use for the connection. One of API_KEY,BASIC,OAUTH_CLIENT_CREDENTIALS.",
              "type": "string"
            },
            "description": {
              "description": "Enter a description for the connection. Maximum of 512 characters.",
              "type": "string"
            }
          }
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              }
            }
          }
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              }
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          }
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          }
        }
      },
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.authParameters) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.authParameters))",
          "message": "spec.forProvider.authParameters is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.authorizationType) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.authorizationType))",
          "message": "spec.forProvider.authorizationType is a required parameter"
        }
      ]
    }
  }
}