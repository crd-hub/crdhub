{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "orders.releases.x-helm.dev",
    "creationTimestamp": null
  },
  "spec": {
    "group": "releases.x-helm.dev",
    "names": {
      "plural": "orders",
      "singular": "order",
      "kind": "Order",
      "listKind": "OrderList"
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1alpha1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "Order is the Schema for the orders API",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "type": "object",
                "required": [
                  "items"
                ],
                "properties": {
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "chart": {
                          "type": "object",
                          "required": [
                            "name",
                            "namespace",
                            "releaseName",
                            "sourceRef",
                            "version"
                          ],
                          "properties": {
                            "bundle": {
                              "description": "Bundle points to the parent bundle which was used to install this, if any. If the chart was installed directly it will be unset.",
                              "type": "object",
                              "required": [
                                "name",
                                "sourceRef",
                                "version"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "sourceRef": {
                                  "description": "TypedObjectReference represents an typed namespaced object.",
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "apiGroup": {
                                      "type": "string"
                                    },
                                    "kind": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                      "type": "string"
                                    }
                                  }
                                },
                                "version": {
                                  "type": "string"
                                }
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "namespace": {
                              "type": "string"
                            },
                            "releaseName": {
                              "type": "string"
                            },
                            "resources": {
                              "type": "object",
                              "required": [
                                "owned",
                                "required"
                              ],
                              "properties": {
                                "owned": {
                                  "type": "array",
                                  "items": {
                                    "description": "GroupVersionResource unambiguously identifies a resource.  It doesn't anonymously include GroupVersion to avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling",
                                    "type": "object",
                                    "required": [
                                      "group",
                                      "resource",
                                      "version"
                                    ],
                                    "properties": {
                                      "group": {
                                        "type": "string"
                                      },
                                      "resource": {
                                        "type": "string"
                                      },
                                      "version": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "required": {
                                  "type": "array",
                                  "items": {
                                    "description": "GroupVersionResource unambiguously identifies a resource.  It doesn't anonymously include GroupVersion to avoid automatic coercion.  It doesn't use a GroupVersion to avoid custom marshalling",
                                    "type": "object",
                                    "required": [
                                      "group",
                                      "resource",
                                      "version"
                                    ],
                                    "properties": {
                                      "group": {
                                        "type": "string"
                                      },
                                      "resource": {
                                        "type": "string"
                                      },
                                      "version": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "sourceRef": {
                              "description": "TypedObjectReference represents an typed namespaced object.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "apiGroup": {
                                  "type": "string"
                                },
                                "kind": {
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                  "type": "string"
                                }
                              }
                            },
                            "valuesFile": {
                              "type": "string"
                            },
                            "valuesPatch": {
                              "description": "RFC 6902 compatible json patch. ref: http://jsonpatch.com",
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "version": {
                              "type": "string"
                            },
                            "waitFors": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "all",
                                  "for",
                                  "labels",
                                  "resource",
                                  "timeout"
                                ],
                                "properties": {
                                  "all": {
                                    "type": "boolean"
                                  },
                                  "for": {
                                    "type": "string"
                                  },
                                  "labels": {
                                    "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                    "type": "object",
                                    "properties": {
                                      "matchExpressions": {
                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                        "type": "array",
                                        "items": {
                                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                          "type": "object",
                                          "required": [
                                            "key",
                                            "operator"
                                          ],
                                          "properties": {
                                            "key": {
                                              "description": "key is the label key that the selector applies to.",
                                              "type": "string"
                                            },
                                            "operator": {
                                              "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                              "type": "string"
                                            },
                                            "values": {
                                              "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                              "type": "array",
                                              "items": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "matchLabels": {
                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "resource": {
                                    "description": "GroupResource specifies a Group and a Resource, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types",
                                    "type": "object",
                                    "required": [
                                      "group",
                                      "resource"
                                    ],
                                    "properties": {
                                      "group": {
                                        "type": "string"
                                      },
                                      "resource": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "timeout": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "kubeVersion": {
                    "description": "KubeVersion is a SemVer constraint specifying the version of Kubernetes required.",
                    "type": "string"
                  }
                }
              },
              "status": {
                "type": "object",
                "properties": {
                  "observedGeneration": {
                    "description": "ObservedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        }
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}