{
  "$schema": "http://json-schema.org/schema#",
  "description": "MetricAlarm is the Schema for the MetricAlarms API. Provides a CloudWatch Metric Alarm resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "cloudwatch.aws.upbound.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "MetricAlarm"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "MetricAlarmSpec defines the desired state of MetricAlarm",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "actionsEnabled": {
              "description": "Indicates whether or not actions should be executed during any changes to the alarm's state. Defaults to true.",
              "type": "boolean"
            },
            "alarmActions": {
              "description": "The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alarmDescription": {
              "description": "The description for the alarm.",
              "type": "string"
            },
            "comparisonOperator": {
              "description": "The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: GreaterThanOrEqualToThreshold, GreaterThanThreshold, LessThanThreshold, LessThanOrEqualToThreshold. Additionally, the values  LessThanLowerOrGreaterThanUpperThreshold, LessThanLowerThreshold, and GreaterThanUpperThreshold are used only for alarms based on anomaly detection models.",
              "type": "string"
            },
            "datapointsToAlarm": {
              "description": "The number of datapoints that must be breaching to trigger the alarm.",
              "type": "number"
            },
            "dimensions": {
              "description": "The dimensions for the alarm's associated metric.  For the list of available dimensions see the AWS documentation here.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "evaluateLowSampleCountPercentiles": {
              "description": "Used only for alarms based on percentiles. If you specify ignore, the alarm state will not change during periods with too few data points to be statistically significant. If you specify evaluate or omit this parameter, the alarm will always be evaluated and possibly change state no matter how many data points are available. The following values are supported: ignore, and evaluate.",
              "type": "string"
            },
            "evaluationPeriods": {
              "description": "The number of periods over which data is compared to the specified threshold.",
              "type": "number"
            },
            "extendedStatistic": {
              "description": "The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.",
              "type": "string"
            },
            "insufficientDataActions": {
              "description": "The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "metricName": {
              "description": "The name for the alarm's associated metric. See docs for supported metrics.",
              "type": "string"
            },
            "metricQuery": {
              "description": "Enables you to create an alarm based on a metric math expression. You may specify at most 20.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "description": "The ID of the account where the metrics are located, if this is a cross-account alarm.",
                    "type": "string"
                  },
                  "expression": {
                    "description": "The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the id of the other metrics to refer to those metrics, and can also use the id of other expressions to use the result of those expressions. For more information about metric math expressions, see Metric Math Syntax and Functions in the Amazon CloudWatch User Guide.",
                    "type": "string"
                  },
                  "id": {
                    "description": "A short name used to tie this object to the results in the response. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.",
                    "type": "string"
                  },
                  "label": {
                    "description": "A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents.",
                    "type": "string"
                  },
                  "metric": {
                    "description": "The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dimensions": {
                          "description": "The dimensions for this metric.  For the list of available dimensions see the AWS documentation here.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "metricName": {
                          "description": "The name for this metric. See docs for supported metrics.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "The namespace for this metric. See docs for the list of namespaces. See docs for supported metrics.",
                          "type": "string"
                        },
                        "period": {
                          "description": "Granularity in seconds of returned data points. For metrics with regular resolution, valid values are any multiple of 60. For high-resolution metrics, valid values are 1, 5, 10, 30, or any multiple of 60.",
                          "type": "number"
                        },
                        "stat": {
                          "description": "The statistic to apply to this metric. See docs for supported statistics.",
                          "type": "string"
                        },
                        "unit": {
                          "description": "The unit for this metric.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "period": {
                    "description": "Granularity in seconds of returned data points. For metrics with regular resolution, valid values are any multiple of 60. For high-resolution metrics, valid values are 1, 5, 10, 30, or any multiple of 60.",
                    "type": "number"
                  },
                  "returnData": {
                    "description": "Specify exactly one metric_query to be true to use that metric_query result as the alarm.",
                    "type": "boolean"
                  }
                }
              }
            },
            "namespace": {
              "description": "The namespace for the alarm's associated metric. See docs for the list of namespaces. See docs for supported metrics.",
              "type": "string"
            },
            "okActions": {
              "description": "The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "period": {
              "description": "The period in seconds over which the specified statistic is applied. Valid values are 10, 30, or any multiple of 60.",
              "type": "number"
            },
            "region": {
              "description": "Region is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "statistic": {
              "description": "The statistic to apply to the alarm's associated metric. Either of the following is supported: SampleCount, Average, Sum, Minimum, Maximum",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "threshold": {
              "description": "The value against which the specified statistic is compared. This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.",
              "type": "number"
            },
            "thresholdMetricId": {
              "description": "If this is an alarm based on an anomaly detection model, make this value match the ID of the ANOMALY_DETECTION_BAND function.",
              "type": "string"
            },
            "treatMissingData": {
              "description": "Sets how this alarm is to handle missing data points. The following values are supported: missing, ignore, breaching and notBreaching. Defaults to missing.",
              "type": "string"
            },
            "unit": {
              "description": "The unit for the alarm's associated metric.",
              "type": "string"
            }
          }
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "type": "object",
          "properties": {
            "actionsEnabled": {
              "description": "Indicates whether or not actions should be executed during any changes to the alarm's state. Defaults to true.",
              "type": "boolean"
            },
            "alarmActions": {
              "description": "The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Name (ARN).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "alarmDescription": {
              "description": "The description for the alarm.",
              "type": "string"
            },
            "comparisonOperator": {
              "description": "The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: GreaterThanOrEqualToThreshold, GreaterThanThreshold, LessThanThreshold, LessThanOrEqualToThreshold. Additionally, the values  LessThanLowerOrGreaterThanUpperThreshold, LessThanLowerThreshold, and GreaterThanUpperThreshold are used only for alarms based on anomaly detection models.",
              "type": "string"
            },
            "datapointsToAlarm": {
              "description": "The number of datapoints that must be breaching to trigger the alarm.",
              "type": "number"
            },
            "dimensions": {
              "description": "The dimensions for the alarm's associated metric.  For the list of available dimensions see the AWS documentation here.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "evaluateLowSampleCountPercentiles": {
              "description": "Used only for alarms based on percentiles. If you specify ignore, the alarm state will not change during periods with too few data points to be statistically significant. If you specify evaluate or omit this parameter, the alarm will always be evaluated and possibly change state no matter how many data points are available. The following values are supported: ignore, and evaluate.",
              "type": "string"
            },
            "evaluationPeriods": {
              "description": "The number of periods over which data is compared to the specified threshold.",
              "type": "number"
            },
            "extendedStatistic": {
              "description": "The percentile statistic for the metric associated with the alarm. Specify a value between p0.0 and p100.",
              "type": "string"
            },
            "insufficientDataActions": {
              "description": "The list of actions to execute when this alarm transitions into an INSUFFICIENT_DATA state from any other state. Each action is specified as an Amazon Resource Name (ARN).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "metricName": {
              "description": "The name for the alarm's associated metric. See docs for supported metrics.",
              "type": "string"
            },
            "metricQuery": {
              "description": "Enables you to create an alarm based on a metric math expression. You may specify at most 20.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accountId": {
                    "description": "The ID of the account where the metrics are located, if this is a cross-account alarm.",
                    "type": "string"
                  },
                  "expression": {
                    "description": "The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the id of the other metrics to refer to those metrics, and can also use the id of other expressions to use the result of those expressions. For more information about metric math expressions, see Metric Math Syntax and Functions in the Amazon CloudWatch User Guide.",
                    "type": "string"
                  },
                  "id": {
                    "description": "A short name used to tie this object to the results in the response. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.",
                    "type": "string"
                  },
                  "label": {
                    "description": "A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents.",
                    "type": "string"
                  },
                  "metric": {
                    "description": "The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dimensions": {
                          "description": "The dimensions for this metric.  For the list of available dimensions see the AWS documentation here.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "metricName": {
                          "description": "The name for this metric. See docs for supported metrics.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "The namespace for this metric. See docs for the list of namespaces. See docs for supported metrics.",
                          "type": "string"
                        },
                        "period": {
                          "description": "Granularity in seconds of returned data points. For metrics with regular resolution, valid values are any multiple of 60. For high-resolution metrics, valid values are 1, 5, 10, 30, or any multiple of 60.",
                          "type": "number"
                        },
                        "stat": {
                          "description": "The statistic to apply to this metric. See docs for supported statistics.",
                          "type": "string"
                        },
                        "unit": {
                          "description": "The unit for this metric.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "period": {
                    "description": "Granularity in seconds of returned data points. For metrics with regular resolution, valid values are any multiple of 60. For high-resolution metrics, valid values are 1, 5, 10, 30, or any multiple of 60.",
                    "type": "number"
                  },
                  "returnData": {
                    "description": "Specify exactly one metric_query to be true to use that metric_query result as the alarm.",
                    "type": "boolean"
                  }
                }
              }
            },
            "namespace": {
              "description": "The namespace for the alarm's associated metric. See docs for the list of namespaces. See docs for supported metrics.",
              "type": "string"
            },
            "okActions": {
              "description": "The list of actions to execute when this alarm transitions into an OK state from any other state. Each action is specified as an Amazon Resource Name (ARN).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "period": {
              "description": "The period in seconds over which the specified statistic is applied. Valid values are 10, 30, or any multiple of 60.",
              "type": "number"
            },
            "statistic": {
              "description": "The statistic to apply to the alarm's associated metric. Either of the following is supported: SampleCount, Average, Sum, Minimum, Maximum",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "threshold": {
              "description": "The value against which the specified statistic is compared. This parameter is required for alarms based on static thresholds, but should not be used for alarms based on anomaly detection models.",
              "type": "number"
            },
            "thresholdMetricId": {
              "description": "If this is an alarm based on an anomaly detection model, make this value match the ID of the ANOMALY_DETECTION_BAND function.",
              "type": "string"
            },
            "treatMissingData": {
              "description": "Sets how this alarm is to handle missing data points. The following values are supported: missing, ignore, breaching and notBreaching. Defaults to missing.",
              "type": "string"
            },
            "unit": {
              "description": "The unit for the alarm's associated metric.",
              "type": "string"
            }
          }
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              }
            }
          }
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              }
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          }
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          }
        }
      },
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.comparisonOperator) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.comparisonOperator))",
          "message": "spec.forProvider.comparisonOperator is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.evaluationPeriods) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.evaluationPeriods))",
          "message": "spec.forProvider.evaluationPeriods is a required parameter"
        }
      ]
    }
  }
}