{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "providerconfigs.gcp.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "gcp.upbound.io",
    "names": {
      "plural": "providerconfigs",
      "singular": "providerconfig",
      "kind": "ProviderConfig",
      "listKind": "ProviderConfigList",
      "categories": [
        "crossplane",
        "providerconfig",
        "gcp"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "A ProviderConfig configures a GCP provider.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "A ProviderConfigSpec defines the desired state of a ProviderConfig.",
                "type": "object",
                "required": [
                  "credentials",
                  "projectID"
                ],
                "properties": {
                  "credentials": {
                    "description": "Credentials required to authenticate to this provider.",
                    "type": "object",
                    "required": [
                      "source"
                    ],
                    "properties": {
                      "env": {
                        "description": "Env is a reference to an environment variable that contains credentials that must be used to connect to the provider.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name is the name of an environment variable.",
                            "type": "string"
                          }
                        }
                      },
                      "fs": {
                        "description": "Fs is a reference to a filesystem location that contains credentials that must be used to connect to the provider.",
                        "type": "object",
                        "required": [
                          "path"
                        ],
                        "properties": {
                          "path": {
                            "description": "Path is a filesystem path.",
                            "type": "string"
                          }
                        }
                      },
                      "impersonateServiceAccount": {
                        "description": "Use GCP service account impersonation for authentication.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "GCP service account email address",
                            "type": "string"
                          }
                        }
                      },
                      "secretRef": {
                        "description": "A SecretRef is a reference to a secret key that contains the credentials that must be used to connect to the provider.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        }
                      },
                      "source": {
                        "description": "Source of the provider credentials.",
                        "type": "string",
                        "enum": [
                          "None",
                          "Secret",
                          "AccessToken",
                          "ImpersonateServiceAccount",
                          "InjectedIdentity",
                          "Environment",
                          "Filesystem",
                          "Upbound"
                        ]
                      },
                      "upbound": {
                        "description": "Upbound defines the options for authenticating using Upbound as an identity provider.",
                        "type": "object",
                        "properties": {
                          "federation": {
                            "description": "Federation is the configuration for federated identity.",
                            "type": "object",
                            "required": [
                              "providerID",
                              "serviceAccount"
                            ],
                            "properties": {
                              "providerID": {
                                "description": "ProviderID is the fully-qualified identifier for the identity provider on GCP. The format is `projects/\u003cproject-id\u003e/locations/global/workloadIdentityPools/\u003cidentity-pool\u003e/providers/\u003cidentity-provider\u003e`.",
                                "type": "string",
                                "minLength": 1
                              },
                              "serviceAccount": {
                                "description": "ServiceAccount is the email address for the attached service account.",
                                "type": "string",
                                "minLength": 1
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "projectID": {
                    "description": "ProjectID is the project name (not numerical ID) of this GCP ProviderConfig.",
                    "type": "string"
                  }
                }
              },
              "status": {
                "description": "A ProviderConfigStatus reflects the observed state of a ProviderConfig.",
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "users": {
                    "description": "Users of this provider configuration.",
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          },
          {
            "name": "SECRET-NAME",
            "type": "string",
            "priority": 1,
            "jsonPath": ".spec.credentials.secretRef.name"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}