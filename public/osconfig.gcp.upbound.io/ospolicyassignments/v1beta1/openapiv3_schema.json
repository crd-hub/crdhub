{
  "$schema": "http://json-schema.org/schema#",
  "description": "OsPolicyAssignment is the Schema for the OsPolicyAssignments API.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "osconfig.gcp.upbound.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "OsPolicyAssignment"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "OsPolicyAssignmentSpec defines the desired state of OsPolicyAssignment",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "location"
          ],
          "properties": {
            "description": {
              "description": "Policy description. Length of the description is limited to 1024 characters.",
              "type": "string"
            },
            "instanceFilter": {
              "description": "Filter to select VMs. Structure is documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "all": {
                    "description": "Target all VMs in the project. If true, no other criteria is permitted.",
                    "type": "boolean"
                  },
                  "exclusionLabels": {
                    "description": "List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM. Structure is documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "description": "Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "inclusionLabels": {
                    "description": "List of label sets used for VM inclusion. If the list has more than one LabelSet, the VM is included if any of the label sets are applicable for the VM. Structure is documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "description": "Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "inventories": {
                    "description": "List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories. Structure is documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "osShortName": {
                          "description": "The OS short name",
                          "type": "string"
                        },
                        "osVersion": {
                          "description": "The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of 7, specify the following value for this field 7.* An empty string matches all OS versions.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "location": {
              "description": "The location for the resource",
              "type": "string"
            },
            "osPolicies": {
              "description": "List of OS policies to be applied to the VMs. Structure is documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowNoResourceGroupMatch": {
                    "description": "This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to true if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "Policy description. Length of the description is limited to 1024 characters.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The id of the OS policy with the following restrictions:",
                    "type": "string"
                  },
                  "mode": {
                    "description": "Policy mode Possible values are: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT.",
                    "type": "string"
                  },
                  "resourceGroups": {
                    "description": "List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag allow_no_resource_group_match Structure is documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "inventoryFilters": {
                          "description": "List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either RHEL or CentOS operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name='rhel' and inventory_filters[1].os_short_name='centos' If the list is empty, this resource group will be applied to the target VM unconditionally. Structure is documented below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "osShortName": {
                                "description": "The OS short name",
                                "type": "string"
                              },
                              "osVersion": {
                                "description": "The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of 7, specify the following value for this field 7.* An empty string matches all OS versions.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resources": {
                          "description": "List of resources configured for this resource group. The resources are executed in the exact order specified here. Structure is documented below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "description": "Exec resource Structure is documented below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "enforce": {
                                      "description": "What to run to bring this resource into the desired state. An exit code of 100 indicates \"success\", any other exit code indicates a failure running enforce. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "args": {
                                            "description": "Optional arguments to pass to the source during execution.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "file": {
                                            "description": "A remote or local file. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "allowInsecure": {
                                                  "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                                  "type": "boolean"
                                                },
                                                "gcs": {
                                                  "description": "A Cloud Storage object. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "bucket": {
                                                        "description": "Bucket of the Cloud Storage object.",
                                                        "type": "string"
                                                      },
                                                      "generation": {
                                                        "description": "Generation number of the Cloud Storage object.",
                                                        "type": "number"
                                                      },
                                                      "object": {
                                                        "description": "Name of the Cloud Storage object.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "localPath": {
                                                  "description": "A local path within the VM to use.",
                                                  "type": "string"
                                                },
                                                "remote": {
                                                  "description": "A generic remote file. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sha256Checksum": {
                                                        "description": "SHA256 checksum of the remote file.",
                                                        "type": "string"
                                                      },
                                                      "uri": {
                                                        "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "interpreter": {
                                            "description": "The script interpreter to use. Possible values are: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL.",
                                            "type": "string"
                                          },
                                          "outputFilePath": {
                                            "description": "Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.",
                                            "type": "string"
                                          },
                                          "script": {
                                            "description": "An inline script. The size of the script is limited to 1024 characters.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "validate": {
                                      "description": "What to run to validate this resource is in the desired state. An exit code of 100 indicates \"in desired state\", and exit code of 101 indicates \"not in desired state\". Any other exit code indicates a failure running validate. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "args": {
                                            "description": "Optional arguments to pass to the source during execution.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "file": {
                                            "description": "A remote or local file. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "allowInsecure": {
                                                  "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                                  "type": "boolean"
                                                },
                                                "gcs": {
                                                  "description": "A Cloud Storage object. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "bucket": {
                                                        "description": "Bucket of the Cloud Storage object.",
                                                        "type": "string"
                                                      },
                                                      "generation": {
                                                        "description": "Generation number of the Cloud Storage object.",
                                                        "type": "number"
                                                      },
                                                      "object": {
                                                        "description": "Name of the Cloud Storage object.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "localPath": {
                                                  "description": "A local path within the VM to use.",
                                                  "type": "string"
                                                },
                                                "remote": {
                                                  "description": "A generic remote file. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sha256Checksum": {
                                                        "description": "SHA256 checksum of the remote file.",
                                                        "type": "string"
                                                      },
                                                      "uri": {
                                                        "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "interpreter": {
                                            "description": "The script interpreter to use. Possible values are: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL.",
                                            "type": "string"
                                          },
                                          "outputFilePath": {
                                            "description": "Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.",
                                            "type": "string"
                                          },
                                          "script": {
                                            "description": "An inline script. The size of the script is limited to 1024 characters.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "file": {
                                "description": "A remote or local file. Structure is documented below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "content": {
                                      "description": "A a file with this content. The size of the content is limited to 1024 characters.",
                                      "type": "string"
                                    },
                                    "file": {
                                      "description": "A remote or local file. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "allowInsecure": {
                                            "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                            "type": "boolean"
                                          },
                                          "gcs": {
                                            "description": "A Cloud Storage object. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "bucket": {
                                                  "description": "Bucket of the Cloud Storage object.",
                                                  "type": "string"
                                                },
                                                "generation": {
                                                  "description": "Generation number of the Cloud Storage object.",
                                                  "type": "number"
                                                },
                                                "object": {
                                                  "description": "Name of the Cloud Storage object.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "localPath": {
                                            "description": "A local path within the VM to use.",
                                            "type": "string"
                                          },
                                          "remote": {
                                            "description": "A generic remote file. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "sha256Checksum": {
                                                  "description": "SHA256 checksum of the remote file.",
                                                  "type": "string"
                                                },
                                                "uri": {
                                                  "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "path": {
                                      "description": "The absolute path of the file within the VM.",
                                      "type": "string"
                                    },
                                    "state": {
                                      "description": "Desired state of the file. Possible values are: DESIRED_STATE_UNSPECIFIED, PRESENT, ABSENT, CONTENTS_MATCH.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "id": {
                                "description": "A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.",
                                "type": "string"
                              },
                              "pkg": {
                                "description": "Package resource Structure is documented below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "apt": {
                                      "description": "An Apt Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Package name.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "deb": {
                                      "description": "A deb package file. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "pullDeps": {
                                            "description": "Whether dependencies should also be installed. - install when false: rpm --upgrade --replacepkgs package.rpm - install when true: yum -y install package.rpm or zypper -y install package.rpm",
                                            "type": "boolean"
                                          },
                                          "source": {
                                            "description": "An rpm package. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "allowInsecure": {
                                                  "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                                  "type": "boolean"
                                                },
                                                "gcs": {
                                                  "description": "A Cloud Storage object. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "bucket": {
                                                        "description": "Bucket of the Cloud Storage object.",
                                                        "type": "string"
                                                      },
                                                      "generation": {
                                                        "description": "Generation number of the Cloud Storage object.",
                                                        "type": "number"
                                                      },
                                                      "object": {
                                                        "description": "Name of the Cloud Storage object.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "localPath": {
                                                  "description": "A local path within the VM to use.",
                                                  "type": "string"
                                                },
                                                "remote": {
                                                  "description": "A generic remote file. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sha256Checksum": {
                                                        "description": "SHA256 checksum of the remote file.",
                                                        "type": "string"
                                                      },
                                                      "uri": {
                                                        "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "desiredState": {
                                      "description": "The desired state the agent should maintain for this package. Possible values are: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED.",
                                      "type": "string"
                                    },
                                    "googet": {
                                      "description": "A package managed by GooGet. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Package name.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "msi": {
                                      "description": "An MSI package. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "properties": {
                                            "description": "Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of ACTION=INSTALL REBOOT=ReallySuppress.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "source": {
                                            "description": "An rpm package. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "allowInsecure": {
                                                  "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                                  "type": "boolean"
                                                },
                                                "gcs": {
                                                  "description": "A Cloud Storage object. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "bucket": {
                                                        "description": "Bucket of the Cloud Storage object.",
                                                        "type": "string"
                                                      },
                                                      "generation": {
                                                        "description": "Generation number of the Cloud Storage object.",
                                                        "type": "number"
                                                      },
                                                      "object": {
                                                        "description": "Name of the Cloud Storage object.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "localPath": {
                                                  "description": "A local path within the VM to use.",
                                                  "type": "string"
                                                },
                                                "remote": {
                                                  "description": "A generic remote file. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sha256Checksum": {
                                                        "description": "SHA256 checksum of the remote file.",
                                                        "type": "string"
                                                      },
                                                      "uri": {
                                                        "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rpm": {
                                      "description": "An rpm package file. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "pullDeps": {
                                            "description": "Whether dependencies should also be installed. - install when false: rpm --upgrade --replacepkgs package.rpm - install when true: yum -y install package.rpm or zypper -y install package.rpm",
                                            "type": "boolean"
                                          },
                                          "source": {
                                            "description": "An rpm package. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "allowInsecure": {
                                                  "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                                  "type": "boolean"
                                                },
                                                "gcs": {
                                                  "description": "A Cloud Storage object. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "bucket": {
                                                        "description": "Bucket of the Cloud Storage object.",
                                                        "type": "string"
                                                      },
                                                      "generation": {
                                                        "description": "Generation number of the Cloud Storage object.",
                                                        "type": "number"
                                                      },
                                                      "object": {
                                                        "description": "Name of the Cloud Storage object.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "localPath": {
                                                  "description": "A local path within the VM to use.",
                                                  "type": "string"
                                                },
                                                "remote": {
                                                  "description": "A generic remote file. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sha256Checksum": {
                                                        "description": "SHA256 checksum of the remote file.",
                                                        "type": "string"
                                                      },
                                                      "uri": {
                                                        "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "yum": {
                                      "description": "A Yum Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Package name.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "zypper": {
                                      "description": "A Zypper Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Package name.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "repository": {
                                "description": "Package repository resource Structure is documented below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "apt": {
                                      "description": "An Apt Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "archiveType": {
                                            "description": "Type of archive files in this repository. Possible values are: ARCHIVE_TYPE_UNSPECIFIED, DEB, DEB_SRC.",
                                            "type": "string"
                                          },
                                          "components": {
                                            "description": "List of components for this repository. Must contain at least one item.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "distribution": {
                                            "description": "Distribution of this repository.",
                                            "type": "string"
                                          },
                                          "gpgKey": {
                                            "description": "URI of the key file for this repository. The agent maintains a keyring at /etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg.",
                                            "type": "string"
                                          },
                                          "uri": {
                                            "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "goo": {
                                      "description": "A Goo Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Package name.",
                                            "type": "string"
                                          },
                                          "url": {
                                            "description": "The url of the repository.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "yum": {
                                      "description": "A Yum Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "baseUrl": {
                                            "description": "The location of the repository directory.",
                                            "type": "string"
                                          },
                                          "displayName": {
                                            "description": "The display name of the repository.",
                                            "type": "string"
                                          },
                                          "gpgKeys": {
                                            "description": "URIs of GPG keys.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "id": {
                                            "description": "A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "zypper": {
                                      "description": "A Zypper Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "baseUrl": {
                                            "description": "The location of the repository directory.",
                                            "type": "string"
                                          },
                                          "displayName": {
                                            "description": "The display name of the repository.",
                                            "type": "string"
                                          },
                                          "gpgKeys": {
                                            "description": "URIs of GPG keys.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "id": {
                                            "description": "A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "project": {
              "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
              "type": "string"
            },
            "rollout": {
              "description": "Rollout to deploy the OS policy assignment. A rollout is triggered in the following situations: 1) OSPolicyAssignment is created. 2) OSPolicyAssignment is updated and the update contains changes to one of the following fields: - instance_filter - os_policies 3) OSPolicyAssignment is deleted. Structure is documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "disruptionBudget": {
                    "description": "The maximum number (or percentage) of VMs per zone to disrupt at any given moment. Structure is documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fixed": {
                          "description": "Specifies a fixed value.",
                          "type": "number"
                        },
                        "percent": {
                          "description": "Specifies the relative value defined as a percentage, which will be multiplied by a reference value.",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "minWaitDuration": {
                    "description": "This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the disruption_budget at least until this duration of time has passed after configuration changes are applied.",
                    "type": "string"
                  }
                }
              }
            },
            "skipAwaitRollout": {
              "description": "Set to true to skip awaiting rollout during resource creation and update.",
              "type": "boolean"
            }
          }
        },
        "initProvider": {
          "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "type": "object",
          "properties": {
            "description": {
              "description": "Policy description. Length of the description is limited to 1024 characters.",
              "type": "string"
            },
            "instanceFilter": {
              "description": "Filter to select VMs. Structure is documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "all": {
                    "description": "Target all VMs in the project. If true, no other criteria is permitted.",
                    "type": "boolean"
                  },
                  "exclusionLabels": {
                    "description": "List of label sets used for VM exclusion. If the list has more than one label set, the VM is excluded if any of the label sets are applicable for the VM. Structure is documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "description": "Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "inclusionLabels": {
                    "description": "List of label sets used for VM inclusion. If the list has more than one LabelSet, the VM is included if any of the label sets are applicable for the VM. Structure is documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "description": "Labels are identified by key/value pairs in this map. A VM should contain all the key/value pairs specified in this map to be selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "inventories": {
                    "description": "List of inventories to select VMs. A VM is selected if its inventory data matches at least one of the following inventories. Structure is documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "osShortName": {
                          "description": "The OS short name",
                          "type": "string"
                        },
                        "osVersion": {
                          "description": "The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of 7, specify the following value for this field 7.* An empty string matches all OS versions.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "osPolicies": {
              "description": "List of OS policies to be applied to the VMs. Structure is documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowNoResourceGroupMatch": {
                    "description": "This flag determines the OS policy compliance status when none of the resource groups within the policy are applicable for a VM. Set this value to true if the policy needs to be reported as compliant even if the policy has nothing to validate or enforce.",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "Policy description. Length of the description is limited to 1024 characters.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The id of the OS policy with the following restrictions:",
                    "type": "string"
                  },
                  "mode": {
                    "description": "Policy mode Possible values are: MODE_UNSPECIFIED, VALIDATION, ENFORCEMENT.",
                    "type": "string"
                  },
                  "resourceGroups": {
                    "description": "List of resource groups for the policy. For a particular VM, resource groups are evaluated in the order specified and the first resource group that is applicable is selected and the rest are ignored. If none of the resource groups are applicable for a VM, the VM is considered to be non-compliant w.r.t this policy. This behavior can be toggled by the flag allow_no_resource_group_match Structure is documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "inventoryFilters": {
                          "description": "List of inventory filters for the resource group. The resources in this resource group are applied to the target VM if it satisfies at least one of the following inventory filters. For example, to apply this resource group to VMs running either RHEL or CentOS operating systems, specify 2 items for the list with following values: inventory_filters[0].os_short_name='rhel' and inventory_filters[1].os_short_name='centos' If the list is empty, this resource group will be applied to the target VM unconditionally. Structure is documented below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "osShortName": {
                                "description": "The OS short name",
                                "type": "string"
                              },
                              "osVersion": {
                                "description": "The OS version Prefix matches are supported if asterisk(*) is provided as the last character. For example, to match all versions with a major version of 7, specify the following value for this field 7.* An empty string matches all OS versions.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "resources": {
                          "description": "List of resources configured for this resource group. The resources are executed in the exact order specified here. Structure is documented below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "exec": {
                                "description": "Exec resource Structure is documented below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "enforce": {
                                      "description": "What to run to bring this resource into the desired state. An exit code of 100 indicates \"success\", any other exit code indicates a failure running enforce. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "args": {
                                            "description": "Optional arguments to pass to the source during execution.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "file": {
                                            "description": "A remote or local file. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "allowInsecure": {
                                                  "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                                  "type": "boolean"
                                                },
                                                "gcs": {
                                                  "description": "A Cloud Storage object. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "bucket": {
                                                        "description": "Bucket of the Cloud Storage object.",
                                                        "type": "string"
                                                      },
                                                      "generation": {
                                                        "description": "Generation number of the Cloud Storage object.",
                                                        "type": "number"
                                                      },
                                                      "object": {
                                                        "description": "Name of the Cloud Storage object.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "localPath": {
                                                  "description": "A local path within the VM to use.",
                                                  "type": "string"
                                                },
                                                "remote": {
                                                  "description": "A generic remote file. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sha256Checksum": {
                                                        "description": "SHA256 checksum of the remote file.",
                                                        "type": "string"
                                                      },
                                                      "uri": {
                                                        "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "interpreter": {
                                            "description": "The script interpreter to use. Possible values are: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL.",
                                            "type": "string"
                                          },
                                          "outputFilePath": {
                                            "description": "Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.",
                                            "type": "string"
                                          },
                                          "script": {
                                            "description": "An inline script. The size of the script is limited to 1024 characters.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "validate": {
                                      "description": "What to run to validate this resource is in the desired state. An exit code of 100 indicates \"in desired state\", and exit code of 101 indicates \"not in desired state\". Any other exit code indicates a failure running validate. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "args": {
                                            "description": "Optional arguments to pass to the source during execution.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "file": {
                                            "description": "A remote or local file. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "allowInsecure": {
                                                  "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                                  "type": "boolean"
                                                },
                                                "gcs": {
                                                  "description": "A Cloud Storage object. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "bucket": {
                                                        "description": "Bucket of the Cloud Storage object.",
                                                        "type": "string"
                                                      },
                                                      "generation": {
                                                        "description": "Generation number of the Cloud Storage object.",
                                                        "type": "number"
                                                      },
                                                      "object": {
                                                        "description": "Name of the Cloud Storage object.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "localPath": {
                                                  "description": "A local path within the VM to use.",
                                                  "type": "string"
                                                },
                                                "remote": {
                                                  "description": "A generic remote file. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sha256Checksum": {
                                                        "description": "SHA256 checksum of the remote file.",
                                                        "type": "string"
                                                      },
                                                      "uri": {
                                                        "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "interpreter": {
                                            "description": "The script interpreter to use. Possible values are: INTERPRETER_UNSPECIFIED, NONE, SHELL, POWERSHELL.",
                                            "type": "string"
                                          },
                                          "outputFilePath": {
                                            "description": "Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes.",
                                            "type": "string"
                                          },
                                          "script": {
                                            "description": "An inline script. The size of the script is limited to 1024 characters.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "file": {
                                "description": "A remote or local file. Structure is documented below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "content": {
                                      "description": "A a file with this content. The size of the content is limited to 1024 characters.",
                                      "type": "string"
                                    },
                                    "file": {
                                      "description": "A remote or local file. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "allowInsecure": {
                                            "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                            "type": "boolean"
                                          },
                                          "gcs": {
                                            "description": "A Cloud Storage object. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "bucket": {
                                                  "description": "Bucket of the Cloud Storage object.",
                                                  "type": "string"
                                                },
                                                "generation": {
                                                  "description": "Generation number of the Cloud Storage object.",
                                                  "type": "number"
                                                },
                                                "object": {
                                                  "description": "Name of the Cloud Storage object.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "localPath": {
                                            "description": "A local path within the VM to use.",
                                            "type": "string"
                                          },
                                          "remote": {
                                            "description": "A generic remote file. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "sha256Checksum": {
                                                  "description": "SHA256 checksum of the remote file.",
                                                  "type": "string"
                                                },
                                                "uri": {
                                                  "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "path": {
                                      "description": "The absolute path of the file within the VM.",
                                      "type": "string"
                                    },
                                    "state": {
                                      "description": "Desired state of the file. Possible values are: DESIRED_STATE_UNSPECIFIED, PRESENT, ABSENT, CONTENTS_MATCH.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "id": {
                                "description": "A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.",
                                "type": "string"
                              },
                              "pkg": {
                                "description": "Package resource Structure is documented below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "apt": {
                                      "description": "An Apt Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Package name.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "deb": {
                                      "description": "A deb package file. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "pullDeps": {
                                            "description": "Whether dependencies should also be installed. - install when false: rpm --upgrade --replacepkgs package.rpm - install when true: yum -y install package.rpm or zypper -y install package.rpm",
                                            "type": "boolean"
                                          },
                                          "source": {
                                            "description": "An rpm package. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "allowInsecure": {
                                                  "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                                  "type": "boolean"
                                                },
                                                "gcs": {
                                                  "description": "A Cloud Storage object. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "bucket": {
                                                        "description": "Bucket of the Cloud Storage object.",
                                                        "type": "string"
                                                      },
                                                      "generation": {
                                                        "description": "Generation number of the Cloud Storage object.",
                                                        "type": "number"
                                                      },
                                                      "object": {
                                                        "description": "Name of the Cloud Storage object.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "localPath": {
                                                  "description": "A local path within the VM to use.",
                                                  "type": "string"
                                                },
                                                "remote": {
                                                  "description": "A generic remote file. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sha256Checksum": {
                                                        "description": "SHA256 checksum of the remote file.",
                                                        "type": "string"
                                                      },
                                                      "uri": {
                                                        "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "desiredState": {
                                      "description": "The desired state the agent should maintain for this package. Possible values are: DESIRED_STATE_UNSPECIFIED, INSTALLED, REMOVED.",
                                      "type": "string"
                                    },
                                    "googet": {
                                      "description": "A package managed by GooGet. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Package name.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "msi": {
                                      "description": "An MSI package. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "properties": {
                                            "description": "Additional properties to use during installation. This should be in the format of Property=Setting. Appended to the defaults of ACTION=INSTALL REBOOT=ReallySuppress.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "source": {
                                            "description": "An rpm package. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "allowInsecure": {
                                                  "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                                  "type": "boolean"
                                                },
                                                "gcs": {
                                                  "description": "A Cloud Storage object. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "bucket": {
                                                        "description": "Bucket of the Cloud Storage object.",
                                                        "type": "string"
                                                      },
                                                      "generation": {
                                                        "description": "Generation number of the Cloud Storage object.",
                                                        "type": "number"
                                                      },
                                                      "object": {
                                                        "description": "Name of the Cloud Storage object.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "localPath": {
                                                  "description": "A local path within the VM to use.",
                                                  "type": "string"
                                                },
                                                "remote": {
                                                  "description": "A generic remote file. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sha256Checksum": {
                                                        "description": "SHA256 checksum of the remote file.",
                                                        "type": "string"
                                                      },
                                                      "uri": {
                                                        "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "rpm": {
                                      "description": "An rpm package file. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "pullDeps": {
                                            "description": "Whether dependencies should also be installed. - install when false: rpm --upgrade --replacepkgs package.rpm - install when true: yum -y install package.rpm or zypper -y install package.rpm",
                                            "type": "boolean"
                                          },
                                          "source": {
                                            "description": "An rpm package. Structure is documented below.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "allowInsecure": {
                                                  "description": "Defaults to false. When false, files are subject to validations based on the file type: Remote: A checksum must be specified. Cloud Storage: An object generation number must be specified.",
                                                  "type": "boolean"
                                                },
                                                "gcs": {
                                                  "description": "A Cloud Storage object. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "bucket": {
                                                        "description": "Bucket of the Cloud Storage object.",
                                                        "type": "string"
                                                      },
                                                      "generation": {
                                                        "description": "Generation number of the Cloud Storage object.",
                                                        "type": "number"
                                                      },
                                                      "object": {
                                                        "description": "Name of the Cloud Storage object.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                },
                                                "localPath": {
                                                  "description": "A local path within the VM to use.",
                                                  "type": "string"
                                                },
                                                "remote": {
                                                  "description": "A generic remote file. Structure is documented below.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "sha256Checksum": {
                                                        "description": "SHA256 checksum of the remote file.",
                                                        "type": "string"
                                                      },
                                                      "uri": {
                                                        "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                                        "type": "string"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "yum": {
                                      "description": "A Yum Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Package name.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "zypper": {
                                      "description": "A Zypper Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Package name.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "repository": {
                                "description": "Package repository resource Structure is documented below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "apt": {
                                      "description": "An Apt Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "archiveType": {
                                            "description": "Type of archive files in this repository. Possible values are: ARCHIVE_TYPE_UNSPECIFIED, DEB, DEB_SRC.",
                                            "type": "string"
                                          },
                                          "components": {
                                            "description": "List of components for this repository. Must contain at least one item.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "distribution": {
                                            "description": "Distribution of this repository.",
                                            "type": "string"
                                          },
                                          "gpgKey": {
                                            "description": "URI of the key file for this repository. The agent maintains a keyring at /etc/apt/trusted.gpg.d/osconfig_agent_managed.gpg.",
                                            "type": "string"
                                          },
                                          "uri": {
                                            "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}://{location}.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "goo": {
                                      "description": "A Goo Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "description": "Package name.",
                                            "type": "string"
                                          },
                                          "url": {
                                            "description": "The url of the repository.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "yum": {
                                      "description": "A Yum Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "baseUrl": {
                                            "description": "The location of the repository directory.",
                                            "type": "string"
                                          },
                                          "displayName": {
                                            "description": "The display name of the repository.",
                                            "type": "string"
                                          },
                                          "gpgKeys": {
                                            "description": "URIs of GPG keys.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "id": {
                                            "description": "A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "zypper": {
                                      "description": "A Zypper Repository. Structure is documented below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "baseUrl": {
                                            "description": "The location of the repository directory.",
                                            "type": "string"
                                          },
                                          "displayName": {
                                            "description": "The display name of the repository.",
                                            "type": "string"
                                          },
                                          "gpgKeys": {
                                            "description": "URIs of GPG keys.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "id": {
                                            "description": "A one word, unique name for this repository. This is the repo id in the zypper config file and also the display_name if display_name is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "project": {
              "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
              "type": "string"
            },
            "rollout": {
              "description": "Rollout to deploy the OS policy assignment. A rollout is triggered in the following situations: 1) OSPolicyAssignment is created. 2) OSPolicyAssignment is updated and the update contains changes to one of the following fields: - instance_filter - os_policies 3) OSPolicyAssignment is deleted. Structure is documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "disruptionBudget": {
                    "description": "The maximum number (or percentage) of VMs per zone to disrupt at any given moment. Structure is documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fixed": {
                          "description": "Specifies a fixed value.",
                          "type": "number"
                        },
                        "percent": {
                          "description": "Specifies the relative value defined as a percentage, which will be multiplied by a reference value.",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "minWaitDuration": {
                    "description": "This determines the minimum duration of time to wait after the configuration changes are applied through the current rollout. A VM continues to count towards the disruption_budget at least until this duration of time has passed after configuration changes are applied.",
                    "type": "string"
                  }
                }
              }
            },
            "skipAwaitRollout": {
              "description": "Set to true to skip awaiting rollout during resource creation and update.",
              "type": "boolean"
            }
          }
        },
        "managementPolicies": {
          "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              }
            }
          }
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              }
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          }
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          }
        }
      },
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceFilter) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.instanceFilter))",
          "message": "spec.forProvider.instanceFilter is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.osPolicies) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.osPolicies))",
          "message": "spec.forProvider.osPolicies is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.rollout) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.rollout))",
          "message": "spec.forProvider.rollout is a required parameter"
        }
      ]
    }
  }
}