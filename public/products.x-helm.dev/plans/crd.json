{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "plans.products.x-helm.dev",
    "creationTimestamp": null
  },
  "spec": {
    "group": "products.x-helm.dev",
    "names": {
      "plural": "plans",
      "singular": "plan",
      "kind": "Plan",
      "listKind": "PlanList"
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1alpha1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "type": "object",
                "required": [
                  "description",
                  "displayName",
                  "id",
                  "name",
                  "phase",
                  "productID",
                  "weight"
                ],
                "properties": {
                  "aggregateUsage": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "amountDecimal": {
                    "type": "number",
                    "format": "double"
                  },
                  "billingScheme": {
                    "type": "string"
                  },
                  "bundle": {
                    "type": "object",
                    "required": [
                      "name",
                      "sourceRef"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "sourceRef": {
                        "description": "TypedObjectReference represents an typed namespaced object.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "apiGroup": {
                            "type": "string"
                          },
                          "kind": {
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "currency": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  },
                  "includedPlans": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "interval": {
                    "type": "string"
                  },
                  "intervalCount": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phase": {
                    "type": "string"
                  },
                  "pricingPattern": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "expression": {
                          "type": "string"
                        },
                        "sizedPrices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "cpu",
                              "memory",
                              "price"
                            ],
                            "properties": {
                              "cpu": {
                                "type": "string"
                              },
                              "memory": {
                                "type": "string"
                              },
                              "price": {
                                "type": "number",
                                "format": "double"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "productID": {
                    "type": "string"
                  },
                  "tiers": {
                    "type": "array",
                    "items": {
                      "description": "PlanTier configures tiered pricing",
                      "type": "object",
                      "properties": {
                        "flatAmount": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "flatAmountDecimal": {
                          "type": "number",
                          "format": "double"
                        },
                        "unitAmount": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "unitAmountDecimal": {
                          "type": "number",
                          "format": "double"
                        },
                        "upTo": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  },
                  "tiersMode": {
                    "type": "string"
                  },
                  "transformUsage": {
                    "description": "PlanTransformUsage represents the bucket billing configuration.",
                    "type": "object",
                    "properties": {
                      "divideBy": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "round": {
                        "type": "string"
                      }
                    }
                  },
                  "trialPeriodDays": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "usageType": {
                    "type": "string"
                  },
                  "weight": {
                    "description": "Plans for sorted by weight before displaying to users",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "status": {
                "type": "object",
                "properties": {
                  "observedGeneration": {
                    "description": "ObservedGeneration is the most recent generation observed for this resource. It corresponds to the resource's generation, which is updated on mutation by the API Server.",
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        }
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}