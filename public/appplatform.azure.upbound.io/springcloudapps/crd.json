{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "springcloudapps.appplatform.azure.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "appplatform.azure.upbound.io",
    "names": {
      "plural": "springcloudapps",
      "singular": "springcloudapp",
      "kind": "SpringCloudApp",
      "listKind": "SpringCloudAppList",
      "categories": [
        "crossplane",
        "managed",
        "azure"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "SpringCloudApp is the Schema for the SpringCloudApps API. Manage an Azure Spring Cloud Application.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "SpringCloudAppSpec defines the desired state of SpringCloudApp",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "properties": {
                      "addonJson": {
                        "description": "A JSON object that contains the addon configurations of the Spring Cloud Service.",
                        "type": "string"
                      },
                      "customPersistentDisk": {
                        "description": "A custom_persistent_disk block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountOptions": {
                              "description": "These are the mount options for a persistent disk.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "mountPath": {
                              "description": "The mount path of the persistent disk.",
                              "type": "string"
                            },
                            "readOnlyEnabled": {
                              "description": "Indicates whether the persistent disk is a readOnly one.",
                              "type": "boolean"
                            },
                            "shareName": {
                              "description": "The share name of the Azure File share.",
                              "type": "string"
                            },
                            "storageName": {
                              "description": "The name of the Spring Cloud Storage.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "httpsOnly": {
                        "description": "Is only HTTPS allowed? Defaults to false.",
                        "type": "boolean"
                      },
                      "identity": {
                        "description": "An identity block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identityIds": {
                              "description": "A list of User Assigned Managed Identity IDs to be assigned to this Spring Cloud Application.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "description": "Specifies the type of Managed Service Identity that should be configured on this Spring Cloud Application. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ingressSettings": {
                        "description": "An ingress_settings block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "backendProtocol": {
                              "description": "Specifies how ingress should communicate with this app backend service. Allowed values are GRPC and Default. Defaults to Default.",
                              "type": "string"
                            },
                            "readTimeoutInSeconds": {
                              "description": "Specifies the ingress read time out in seconds. Defaults to 300.",
                              "type": "number"
                            },
                            "sendTimeoutInSeconds": {
                              "description": "Specifies the ingress send time out in seconds. Defaults to 60.",
                              "type": "number"
                            },
                            "sessionAffinity": {
                              "description": "Specifies the type of the affinity, set this to Cookie to enable session affinity. Allowed values are Cookie and None. Defaults to None.",
                              "type": "string"
                            },
                            "sessionCookieMaxAge": {
                              "description": "Specifies the time in seconds until the cookie expires.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "isPublic": {
                        "description": "Does the Spring Cloud Application have public endpoint? Defaults to false.",
                        "type": "boolean"
                      },
                      "persistentDisk": {
                        "description": "An persistent_disk block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "description": "Specifies the mount path of the persistent disk. Defaults to /persistent.",
                              "type": "string"
                            },
                            "sizeInGb": {
                              "description": "Specifies the size of the persistent disk in GB. Possible values are between 0 and 50.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "publicEndpointEnabled": {
                        "description": "Should the App in vnet injection instance exposes endpoint which could be accessed from Internet?",
                        "type": "boolean"
                      },
                      "resourceGroupName": {
                        "description": "Specifies the name of the resource group in which to create the Spring Cloud Application. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "resourceGroupNameRef": {
                        "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "resourceGroupNameSelector": {
                        "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "serviceName": {
                        "description": "Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "serviceNameRef": {
                        "description": "Reference to a SpringCloudService in appplatform to populate serviceName.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "serviceNameSelector": {
                        "description": "Selector for a SpringCloudService in appplatform to populate serviceName.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "tlsEnabled": {
                        "description": "Is End to End TLS Enabled? Defaults to false.",
                        "type": "boolean"
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "addonJson": {
                        "description": "A JSON object that contains the addon configurations of the Spring Cloud Service.",
                        "type": "string"
                      },
                      "customPersistentDisk": {
                        "description": "A custom_persistent_disk block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountOptions": {
                              "description": "These are the mount options for a persistent disk.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "mountPath": {
                              "description": "The mount path of the persistent disk.",
                              "type": "string"
                            },
                            "readOnlyEnabled": {
                              "description": "Indicates whether the persistent disk is a readOnly one.",
                              "type": "boolean"
                            },
                            "shareName": {
                              "description": "The share name of the Azure File share.",
                              "type": "string"
                            },
                            "storageName": {
                              "description": "The name of the Spring Cloud Storage.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "httpsOnly": {
                        "description": "Is only HTTPS allowed? Defaults to false.",
                        "type": "boolean"
                      },
                      "identity": {
                        "description": "An identity block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identityIds": {
                              "description": "A list of User Assigned Managed Identity IDs to be assigned to this Spring Cloud Application.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "type": {
                              "description": "Specifies the type of Managed Service Identity that should be configured on this Spring Cloud Application. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ingressSettings": {
                        "description": "An ingress_settings block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "backendProtocol": {
                              "description": "Specifies how ingress should communicate with this app backend service. Allowed values are GRPC and Default. Defaults to Default.",
                              "type": "string"
                            },
                            "readTimeoutInSeconds": {
                              "description": "Specifies the ingress read time out in seconds. Defaults to 300.",
                              "type": "number"
                            },
                            "sendTimeoutInSeconds": {
                              "description": "Specifies the ingress send time out in seconds. Defaults to 60.",
                              "type": "number"
                            },
                            "sessionAffinity": {
                              "description": "Specifies the type of the affinity, set this to Cookie to enable session affinity. Allowed values are Cookie and None. Defaults to None.",
                              "type": "string"
                            },
                            "sessionCookieMaxAge": {
                              "description": "Specifies the time in seconds until the cookie expires.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "isPublic": {
                        "description": "Does the Spring Cloud Application have public endpoint? Defaults to false.",
                        "type": "boolean"
                      },
                      "persistentDisk": {
                        "description": "An persistent_disk block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "description": "Specifies the mount path of the persistent disk. Defaults to /persistent.",
                              "type": "string"
                            },
                            "sizeInGb": {
                              "description": "Specifies the size of the persistent disk in GB. Possible values are between 0 and 50.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "publicEndpointEnabled": {
                        "description": "Should the App in vnet injection instance exposes endpoint which could be accessed from Internet?",
                        "type": "boolean"
                      },
                      "tlsEnabled": {
                        "description": "Is End to End TLS Enabled? Defaults to false.",
                        "type": "boolean"
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "SpringCloudAppStatus defines the observed state of SpringCloudApp.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "addonJson": {
                        "description": "A JSON object that contains the addon configurations of the Spring Cloud Service.",
                        "type": "string"
                      },
                      "customPersistentDisk": {
                        "description": "A custom_persistent_disk block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountOptions": {
                              "description": "These are the mount options for a persistent disk.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "mountPath": {
                              "description": "The mount path of the persistent disk.",
                              "type": "string"
                            },
                            "readOnlyEnabled": {
                              "description": "Indicates whether the persistent disk is a readOnly one.",
                              "type": "boolean"
                            },
                            "shareName": {
                              "description": "The share name of the Azure File share.",
                              "type": "string"
                            },
                            "storageName": {
                              "description": "The name of the Spring Cloud Storage.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "fqdn": {
                        "description": "The Fully Qualified DNS Name of the Spring Application in the service.",
                        "type": "string"
                      },
                      "httpsOnly": {
                        "description": "Is only HTTPS allowed? Defaults to false.",
                        "type": "boolean"
                      },
                      "id": {
                        "description": "The ID of the Spring Cloud Application.",
                        "type": "string"
                      },
                      "identity": {
                        "description": "An identity block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "identityIds": {
                              "description": "A list of User Assigned Managed Identity IDs to be assigned to this Spring Cloud Application.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "principalId": {
                              "description": "The Principal ID for the Service Principal associated with the Managed Service Identity of this Spring Cloud Application.",
                              "type": "string"
                            },
                            "tenantId": {
                              "description": "The Tenant ID for the Service Principal associated with the Managed Service Identity of this Spring Cloud Application.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Specifies the type of Managed Service Identity that should be configured on this Spring Cloud Application. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ingressSettings": {
                        "description": "An ingress_settings block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "backendProtocol": {
                              "description": "Specifies how ingress should communicate with this app backend service. Allowed values are GRPC and Default. Defaults to Default.",
                              "type": "string"
                            },
                            "readTimeoutInSeconds": {
                              "description": "Specifies the ingress read time out in seconds. Defaults to 300.",
                              "type": "number"
                            },
                            "sendTimeoutInSeconds": {
                              "description": "Specifies the ingress send time out in seconds. Defaults to 60.",
                              "type": "number"
                            },
                            "sessionAffinity": {
                              "description": "Specifies the type of the affinity, set this to Cookie to enable session affinity. Allowed values are Cookie and None. Defaults to None.",
                              "type": "string"
                            },
                            "sessionCookieMaxAge": {
                              "description": "Specifies the time in seconds until the cookie expires.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "isPublic": {
                        "description": "Does the Spring Cloud Application have public endpoint? Defaults to false.",
                        "type": "boolean"
                      },
                      "persistentDisk": {
                        "description": "An persistent_disk block as defined below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "description": "Specifies the mount path of the persistent disk. Defaults to /persistent.",
                              "type": "string"
                            },
                            "sizeInGb": {
                              "description": "Specifies the size of the persistent disk in GB. Possible values are between 0 and 50.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "publicEndpointEnabled": {
                        "description": "Should the App in vnet injection instance exposes endpoint which could be accessed from Internet?",
                        "type": "boolean"
                      },
                      "resourceGroupName": {
                        "description": "Specifies the name of the resource group in which to create the Spring Cloud Application. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "serviceName": {
                        "description": "Specifies the name of the Spring Cloud Service resource. Changing this forces a new resource to be created.",
                        "type": "string"
                      },
                      "tlsEnabled": {
                        "description": "Is End to End TLS Enabled? Defaults to false.",
                        "type": "boolean"
                      },
                      "url": {
                        "description": "The public endpoint of the Spring Cloud Application.",
                        "type": "string"
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}