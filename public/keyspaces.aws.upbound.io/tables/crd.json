{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "tables.keyspaces.aws.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "keyspaces.aws.upbound.io",
    "names": {
      "plural": "tables",
      "singular": "table",
      "kind": "Table",
      "listKind": "TableList",
      "categories": [
        "crossplane",
        "managed",
        "aws"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "Table is the Schema for the Tables API. Provides a Keyspaces Table.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "TableSpec defines the desired state of Table",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "required": [
                      "region"
                    ],
                    "properties": {
                      "capacitySpecification": {
                        "description": "Specifies the read/write throughput capacity mode for the table.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "readCapacityUnits": {
                              "description": "The throughput capacity specified for read operations defined in read capacity units (RCUs).",
                              "type": "number"
                            },
                            "throughputMode": {
                              "description": "The read/write throughput capacity mode for a table. Valid values: PAY_PER_REQUEST, PROVISIONED. The default value is PAY_PER_REQUEST.",
                              "type": "string"
                            },
                            "writeCapacityUnits": {
                              "description": "The throughput capacity specified for write operations defined in write capacity units (WCUs).",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "comment": {
                        "description": "A description of the table.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "description": "A description of the table.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "defaultTimeToLive": {
                        "description": "The default Time to Live setting in seconds for the table. More information can be found in the Developer Guide.",
                        "type": "number"
                      },
                      "encryptionSpecification": {
                        "description": "Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the Developer Guide.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "kmsKeyIdentifier": {
                              "description": "The Amazon Resource Name (ARN) of the customer managed KMS key.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "keyspaceName": {
                        "description": "The name of the keyspace that the table is going to be created in.",
                        "type": "string"
                      },
                      "keyspaceNameRef": {
                        "description": "Reference to a Keyspace in keyspaces to populate keyspaceName.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "keyspaceNameSelector": {
                        "description": "Selector for a Keyspace in keyspaces to populate keyspaceName.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "pointInTimeRecovery": {
                        "description": "Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the Developer Guide.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "Valid values: ENABLED, DISABLED. The default value is DISABLED.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "region": {
                        "description": "Region is the region you'd like your resource to be created in.",
                        "type": "string"
                      },
                      "schemaDefinition": {
                        "description": "Describes the schema of the table.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "clusteringKey": {
                              "description": "The columns that are part of the clustering key of the table.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the column.",
                                    "type": "string"
                                  },
                                  "orderBy": {
                                    "description": "The order modifier. Valid values: ASC, DESC.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "column": {
                              "description": "The regular columns of the table.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the column.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "partitionKey": {
                              "description": "The columns that are part of the partition key of the table .",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the column.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "staticColumn": {
                              "description": "The columns that have been defined as STATIC. Static columns store values that are shared by all rows in the same partition.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the column.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "tableName": {
                        "description": "The name of the table.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Key-value map of resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "ttl": {
                        "description": "Enables Time to Live custom settings for the table. More information can be found in the Developer Guide.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "Valid values: ENABLED, DISABLED. The default value is DISABLED.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "capacitySpecification": {
                        "description": "Specifies the read/write throughput capacity mode for the table.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "readCapacityUnits": {
                              "description": "The throughput capacity specified for read operations defined in read capacity units (RCUs).",
                              "type": "number"
                            },
                            "throughputMode": {
                              "description": "The read/write throughput capacity mode for a table. Valid values: PAY_PER_REQUEST, PROVISIONED. The default value is PAY_PER_REQUEST.",
                              "type": "string"
                            },
                            "writeCapacityUnits": {
                              "description": "The throughput capacity specified for write operations defined in write capacity units (WCUs).",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "comment": {
                        "description": "A description of the table.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "description": "A description of the table.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "defaultTimeToLive": {
                        "description": "The default Time to Live setting in seconds for the table. More information can be found in the Developer Guide.",
                        "type": "number"
                      },
                      "encryptionSpecification": {
                        "description": "Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the Developer Guide.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "kmsKeyIdentifier": {
                              "description": "The Amazon Resource Name (ARN) of the customer managed KMS key.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "pointInTimeRecovery": {
                        "description": "Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the Developer Guide.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "Valid values: ENABLED, DISABLED. The default value is DISABLED.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "schemaDefinition": {
                        "description": "Describes the schema of the table.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "clusteringKey": {
                              "description": "The columns that are part of the clustering key of the table.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the column.",
                                    "type": "string"
                                  },
                                  "orderBy": {
                                    "description": "The order modifier. Valid values: ASC, DESC.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "column": {
                              "description": "The regular columns of the table.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the column.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "partitionKey": {
                              "description": "The columns that are part of the partition key of the table .",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the column.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "staticColumn": {
                              "description": "The columns that have been defined as STATIC. Static columns store values that are shared by all rows in the same partition.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the column.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "tableName": {
                        "description": "The name of the table.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Key-value map of resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "ttl": {
                        "description": "Enables Time to Live custom settings for the table. More information can be found in the Developer Guide.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "Valid values: ENABLED, DISABLED. The default value is DISABLED.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.schemaDefinition) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.schemaDefinition))",
                    "message": "spec.forProvider.schemaDefinition is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tableName) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.tableName))",
                    "message": "spec.forProvider.tableName is a required parameter"
                  }
                ]
              },
              "status": {
                "description": "TableStatus defines the observed state of Table.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "arn": {
                        "description": "The ARN of the table.",
                        "type": "string"
                      },
                      "capacitySpecification": {
                        "description": "Specifies the read/write throughput capacity mode for the table.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "readCapacityUnits": {
                              "description": "The throughput capacity specified for read operations defined in read capacity units (RCUs).",
                              "type": "number"
                            },
                            "throughputMode": {
                              "description": "The read/write throughput capacity mode for a table. Valid values: PAY_PER_REQUEST, PROVISIONED. The default value is PAY_PER_REQUEST.",
                              "type": "string"
                            },
                            "writeCapacityUnits": {
                              "description": "The throughput capacity specified for write operations defined in write capacity units (WCUs).",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "comment": {
                        "description": "A description of the table.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "description": "A description of the table.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "defaultTimeToLive": {
                        "description": "The default Time to Live setting in seconds for the table. More information can be found in the Developer Guide.",
                        "type": "number"
                      },
                      "encryptionSpecification": {
                        "description": "Specifies how the encryption key for encryption at rest is managed for the table. More information can be found in the Developer Guide.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "kmsKeyIdentifier": {
                              "description": "The Amazon Resource Name (ARN) of the customer managed KMS key.",
                              "type": "string"
                            },
                            "type": {
                              "description": "The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "id": {
                        "type": "string"
                      },
                      "keyspaceName": {
                        "description": "The name of the keyspace that the table is going to be created in.",
                        "type": "string"
                      },
                      "pointInTimeRecovery": {
                        "description": "Specifies if point-in-time recovery is enabled or disabled for the table. More information can be found in the Developer Guide.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "Valid values: ENABLED, DISABLED. The default value is DISABLED.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "schemaDefinition": {
                        "description": "Describes the schema of the table.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "clusteringKey": {
                              "description": "The columns that are part of the clustering key of the table.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the column.",
                                    "type": "string"
                                  },
                                  "orderBy": {
                                    "description": "The order modifier. Valid values: ASC, DESC.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "column": {
                              "description": "The regular columns of the table.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the column.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The encryption option specified for the table. Valid values: AWS_OWNED_KMS_KEY, CUSTOMER_MANAGED_KMS_KEY. The default value is AWS_OWNED_KMS_KEY.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "partitionKey": {
                              "description": "The columns that are part of the partition key of the table .",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the column.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "staticColumn": {
                              "description": "The columns that have been defined as STATIC. Static columns store values that are shared by all rows in the same partition.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "The name of the column.",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "tableName": {
                        "description": "The name of the table.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Key-value map of resource tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "tagsAll": {
                        "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "ttl": {
                        "description": "Enables Time to Live custom settings for the table. More information can be found in the Developer Guide.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "Valid values: ENABLED, DISABLED. The default value is DISABLED.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "type"
                    ],
                    "x-kubernetes-list-type": "map"
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}