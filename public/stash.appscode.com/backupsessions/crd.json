{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "backupsessions.stash.appscode.com",
    "creationTimestamp": null,
    "labels": {
      "app.kubernetes.io/name": "stash"
    }
  },
  "spec": {
    "group": "stash.appscode.com",
    "names": {
      "plural": "backupsessions",
      "singular": "backupsession",
      "kind": "BackupSession",
      "listKind": "BackupSessionList",
      "categories": [
        "stash",
        "appscode",
        "all"
      ]
    },
    "scope": "Namespaced",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "type": "object",
                "properties": {
                  "invoker": {
                    "description": "Invoker refers to the BackupConfiguration or BackupBatch being used to invoke this backup session",
                    "type": "object",
                    "required": [
                      "kind",
                      "name"
                    ],
                    "properties": {
                      "apiGroup": {
                        "description": "APIGroup is the group for the resource being referenced",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the type of resource being referenced",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the name of resource being referenced",
                        "type": "string"
                      }
                    }
                  },
                  "retryLeft": {
                    "description": "RetryLeft specifies number of retry attempts left for the session. If this set to non-zero, Stash will create a new BackupSession if the current one fails.",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "status": {
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "Conditions shows condition of different operations/steps of the backup process",
                    "type": "array",
                    "items": {
                      "description": "Condition defines an observation of a object operational state.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A human-readable message indicating details about the transition. This field may be empty.",
                          "type": "string"
                        },
                        "observedGeneration": {
                          "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "reason": {
                          "description": "The reason for the condition's last transition in CamelCase. The specific API may choose whether this field is considered a guaranteed API. This field may not be empty.",
                          "type": "string"
                        },
                        "severity": {
                          "description": "Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of the condition, one of True, False, Unknown.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary util can be useful (see .node.status.util), the ability to deconflict is important.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "nextRetry": {
                    "description": "NextRetry specifies the time when Stash should retry the current failed backup. This field will exist only if the `retryConfig` has been set in the respective backup invoker.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "phase": {
                    "description": "Phase indicates the overall phase of the backup process for this BackupSession. Phase will be \"Succeeded\" only if phase of all hosts are \"Succeeded\". If any of the host fail to complete backup, Phase will be \"Failed\".",
                    "type": "string",
                    "enum": [
                      "Pending",
                      "Skipped",
                      "Running",
                      "Succeeded",
                      "Failed",
                      "Unknown"
                    ]
                  },
                  "retried": {
                    "description": "Retried specifies whether this session was retried or not. This field will exist only if the `retryConfig` has been set in the respective backup invoker.",
                    "type": "boolean"
                  },
                  "sessionDeadline": {
                    "description": "SessionDeadline specifies the deadline of backup. BackupSession will be considered Failed if backup does not complete within this deadline",
                    "type": "string",
                    "format": "date-time"
                  },
                  "sessionDuration": {
                    "description": "SessionDuration specify total time taken to complete current backup session (sum of backup duration of all targets)",
                    "type": "string"
                  },
                  "targets": {
                    "description": "Targets specify the backup status of individual targets",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "conditions": {
                          "description": "Conditions shows condition of different operations/steps of the backup process for this target",
                          "type": "array",
                          "items": {
                            "description": "Condition defines an observation of a object operational state.",
                            "type": "object",
                            "required": [
                              "lastTransitionTime",
                              "status",
                              "type"
                            ],
                            "properties": {
                              "lastTransitionTime": {
                                "description": "Last time the condition transitioned from one status to another. This should be when the underlying condition changed. If that is not known, then using the time when the API field changed is acceptable.",
                                "type": "string",
                                "format": "date-time"
                              },
                              "message": {
                                "description": "A human-readable message indicating details about the transition. This field may be empty.",
                                "type": "string"
                              },
                              "observedGeneration": {
                                "description": "If set, this represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "reason": {
                                "description": "The reason for the condition's last transition in CamelCase. The specific API may choose whether this field is considered a guaranteed API. This field may not be empty.",
                                "type": "string"
                              },
                              "severity": {
                                "description": "Severity provides an explicit classification of Reason code, so the users or machines can immediately understand the current situation and act accordingly. The Severity field MUST be set only when Status=False.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status of the condition, one of True, False, Unknown.",
                                "type": "string"
                              },
                              "type": {
                                "description": "Type of condition in CamelCase or in foo.example.com/CamelCase. Many .condition.type values are consistent across resources like Available, but because arbitrary util can be useful (see .node.status.util), the ability to deconflict is important.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "phase": {
                          "description": "Phase indicates backup phase of this target",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Succeeded",
                            "Running",
                            "Failed"
                          ]
                        },
                        "postBackupActions": {
                          "description": "PostBackupActions specifies a list of actions that the backup process should execute after taking backup",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "preBackupActions": {
                          "description": "PreBackupActions specifies a list of actions that the backup process should execute before taking backup",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ref": {
                          "description": "Ref refers to the backup target",
                          "type": "object",
                          "properties": {
                            "apiVersion": {
                              "type": "string"
                            },
                            "kind": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "namespace": {
                              "type": "string"
                            }
                          }
                        },
                        "stats": {
                          "description": "Stats shows statistics of individual hosts for this backup session",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "duration": {
                                "description": "Duration indicates total time taken to complete backup for this host",
                                "type": "string"
                              },
                              "error": {
                                "description": "Error indicates string value of error in case of backup failure",
                                "type": "string"
                              },
                              "hostname": {
                                "description": "Hostname indicate name of the host that has been backed up",
                                "type": "string"
                              },
                              "phase": {
                                "description": "Phase indicates backup phase of this host",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Failed"
                                ]
                              },
                              "snapshots": {
                                "description": "Snapshots specifies the stats of individual snapshots that has been taken for this host in current backup session",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "fileStats": {
                                      "description": "FileStats shows statistics of files of this snapshot",
                                      "type": "object",
                                      "properties": {
                                        "modifiedFiles": {
                                          "description": "ModifiedFiles shows total number of files that has been modified since last backup",
                                          "type": "integer",
                                          "format": "int64"
                                        },
                                        "newFiles": {
                                          "description": "NewFiles shows total number of new files that has been created since last backup",
                                          "type": "integer",
                                          "format": "int64"
                                        },
                                        "totalFiles": {
                                          "description": "TotalFiles shows total number of files that has been backed up",
                                          "type": "integer",
                                          "format": "int64"
                                        },
                                        "unmodifiedFiles": {
                                          "description": "UnmodifiedFiles shows total number of files that has not been changed since last backup",
                                          "type": "integer",
                                          "format": "int64"
                                        }
                                      }
                                    },
                                    "name": {
                                      "description": "Name indicates the name of the backup snapshot created for this host",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "Path indicates the directory that has been backed up in this snapshot",
                                      "type": "string"
                                    },
                                    "processingTime": {
                                      "description": "ProcessingTime indicates time taken to process the target data",
                                      "type": "string"
                                    },
                                    "totalSize": {
                                      "description": "TotalSize indicates the size of data to backup in target directory",
                                      "type": "string"
                                    },
                                    "uploaded": {
                                      "description": "Uploaded indicates size of data uploaded to backend for this snapshot",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "totalHosts": {
                          "description": "TotalHosts specifies total number of hosts for this target that will be backed up for a BackupSession",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "Invoker-Type",
            "type": "string",
            "jsonPath": ".spec.invoker.kind"
          },
          {
            "name": "Invoker-Name",
            "type": "string",
            "jsonPath": ".spec.invoker.name"
          },
          {
            "name": "Phase",
            "type": "string",
            "jsonPath": ".status.phase"
          },
          {
            "name": "Duration",
            "type": "string",
            "jsonPath": ".status.sessionDuration"
          },
          {
            "name": "Age",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}