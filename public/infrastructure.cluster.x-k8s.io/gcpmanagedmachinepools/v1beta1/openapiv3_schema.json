{
  "$schema": "http://json-schema.org/schema#",
  "description": "GCPManagedMachinePool is the Schema for the gcpmanagedmachinepools API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "infrastructure.cluster.x-k8s.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "GCPManagedMachinePool"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "GCPManagedMachinePoolSpec defines the desired state of GCPManagedMachinePool.",
      "type": "object",
      "properties": {
        "additionalLabels": {
          "description": "AdditionalLabels is an optional set of tags to add to GCP resources managed by the GCP provider, in addition to the\nones added by default.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "diskSizeGB": {
          "description": "DiskSizeGB is size of the disk attached to each node,\nspecified in GB.",
          "type": "integer",
          "format": "int64",
          "minimum": 10
        },
        "diskSizeGb": {
          "description": "DiskSizeGb is the size of the disk attached to each node, specified in GB.\nThe smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.",
          "type": "integer",
          "format": "int32"
        },
        "diskType": {
          "description": "DiskType is type of the disk attached to each node.",
          "type": "string",
          "enum": [
            "pd-standard",
            "pd-ssd",
            "pd-balanced"
          ]
        },
        "imageType": {
          "description": "ImageType is image type to use for this nodepool.",
          "type": "string"
        },
        "instanceType": {
          "description": "InstanceType is name of Compute Engine machine type.",
          "type": "string"
        },
        "kubernetesLabels": {
          "description": "KubernetesLabels specifies the labels to apply to the nodes of the node pool.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "kubernetesTaints": {
          "description": "KubernetesTaints specifies the taints to apply to the nodes of the node pool.",
          "type": "array",
          "items": {
            "description": "Taint represents a Kubernetes taint.",
            "type": "object",
            "required": [
              "effect",
              "key",
              "value"
            ],
            "properties": {
              "effect": {
                "description": "Effect specifies the effect for the taint.",
                "type": "string",
                "enum": [
                  "NoSchedule",
                  "NoExecute",
                  "PreferNoSchedule"
                ]
              },
              "key": {
                "description": "Key is the key of the taint",
                "type": "string"
              },
              "value": {
                "description": "Value is the value of the taint",
                "type": "string"
              }
            }
          }
        },
        "linuxNodeConfig": {
          "description": "LinuxNodeConfig specifies the settings for Linux agent nodes.",
          "type": "object",
          "properties": {
            "cgroupMode": {
              "description": "CgroupMode specifies the cgroup mode for this node pool.",
              "type": "integer",
              "format": "int32"
            },
            "sysctls": {
              "description": "Sysctls specifies the sysctl settings for this node pool.",
              "type": "array",
              "items": {
                "description": "SysctlConfig specifies the sysctl settings for Linux nodes.",
                "type": "object",
                "properties": {
                  "parameter": {
                    "description": "Parameter specifies sysctl parameter name.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value specifies sysctl parameter value.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "localSsdCount": {
          "description": "LocalSsdCount is the number of local SSD disks to be attached to the node.",
          "type": "integer",
          "format": "int32"
        },
        "machineType": {
          "description": "MachineType is the name of a Google Compute Engine [machine\ntype](https://cloud.google.com/compute/docs/machine-types).\nIf unspecified, the default machine type is `e2-medium`.",
          "type": "string"
        },
        "management": {
          "description": "Management specifies the node pool management options.",
          "type": "object",
          "properties": {
            "autoRepair": {
              "description": "AutoRepair specifies whether the node auto-repair is enabled for the node\npool. If enabled, the nodes in this node pool will be monitored and, if\nthey fail health checks too many times, an automatic repair action will be\ntriggered.",
              "type": "boolean"
            },
            "autoUpgrade": {
              "description": "AutoUpgrade specifies whether node auto-upgrade is enabled for the node\npool. If enabled, node auto-upgrade helps keep the nodes in your node pool\nup to date with the latest release version of Kubernetes.",
              "type": "boolean"
            }
          }
        },
        "maxPodsPerNode": {
          "description": "MaxPodsPerNode is constraint enforced on the max num of\npods per node.",
          "type": "integer",
          "format": "int64",
          "maximum": 256,
          "minimum": 8
        },
        "nodeLocations": {
          "description": "NodeLocations is the list of zones in which the NodePool's\nnodes should be located.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nodeNetwork": {
          "description": "NodeNetwork specifies the node network configuration\noptions.",
          "type": "object",
          "properties": {
            "createPodRange": {
              "description": "CreatePodRange specifies whether to create a new range for\npod IPs in this node pool.",
              "type": "boolean"
            },
            "podRangeCidrBlock": {
              "description": "PodRangeCidrBlock is the IP address range for pod IPs in\nthis node pool.",
              "type": "string"
            },
            "podRangeName": {
              "description": "PodRangeName is ID of the secondary range for pod IPs.",
              "type": "string"
            },
            "tags": {
              "description": "Tags is list of instance tags applied to all nodes. Tags\nare used to identify valid sources or targets for network\nfirewalls.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "nodePoolName": {
          "description": "NodePoolName specifies the name of the GKE node pool corresponding to this MachinePool. If you don't specify a name\nthen a default name will be created based on the namespace and name of the managed machine pool.",
          "type": "string"
        },
        "nodeSecurity": {
          "description": "NodeSecurity specifies the node security options.",
          "type": "object",
          "properties": {
            "enableIntegrityMonitoring": {
              "description": "EnableIntegrityMonitoring defines whether the instance has\nintegrity monitoring enabled.",
              "type": "boolean"
            },
            "enableSecureBoot": {
              "description": "EnableSecureBoot defines whether the instance has Secure\nBoot enabled.",
              "type": "boolean"
            },
            "sandboxType": {
              "description": "SandboxType is type of the sandbox to use for the node.",
              "type": "string"
            },
            "serviceAccount": {
              "description": "ServiceAccount specifies the identity details for node\npool.",
              "type": "object",
              "properties": {
                "email": {
                  "description": "Email is the Google Cloud Platform Service Account to be\nused by the node VMs.",
                  "type": "string"
                },
                "scopes": {
                  "description": "Scopes is a set of Google API scopes to be made available\non all of the node VMs under the \"default\" service account.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "providerIDList": {
          "description": "ProviderIDList are the provider IDs of instances in the\nmanaged instance group corresponding to the nodegroup represented by this\nmachine pool",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scaling": {
          "description": "Scaling specifies scaling for the node pool",
          "type": "object",
          "properties": {
            "enableAutoscaling": {
              "description": "Is autoscaling enabled for this node pool. If unspecified, the default value is true.",
              "type": "boolean"
            },
            "locationPolicy": {
              "description": "Location policy used when scaling up a nodepool.",
              "type": "string",
              "enum": [
                "balanced",
                "any"
              ]
            },
            "maxCount": {
              "description": "MaxCount specifies the maximum number of nodes in the node pool",
              "type": "integer",
              "format": "int32"
            },
            "minCount": {
              "description": "MinCount specifies the minimum number of nodes in the node pool",
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    }
  }
}