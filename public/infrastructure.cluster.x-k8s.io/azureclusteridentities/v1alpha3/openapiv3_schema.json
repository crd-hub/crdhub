{
  "$schema": "http://json-schema.org/schema#",
  "description": "AzureClusterIdentity is the Schema for the azureclustersidentities API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "infrastructure.cluster.x-k8s.io/v1alpha3"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "AzureClusterIdentity"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "AzureClusterIdentitySpec defines the parameters that are used to create an AzureIdentity.",
      "type": "object",
      "required": [
        "clientID",
        "tenantID",
        "type"
      ],
      "properties": {
        "allowedNamespaces": {
          "description": "AllowedNamespaces is an array of namespaces that AzureClusters can use this Identity from. \n An empty list (default) indicates that AzureClusters can use this Identity from any namespace. This field is intentionally not a pointer because the nil behavior (no namespaces) is undesirable here.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientID": {
          "description": "Both User Assigned MSI and SP can use this field.",
          "type": "string"
        },
        "clientSecret": {
          "description": "ClientSecret is a secret reference which should contain either a Service Principal password or certificate secret.",
          "type": "object",
          "properties": {
            "name": {
              "description": "name is unique within a namespace to reference a secret resource.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace defines the space within which the secret name must be unique.",
              "type": "string"
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "resourceID": {
          "description": "User assigned MSI resource id.",
          "type": "string"
        },
        "tenantID": {
          "description": "Service principal primary tenant id.",
          "type": "string"
        },
        "type": {
          "description": "UserAssignedMSI or Service Principal",
          "type": "string",
          "enum": [
            "ServicePrincipal",
            "UserAssignedMSI"
          ]
        }
      }
    }
  }
}