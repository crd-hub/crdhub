{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "azuresystemassignedidentites.infrastructure.cluster.x-k8s.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.3.0"
    }
  },
  "spec": {
    "group": "infrastructure.cluster.x-k8s.io",
    "names": {
      "plural": "azuresystemassignedidentites",
      "singular": "azuresystemassignedidentity",
      "kind": "AzureSystemAssignedIdentity",
      "listKind": "AzureSystemAssignedIdentityList",
      "categories": [
        "cluster-api"
      ]
    },
    "scope": "Namespaced",
    "versions": [
      {
        "name": "v1alpha3",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "AzureSystemAssignedIdentity represents a reference to an Azure access key ID and secret access key, stored in a secret.",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "Spec for this AzureSystemAssignedIdentitySpec.",
                "type": "object",
                "required": [
                  "name",
                  "secretRef"
                ],
                "properties": {
                  "allowedNamespaces": {
                    "description": "AllowedNamespaces is a selector of namespaces that AzureClusters can use this ClusterPrincipal from. This is a standard Kubernetes LabelSelector, a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. Controllers must not support AzureClusters in namespaces outside this selector. \n An empty selector (default) indicates that AzureClusters can use this AzureSystemAssignedIdentity from any namespace. This field is intentionally not a pointer because the nil behavior (no namespaces) is undesirable here.",
                    "type": "object",
                    "properties": {
                      "matchExpressions": {
                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                        "type": "array",
                        "items": {
                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                          "type": "object",
                          "required": [
                            "key",
                            "operator"
                          ],
                          "properties": {
                            "key": {
                              "description": "key is the label key that the selector applies to.",
                              "type": "string"
                            },
                            "operator": {
                              "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                              "type": "string"
                            },
                            "values": {
                              "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "matchLabels": {
                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "secretRef": {
                    "description": "Reference to a secret containing the credentials. The secret should contain the following data keys: tenantID",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name is unique within a namespace to reference a secret resource.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace defines the space within which the secret name must be unique.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    ]
  },
  "status": {
    "conditions": [],
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": []
  }
}