{
  "$schema": "http://json-schema.org/schema#",
  "description": "AzureManagedControlPlane is the Schema for the azuremanagedcontrolplanes API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "infrastructure.cluster.x-k8s.io/v1alpha4"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "AzureManagedControlPlane"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "AzureManagedControlPlaneSpec defines the desired state of AzureManagedControlPlane.",
      "type": "object",
      "required": [
        "location",
        "resourceGroupName",
        "sshPublicKey",
        "version"
      ],
      "properties": {
        "aadProfile": {
          "description": "AadProfile is Azure Active Directory configuration to integrate with AKS for aad authentication.",
          "type": "object",
          "required": [
            "adminGroupObjectIDs",
            "managed"
          ],
          "properties": {
            "adminGroupObjectIDs": {
              "description": "AdminGroupObjectIDs - AAD group object IDs that will have admin role of the cluster.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "managed": {
              "description": "Managed - Whether to enable managed AAD.",
              "type": "boolean"
            }
          }
        },
        "additionalTags": {
          "description": "AdditionalTags is an optional set of tags to add to Azure resources managed by the Azure provider, in addition to the ones added by default.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "apiServerAccessProfile": {
          "description": "APIServerAccessProfile is the access profile for AKS API server.",
          "type": "object",
          "properties": {
            "authorizedIPRanges": {
              "description": "AuthorizedIPRanges - Authorized IP Ranges to kubernetes API server.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "enablePrivateCluster": {
              "description": "EnablePrivateCluster - Whether to create the cluster as a private cluster or not.",
              "type": "boolean"
            },
            "enablePrivateClusterPublicFQDN": {
              "description": "EnablePrivateClusterPublicFQDN - Whether to create additional public FQDN for private cluster or not.",
              "type": "boolean"
            },
            "privateDNSZone": {
              "description": "PrivateDNSZone - Private dns zone mode for private cluster.",
              "type": "string",
              "enum": [
                "System",
                "None"
              ]
            }
          }
        },
        "controlPlaneEndpoint": {
          "description": "ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.",
          "type": "object",
          "required": [
            "host",
            "port"
          ],
          "properties": {
            "host": {
              "description": "The hostname on which the API server is serving.",
              "type": "string"
            },
            "port": {
              "description": "The port on which the API server is serving.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "dnsServiceIP": {
          "description": "DNSServiceIP is an IP address assigned to the Kubernetes DNS service. It must be within the Kubernetes service address range specified in serviceCidr.",
          "type": "string"
        },
        "identityRef": {
          "description": "IdentityRef is a reference to a AzureClusterIdentity to be used when reconciling this cluster",
          "type": "object",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": "string"
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": "string"
            },
            "uid": {
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": "string"
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "loadBalancerProfile": {
          "description": "LoadBalancerProfile is the profile of the cluster load balancer.",
          "type": "object",
          "properties": {
            "allocatedOutboundPorts": {
              "description": "AllocatedOutboundPorts - Desired number of allocated SNAT ports per VM. Allowed values must be in the range of 0 to 64000 (inclusive). The default value is 0 which results in Azure dynamically allocating ports.",
              "type": "integer",
              "format": "int32"
            },
            "idleTimeoutInMinutes": {
              "description": "IdleTimeoutInMinutes - Desired outbound flow idle timeout in minutes. Allowed values must be in the range of 4 to 120 (inclusive). The default value is 30 minutes.",
              "type": "integer",
              "format": "int32"
            },
            "managedOutboundIPs": {
              "description": "ManagedOutboundIPs - Desired managed outbound IPs for the cluster load balancer.",
              "type": "integer",
              "format": "int32"
            },
            "outboundIPPrefixes": {
              "description": "OutboundIPPrefixes - Desired outbound IP Prefix resources for the cluster load balancer.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "outboundIPs": {
              "description": "OutboundIPs - Desired outbound IP resources for the cluster load balancer.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "loadBalancerSKU": {
          "description": "LoadBalancerSKU is the SKU of the loadBalancer to be provisioned.",
          "type": "string",
          "enum": [
            "Basic",
            "Standard"
          ]
        },
        "location": {
          "description": "Location is a string matching one of the canonical Azure region names. Examples: \"westus2\", \"eastus\".",
          "type": "string"
        },
        "networkPlugin": {
          "description": "NetworkPlugin used for building Kubernetes network.",
          "type": "string",
          "enum": [
            "azure",
            "kubenet"
          ]
        },
        "networkPolicy": {
          "description": "NetworkPolicy used for building Kubernetes network.",
          "type": "string",
          "enum": [
            "azure",
            "calico"
          ]
        },
        "nodeResourceGroupName": {
          "description": "NodeResourceGroupName is the name of the resource group containing cluster IaaS resources. Will be populated to default in webhook.",
          "type": "string"
        },
        "resourceGroupName": {
          "description": "ResourceGroupName is the name of the Azure resource group for this AKS Cluster.",
          "type": "string"
        },
        "sku": {
          "description": "SKU is the AKSSku of the AKS to be provisioned.",
          "type": "object",
          "required": [
            "tier"
          ],
          "properties": {
            "tier": {
              "description": "Tier - Tier of a managed cluster SKU.",
              "type": "string",
              "enum": [
                "Free",
                "Paid"
              ]
            }
          }
        },
        "sshPublicKey": {
          "description": "SSHPublicKey is a string literal containing an ssh public key base64 encoded.",
          "type": "string"
        },
        "subscriptionID": {
          "description": "SubscriptionID is the GUID of the Azure subscription to hold this cluster.",
          "type": "string"
        },
        "version": {
          "description": "Version defines the desired Kubernetes version.",
          "type": "string",
          "minLength": 2
        },
        "virtualNetwork": {
          "description": "VirtualNetwork describes the vnet for the AKS cluster. Will be created if it does not exist.",
          "type": "object",
          "required": [
            "cidrBlock",
            "name"
          ],
          "properties": {
            "cidrBlock": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "subnet": {
              "description": "ManagedControlPlaneSubnet describes a subnet for an AKS cluster.",
              "type": "object",
              "required": [
                "cidrBlock",
                "name"
              ],
              "properties": {
                "cidrBlock": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}