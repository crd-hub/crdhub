{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "gcpclustertemplates.infrastructure.cluster.x-k8s.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.8.0"
    }
  },
  "spec": {
    "group": "infrastructure.cluster.x-k8s.io",
    "names": {
      "plural": "gcpclustertemplates",
      "singular": "gcpclustertemplate",
      "shortNames": [
        "gcpct"
      ],
      "kind": "GCPClusterTemplate",
      "listKind": "GCPClusterTemplateList",
      "categories": [
        "cluster-api"
      ]
    },
    "scope": "Namespaced",
    "versions": [
      {
        "name": "v1alpha4",
        "served": true,
        "storage": false,
        "schema": {
          "openAPIV3Schema": {
            "description": "GCPClusterTemplate is the Schema for the gcpclustertemplates API.",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "GCPClusterTemplateSpec defines the desired state of GCPClusterTemplate.",
                "type": "object",
                "required": [
                  "template"
                ],
                "properties": {
                  "template": {
                    "description": "GCPClusterTemplateResource contains spec for GCPClusterSpec.",
                    "type": "object",
                    "required": [
                      "spec"
                    ],
                    "properties": {
                      "spec": {
                        "description": "GCPClusterSpec defines the desired state of GCPCluster.",
                        "type": "object",
                        "required": [
                          "project",
                          "region"
                        ],
                        "properties": {
                          "additionalLabels": {
                            "description": "AdditionalLabels is an optional set of tags to add to GCP resources managed by the GCP provider, in addition to the ones added by default.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "controlPlaneEndpoint": {
                            "description": "ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.",
                            "type": "object",
                            "required": [
                              "host",
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "The hostname on which the API server is serving.",
                                "type": "string"
                              },
                              "port": {
                                "description": "The port on which the API server is serving.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "failureDomains": {
                            "description": "FailureDomains is an optional field which is used to assign selected availability zones to a cluster FailureDomains if empty, defaults to all the zones in the selected region and if specified would override the default zones.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "network": {
                            "description": "NetworkSpec encapsulates all things related to GCP network.",
                            "type": "object",
                            "properties": {
                              "autoCreateSubnetworks": {
                                "description": "AutoCreateSubnetworks: When set to true, the VPC network is created in \"auto\" mode. When set to false, the VPC network is created in \"custom\" mode. \n An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges. \n Defaults to true.",
                                "type": "boolean"
                              },
                              "loadBalancerBackendPort": {
                                "description": "Allow for configuration of load balancer backend (useful for changing apiserver port)",
                                "type": "integer",
                                "format": "int32"
                              },
                              "name": {
                                "description": "Name is the name of the network to be used.",
                                "type": "string"
                              },
                              "subnets": {
                                "description": "Subnets configuration.",
                                "type": "array",
                                "items": {
                                  "description": "SubnetSpec configures an GCP Subnet.",
                                  "type": "object",
                                  "properties": {
                                    "cidrBlock": {
                                      "description": "CidrBlock is the range of internal addresses that are owned by this subnetwork. Provide this property when you create the subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and non-overlapping within a network. Only IPv4 is supported. This field can be set only at resource creation time.",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "Description is an optional description associated with the resource.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name defines a unique identifier to reference this resource.",
                                      "type": "string"
                                    },
                                    "privateGoogleAccess": {
                                      "description": "PrivateGoogleAccess defines whether VMs in this subnet can access Google services without assigning external IP addresses",
                                      "type": "boolean"
                                    },
                                    "region": {
                                      "description": "Region is the name of the region where the Subnetwork resides.",
                                      "type": "string"
                                    },
                                    "routeTableId": {
                                      "description": "EnableFlowLogs: Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is to disable flow logging.",
                                      "type": "boolean"
                                    },
                                    "secondaryCidrBlocks": {
                                      "description": "SecondaryCidrBlocks defines secondary CIDR ranges, from which secondary IP ranges of a VM may be allocated",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "project": {
                            "description": "Project is the name of the project to deploy the cluster to.",
                            "type": "string"
                          },
                          "region": {
                            "description": "The GCP Region the cluster lives in.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "GCPClusterTemplate is the Schema for the gcpclustertemplates API.",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "GCPClusterTemplateSpec defines the desired state of GCPClusterTemplate.",
                "type": "object",
                "required": [
                  "template"
                ],
                "properties": {
                  "template": {
                    "description": "GCPClusterTemplateResource contains spec for GCPClusterSpec.",
                    "type": "object",
                    "required": [
                      "spec"
                    ],
                    "properties": {
                      "metadata": {
                        "description": "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "spec": {
                        "description": "GCPClusterSpec defines the desired state of GCPCluster.",
                        "type": "object",
                        "required": [
                          "project",
                          "region"
                        ],
                        "properties": {
                          "additionalLabels": {
                            "description": "AdditionalLabels is an optional set of tags to add to GCP resources managed by the GCP provider, in addition to the ones added by default.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "controlPlaneEndpoint": {
                            "description": "ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.",
                            "type": "object",
                            "required": [
                              "host",
                              "port"
                            ],
                            "properties": {
                              "host": {
                                "description": "The hostname on which the API server is serving.",
                                "type": "string"
                              },
                              "port": {
                                "description": "The port on which the API server is serving.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "credentialsRef": {
                            "description": "CredentialsRef is a reference to a Secret that contains the credentials to use for provisioning this cluster. If not supplied then the credentials of the controller will be used.",
                            "type": "object",
                            "required": [
                              "name",
                              "namespace"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                                "type": "string"
                              }
                            }
                          },
                          "failureDomains": {
                            "description": "FailureDomains is an optional field which is used to assign selected availability zones to a cluster FailureDomains if empty, defaults to all the zones in the selected region and if specified would override the default zones.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "network": {
                            "description": "NetworkSpec encapsulates all things related to GCP network.",
                            "type": "object",
                            "properties": {
                              "autoCreateSubnetworks": {
                                "description": "AutoCreateSubnetworks: When set to true, the VPC network is created in \"auto\" mode. When set to false, the VPC network is created in \"custom\" mode. \n An auto mode VPC network starts with one subnet per region. Each subnet has a predetermined range as described in Auto mode VPC network IP ranges. \n Defaults to true.",
                                "type": "boolean"
                              },
                              "loadBalancerBackendPort": {
                                "description": "Allow for configuration of load balancer backend (useful for changing apiserver port)",
                                "type": "integer",
                                "format": "int32"
                              },
                              "name": {
                                "description": "Name is the name of the network to be used.",
                                "type": "string"
                              },
                              "subnets": {
                                "description": "Subnets configuration.",
                                "type": "array",
                                "items": {
                                  "description": "SubnetSpec configures an GCP Subnet.",
                                  "type": "object",
                                  "properties": {
                                    "cidrBlock": {
                                      "description": "CidrBlock is the range of internal addresses that are owned by this subnetwork. Provide this property when you create the subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and non-overlapping within a network. Only IPv4 is supported. This field can be set only at resource creation time.",
                                      "type": "string"
                                    },
                                    "description": {
                                      "description": "Description is an optional description associated with the resource.",
                                      "type": "string"
                                    },
                                    "enableFlowLogs": {
                                      "description": "EnableFlowLogs: Whether to enable flow logging for this subnetwork. If this field is not explicitly set, it will not appear in get listings. If not set the default behavior is to disable flow logging.",
                                      "type": "boolean"
                                    },
                                    "name": {
                                      "description": "Name defines a unique identifier to reference this resource.",
                                      "type": "string"
                                    },
                                    "privateGoogleAccess": {
                                      "description": "PrivateGoogleAccess defines whether VMs in this subnet can access Google services without assigning external IP addresses",
                                      "type": "boolean"
                                    },
                                    "purpose": {
                                      "description": "Purpose: The purpose of the resource. If unspecified, the purpose defaults to PRIVATE_RFC_1918. The enableFlowLogs field isn't supported with the purpose field set to INTERNAL_HTTPS_LOAD_BALANCER. \n Possible values: \"INTERNAL_HTTPS_LOAD_BALANCER\" - Subnet reserved for Internal HTTP(S) Load Balancing. \"PRIVATE\" - Regular user created or automatically created subnet. \"PRIVATE_RFC_1918\" - Regular user created or automatically created subnet. \"PRIVATE_SERVICE_CONNECT\" - Subnetworks created for Private Service Connect in the producer network. \"REGIONAL_MANAGED_PROXY\" - Subnetwork used for Regional Internal/External HTTP(S) Load Balancing.",
                                      "type": "string",
                                      "default": "PRIVATE_RFC_1918",
                                      "enum": [
                                        "INTERNAL_HTTPS_LOAD_BALANCER",
                                        "PRIVATE_RFC_1918",
                                        "PRIVATE",
                                        "PRIVATE_SERVICE_CONNECT",
                                        "REGIONAL_MANAGED_PROXY"
                                      ]
                                    },
                                    "region": {
                                      "description": "Region is the name of the region where the Subnetwork resides.",
                                      "type": "string"
                                    },
                                    "secondaryCidrBlocks": {
                                      "description": "SecondaryCidrBlocks defines secondary CIDR ranges, from which secondary IP ranges of a VM may be allocated",
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "project": {
                            "description": "Project is the name of the project to deploy the cluster to.",
                            "type": "string"
                          },
                          "region": {
                            "description": "The GCP Region the cluster lives in.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    ]
  },
  "status": {
    "conditions": [],
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": []
  }
}