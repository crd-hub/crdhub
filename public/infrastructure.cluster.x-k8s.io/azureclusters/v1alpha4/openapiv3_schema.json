{
  "$schema": "http://json-schema.org/schema#",
  "description": "AzureCluster is the Schema for the azureclusters API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "infrastructure.cluster.x-k8s.io/v1alpha4"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "AzureCluster"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "AzureClusterSpec defines the desired state of AzureCluster.",
      "type": "object",
      "required": [
        "location"
      ],
      "properties": {
        "additionalTags": {
          "description": "AdditionalTags is an optional set of tags to add to Azure resources managed by the Azure provider, in addition to the ones added by default.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "azureEnvironment": {
          "description": "AzureEnvironment is the name of the AzureCloud to be used. The default value that would be used by most users is \"AzurePublicCloud\", other values are: - ChinaCloud: \"AzureChinaCloud\" - GermanCloud: \"AzureGermanCloud\" - PublicCloud: \"AzurePublicCloud\" - USGovernmentCloud: \"AzureUSGovernmentCloud\"",
          "type": "string"
        },
        "bastionSpec": {
          "description": "BastionSpec encapsulates all things related to the Bastions in the cluster.",
          "type": "object",
          "properties": {
            "azureBastion": {
              "description": "AzureBastion specifies how the Azure Bastion cloud component should be configured.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "publicIP": {
                  "description": "PublicIPSpec defines the inputs to create an Azure public IP address.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "dnsName": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "subnet": {
                  "description": "SubnetSpec configures an Azure subnet.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "cidrBlocks": {
                      "description": "CIDRBlocks defines the subnet's address space, specified as one or more address prefixes in CIDR notation.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "description": "ID defines a unique identifier to reference this resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name defines a name for the subnet resource.",
                      "type": "string"
                    },
                    "natGateway": {
                      "description": "NatGateway associated with this subnet.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "ip": {
                          "description": "PublicIPSpec defines the inputs to create an Azure public IP address.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "dnsName": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "role": {
                      "description": "Role defines the subnet role (eg. Node, ControlPlane)",
                      "type": "string"
                    },
                    "routeTable": {
                      "description": "RouteTable defines the route table that should be attached to this subnet.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "securityGroup": {
                      "description": "SecurityGroup defines the NSG (network security group) that should be attached to this subnet.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "securityRules": {
                          "description": "SecurityRules is a slice of Azure security rules for security groups.",
                          "type": "array",
                          "items": {
                            "description": "SecurityRule defines an Azure security rule for security groups.",
                            "type": "object",
                            "required": [
                              "description",
                              "direction",
                              "name",
                              "protocol"
                            ],
                            "properties": {
                              "description": {
                                "description": "A description for this rule. Restricted to 140 chars.",
                                "type": "string"
                              },
                              "destination": {
                                "description": "Destination is the destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
                                "type": "string"
                              },
                              "destinationPorts": {
                                "description": "DestinationPorts specifies the destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                "type": "string"
                              },
                              "direction": {
                                "description": "Direction indicates whether the rule applies to inbound, or outbound traffic. \"Inbound\" or \"Outbound\".",
                                "type": "string",
                                "enum": [
                                  "Inbound",
                                  "Outbound"
                                ]
                              },
                              "name": {
                                "description": "Name is a unique name within the network security group.",
                                "type": "string"
                              },
                              "priority": {
                                "description": "Priority is a number between 100 and 4096. Each rule should have a unique value for priority. Rules are processed in priority order, with lower numbers processed before higher numbers. Once traffic matches a rule, processing stops.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "protocol": {
                                "description": "Protocol specifies the protocol type. \"Tcp\", \"Udp\", \"Icmp\", or \"*\".",
                                "type": "string",
                                "enum": [
                                  "Tcp",
                                  "Udp",
                                  "Icmp",
                                  "*"
                                ]
                              },
                              "source": {
                                "description": "Source specifies the CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.",
                                "type": "string"
                              },
                              "sourcePorts": {
                                "description": "SourcePorts specifies source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "tags": {
                          "description": "Tags defines a map of tags.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "cloudProviderConfigOverrides": {
          "description": "CloudProviderConfigOverrides is an optional set of configuration values that can be overridden in azure cloud provider config. This is only a subset of options that are available in azure cloud provider config. Some values for the cloud provider config are inferred from other parts of cluster api provider azure spec, and may not be available for overrides. See: https://kubernetes-sigs.github.io/cloud-provider-azure/install/configs Note: All cloud provider config values can be customized by creating the secret beforehand. CloudProviderConfigOverrides is only used when the secret is managed by the Azure Provider.",
          "type": "object",
          "properties": {
            "backOffs": {
              "description": "BackOffConfig indicates the back-off config options.",
              "type": "object",
              "properties": {
                "cloudProviderBackoff": {
                  "type": "boolean"
                },
                "cloudProviderBackoffDuration": {
                  "type": "integer"
                },
                "cloudProviderBackoffExponent": {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                },
                "cloudProviderBackoffJitter": {
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                },
                "cloudProviderBackoffRetries": {
                  "type": "integer"
                }
              }
            },
            "rateLimits": {
              "type": "array",
              "items": {
                "description": "RateLimitSpec represents the rate limit configuration for a particular kind of resource. Eg. loadBalancerRateLimit is used to configure rate limits for load balancers. This eventually gets converted to CloudProviderRateLimitConfig that cloud-provider-azure expects. See: https://github.com/kubernetes-sigs/cloud-provider-azure/blob/d585c2031925b39c925624302f22f8856e29e352/pkg/provider/azure_ratelimit.go#L25 We cannot use CloudProviderRateLimitConfig directly because floating point values are not supported in controller-tools. See: https://github.com/kubernetes-sigs/controller-tools/issues/245",
                "type": "object",
                "properties": {
                  "config": {
                    "description": "RateLimitConfig indicates the rate limit config options.",
                    "type": "object",
                    "properties": {
                      "cloudProviderRateLimit": {
                        "type": "boolean"
                      },
                      "cloudProviderRateLimitBucket": {
                        "type": "integer"
                      },
                      "cloudProviderRateLimitBucketWrite": {
                        "type": "integer"
                      },
                      "cloudProviderRateLimitQPS": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "cloudProviderRateLimitQPSWrite": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "name": {
                    "description": "Name is the name of the rate limit spec.",
                    "type": "string",
                    "enum": [
                      "defaultRateLimit",
                      "routeRateLimit",
                      "subnetsRateLimit",
                      "interfaceRateLimit",
                      "routeTableRateLimit",
                      "loadBalancerRateLimit",
                      "publicIPAddressRateLimit",
                      "securityGroupRateLimit",
                      "virtualMachineRateLimit",
                      "storageAccountRateLimit",
                      "diskRateLimit",
                      "snapshotRateLimit",
                      "virtualMachineScaleSetRateLimit",
                      "virtualMachineSizesRateLimit",
                      "availabilitySetRateLimit"
                    ]
                  }
                }
              }
            }
          }
        },
        "controlPlaneEndpoint": {
          "description": "ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.",
          "type": "object",
          "required": [
            "host",
            "port"
          ],
          "properties": {
            "host": {
              "description": "The hostname on which the API server is serving.",
              "type": "string"
            },
            "port": {
              "description": "The port on which the API server is serving.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "identityRef": {
          "description": "IdentityRef is a reference to an AzureIdentity to be used when reconciling this cluster",
          "type": "object",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": "string"
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": "string"
            },
            "uid": {
              "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": "string"
            }
          },
          "x-kubernetes-map-type": "atomic"
        },
        "location": {
          "type": "string"
        },
        "networkSpec": {
          "description": "NetworkSpec encapsulates all things related to Azure network.",
          "type": "object",
          "properties": {
            "apiServerLB": {
              "description": "APIServerLB is the configuration for the control-plane load balancer.",
              "type": "object",
              "properties": {
                "frontendIPs": {
                  "type": "array",
                  "items": {
                    "description": "FrontendIP defines a load balancer frontend IP configuration.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "privateIP": {
                        "type": "string"
                      },
                      "publicIP": {
                        "description": "PublicIPSpec defines the inputs to create an Azure public IP address.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "dnsName": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "frontendIPsCount": {
                  "description": "FrontendIPsCount specifies the number of frontend IP addresses for the load balancer.",
                  "type": "integer",
                  "format": "int32"
                },
                "id": {
                  "type": "string"
                },
                "idleTimeoutInMinutes": {
                  "description": "IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.",
                  "type": "integer",
                  "format": "int32"
                },
                "name": {
                  "type": "string"
                },
                "sku": {
                  "description": "SKU defines an Azure load balancer SKU.",
                  "type": "string"
                },
                "type": {
                  "description": "LBType defines an Azure load balancer Type.",
                  "type": "string"
                }
              }
            },
            "controlPlaneOutboundLB": {
              "description": "ControlPlaneOutboundLB is the configuration for the control-plane outbound load balancer. This is different from APIServerLB, and is used only in private clusters (optionally) for enabling outbound traffic.",
              "type": "object",
              "properties": {
                "frontendIPs": {
                  "type": "array",
                  "items": {
                    "description": "FrontendIP defines a load balancer frontend IP configuration.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "privateIP": {
                        "type": "string"
                      },
                      "publicIP": {
                        "description": "PublicIPSpec defines the inputs to create an Azure public IP address.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "dnsName": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "frontendIPsCount": {
                  "description": "FrontendIPsCount specifies the number of frontend IP addresses for the load balancer.",
                  "type": "integer",
                  "format": "int32"
                },
                "id": {
                  "type": "string"
                },
                "idleTimeoutInMinutes": {
                  "description": "IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.",
                  "type": "integer",
                  "format": "int32"
                },
                "name": {
                  "type": "string"
                },
                "sku": {
                  "description": "SKU defines an Azure load balancer SKU.",
                  "type": "string"
                },
                "type": {
                  "description": "LBType defines an Azure load balancer Type.",
                  "type": "string"
                }
              }
            },
            "nodeOutboundLB": {
              "description": "NodeOutboundLB is the configuration for the node outbound load balancer.",
              "type": "object",
              "properties": {
                "frontendIPs": {
                  "type": "array",
                  "items": {
                    "description": "FrontendIP defines a load balancer frontend IP configuration.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1
                      },
                      "privateIP": {
                        "type": "string"
                      },
                      "publicIP": {
                        "description": "PublicIPSpec defines the inputs to create an Azure public IP address.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "dnsName": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "frontendIPsCount": {
                  "description": "FrontendIPsCount specifies the number of frontend IP addresses for the load balancer.",
                  "type": "integer",
                  "format": "int32"
                },
                "id": {
                  "type": "string"
                },
                "idleTimeoutInMinutes": {
                  "description": "IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.",
                  "type": "integer",
                  "format": "int32"
                },
                "name": {
                  "type": "string"
                },
                "sku": {
                  "description": "SKU defines an Azure load balancer SKU.",
                  "type": "string"
                },
                "type": {
                  "description": "LBType defines an Azure load balancer Type.",
                  "type": "string"
                }
              }
            },
            "privateDNSZoneName": {
              "description": "PrivateDNSZoneName defines the zone name for the Azure Private DNS.",
              "type": "string"
            },
            "subnets": {
              "description": "Subnets is the configuration for the control-plane subnet and the node subnet.",
              "type": "array",
              "items": {
                "description": "SubnetSpec configures an Azure subnet.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "cidrBlocks": {
                    "description": "CIDRBlocks defines the subnet's address space, specified as one or more address prefixes in CIDR notation.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "id": {
                    "description": "ID defines a unique identifier to reference this resource.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name defines a name for the subnet resource.",
                    "type": "string"
                  },
                  "natGateway": {
                    "description": "NatGateway associated with this subnet.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "ip": {
                        "description": "PublicIPSpec defines the inputs to create an Azure public IP address.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "dnsName": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "role": {
                    "description": "Role defines the subnet role (eg. Node, ControlPlane)",
                    "type": "string"
                  },
                  "routeTable": {
                    "description": "RouteTable defines the route table that should be attached to this subnet.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "securityGroup": {
                    "description": "SecurityGroup defines the NSG (network security group) that should be attached to this subnet.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "securityRules": {
                        "description": "SecurityRules is a slice of Azure security rules for security groups.",
                        "type": "array",
                        "items": {
                          "description": "SecurityRule defines an Azure security rule for security groups.",
                          "type": "object",
                          "required": [
                            "description",
                            "direction",
                            "name",
                            "protocol"
                          ],
                          "properties": {
                            "description": {
                              "description": "A description for this rule. Restricted to 140 chars.",
                              "type": "string"
                            },
                            "destination": {
                              "description": "Destination is the destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
                              "type": "string"
                            },
                            "destinationPorts": {
                              "description": "DestinationPorts specifies the destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                              "type": "string"
                            },
                            "direction": {
                              "description": "Direction indicates whether the rule applies to inbound, or outbound traffic. \"Inbound\" or \"Outbound\".",
                              "type": "string",
                              "enum": [
                                "Inbound",
                                "Outbound"
                              ]
                            },
                            "name": {
                              "description": "Name is a unique name within the network security group.",
                              "type": "string"
                            },
                            "priority": {
                              "description": "Priority is a number between 100 and 4096. Each rule should have a unique value for priority. Rules are processed in priority order, with lower numbers processed before higher numbers. Once traffic matches a rule, processing stops.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "protocol": {
                              "description": "Protocol specifies the protocol type. \"Tcp\", \"Udp\", \"Icmp\", or \"*\".",
                              "type": "string",
                              "enum": [
                                "Tcp",
                                "Udp",
                                "Icmp",
                                "*"
                              ]
                            },
                            "source": {
                              "description": "Source specifies the CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.",
                              "type": "string"
                            },
                            "sourcePorts": {
                              "description": "SourcePorts specifies source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "tags": {
                        "description": "Tags defines a map of tags.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "vnet": {
              "description": "Vnet is the configuration for the Azure virtual network.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "cidrBlocks": {
                  "description": "CIDRBlocks defines the virtual network's address space, specified as one or more address prefixes in CIDR notation.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "id": {
                  "description": "ID is the identifier of the virtual network this provider should use to create resources.",
                  "type": "string"
                },
                "name": {
                  "description": "Name defines a name for the virtual network resource.",
                  "type": "string"
                },
                "resourceGroup": {
                  "description": "ResourceGroup is the name of the resource group of the existing virtual network or the resource group where a managed virtual network should be created.",
                  "type": "string"
                },
                "tags": {
                  "description": "Tags is a collection of tags describing the resource.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "resourceGroup": {
          "type": "string"
        },
        "subscriptionID": {
          "type": "string"
        }
      }
    }
  }
}