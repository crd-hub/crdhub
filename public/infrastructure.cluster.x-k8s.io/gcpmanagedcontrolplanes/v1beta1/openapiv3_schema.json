{
  "$schema": "http://json-schema.org/schema#",
  "description": "GCPManagedControlPlane is the Schema for the gcpmanagedcontrolplanes API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "infrastructure.cluster.x-k8s.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "GCPManagedControlPlane"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "GCPManagedControlPlaneSpec defines the desired state of GCPManagedControlPlane.",
      "type": "object",
      "required": [
        "location",
        "project"
      ],
      "properties": {
        "clusterName": {
          "description": "ClusterName allows you to specify the name of the GKE cluster.\nIf you don't specify a name then a default name will be created\nbased on the namespace and name of the managed control plane.",
          "type": "string"
        },
        "controlPlaneVersion": {
          "description": "ControlPlaneVersion represents the control plane version of the GKE cluster.\nIf not specified, the default version currently supported by GKE will be\nused.",
          "type": "string"
        },
        "enableAutopilot": {
          "description": "EnableAutopilot indicates whether to enable autopilot for this GKE cluster.",
          "type": "boolean"
        },
        "endpoint": {
          "description": "Endpoint represents the endpoint used to communicate with the control plane.",
          "type": "object",
          "required": [
            "host",
            "port"
          ],
          "properties": {
            "host": {
              "description": "The hostname on which the API server is serving.",
              "type": "string"
            },
            "port": {
              "description": "The port on which the API server is serving.",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "location": {
          "description": "Location represents the location (region or zone) in which the GKE cluster\nwill be created.",
          "type": "string"
        },
        "master_authorized_networks_config": {
          "description": "MasterAuthorizedNetworksConfig represents configuration options for master authorized networks feature of the GKE cluster.\nThis feature is disabled if this field is not specified.",
          "type": "object",
          "properties": {
            "cidr_blocks": {
              "description": "cidr_blocks define up to 50 external networks that could access\nKubernetes master through HTTPS.",
              "type": "array",
              "items": {
                "description": "MasterAuthorizedNetworksConfigCidrBlock contains an optional name and one CIDR block.",
                "type": "object",
                "properties": {
                  "cidr_block": {
                    "description": "cidr_block must be specified in CIDR notation.",
                    "type": "string",
                    "pattern": "^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}(?:\\/([0-9]|[1-2][0-9]|3[0-2]))?$|^([a-fA-F0-9:]+:+)+[a-fA-F0-9]+\\/[0-9]{1,3}$"
                  },
                  "display_name": {
                    "description": "display_name is an field for users to identify CIDR blocks.",
                    "type": "string"
                  }
                }
              }
            },
            "gcp_public_cidrs_access_enabled": {
              "description": "Whether master is accessible via Google Compute Engine Public IP addresses.",
              "type": "boolean"
            }
          }
        },
        "project": {
          "description": "Project is the name of the project to deploy the cluster to.",
          "type": "string"
        },
        "releaseChannel": {
          "description": "ReleaseChannel represents the release channel of the GKE cluster.",
          "type": "string",
          "enum": [
            "rapid",
            "regular",
            "stable"
          ]
        }
      }
    }
  }
}