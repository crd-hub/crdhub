{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "clusters.alloydb.gcp.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "alloydb.gcp.upbound.io",
    "names": {
      "plural": "clusters",
      "singular": "cluster",
      "kind": "Cluster",
      "listKind": "ClusterList",
      "categories": [
        "crossplane",
        "managed",
        "gcp"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "Cluster is the Schema for the Clusters API. A managed alloydb cluster.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "ClusterSpec defines the desired state of Cluster",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "required": [
                      "location"
                    ],
                    "properties": {
                      "automatedBackupPolicy": {
                        "description": "The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "backupWindow": {
                              "description": "The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed. The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Whether automated backups are enabled.",
                              "type": "boolean"
                            },
                            "encryptionConfig": {
                              "description": "EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "kmsKeyName": {
                                    "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "labels": {
                              "description": "Labels to apply to backups created using this configuration.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "location": {
                              "description": "The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.",
                              "type": "string"
                            },
                            "quantityBasedRetention": {
                              "description": "Quantity-based Backup retention policy to retain recent backups. Conflicts with 'time_based_retention', both can't be set together. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "description": "The number of backups to retain.",
                                    "type": "number"
                                  }
                                }
                              }
                            },
                            "timeBasedRetention": {
                              "description": "Time-based Backup retention policy. Conflicts with 'quantity_based_retention', both can't be set together. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "retentionPeriod": {
                                    "description": "The retention period. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "weeklySchedule": {
                              "description": "Weekly schedule for the Backup. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "daysOfWeek": {
                                    "description": "The days of the week to perform a backup. At least one day of the week must be provided. Each value may be one of: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "startTimes": {
                                    "description": "The times during the day to start a backup. At least one start time must be provided. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00). Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "hours": {
                                          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                                          "type": "number"
                                        },
                                        "minutes": {
                                          "description": "Minutes of hour of day. Currently, only the value 0 is supported.",
                                          "type": "number"
                                        },
                                        "nanos": {
                                          "description": "Fractions of seconds in nanoseconds. Currently, only the value 0 is supported.",
                                          "type": "number"
                                        },
                                        "seconds": {
                                          "description": "Seconds of minutes of the time. Currently, only the value 0 is supported.",
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "continuousBackupConfig": {
                        "description": "The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The default policy takes one backup a day and retains backups for 14 days. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Whether continuous backup recovery is enabled. If not set, defaults to true.",
                              "type": "boolean"
                            },
                            "encryptionConfig": {
                              "description": "EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "kmsKeyName": {
                                    "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "recoveryWindowDays": {
                              "description": "The numbers of days that are eligible to restore from using PITR. To support the entire recovery window, backups and logs are retained for one day more than the recovery window. If not set, defaults to 14 days.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "displayName": {
                        "description": "User-settable and human-readable display name for the Cluster.",
                        "type": "string"
                      },
                      "encryptionConfig": {
                        "description": "EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "kmsKeyName": {
                              "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "initialUser": {
                        "description": "Initial user to setup during cluster creation. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "passwordSecretRef"
                          ],
                          "properties": {
                            "passwordSecretRef": {
                              "description": "The initial password for the user. Note: This property is sensitive and will not be displayed in the plan.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              }
                            },
                            "user": {
                              "description": "The database username.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "labels": {
                        "description": "User-defined labels for the alloydb cluster.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "description": "The location where the alloydb cluster should reside.",
                        "type": "string"
                      },
                      "network": {
                        "description": "The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form: \"projects/{projectNumber}/global/networks/{network_id}\".",
                        "type": "string"
                      },
                      "networkRef": {
                        "description": "Reference to a Network in compute to populate network.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "networkSelector": {
                        "description": "Selector for a Network in compute to populate network.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "automatedBackupPolicy": {
                        "description": "The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "backupWindow": {
                              "description": "The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed. The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Whether automated backups are enabled.",
                              "type": "boolean"
                            },
                            "encryptionConfig": {
                              "description": "EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "kmsKeyName": {
                                    "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "labels": {
                              "description": "Labels to apply to backups created using this configuration.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "quantityBasedRetention": {
                              "description": "Quantity-based Backup retention policy to retain recent backups. Conflicts with 'time_based_retention', both can't be set together. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "description": "The number of backups to retain.",
                                    "type": "number"
                                  }
                                }
                              }
                            },
                            "timeBasedRetention": {
                              "description": "Time-based Backup retention policy. Conflicts with 'quantity_based_retention', both can't be set together. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "retentionPeriod": {
                                    "description": "The retention period. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "weeklySchedule": {
                              "description": "Weekly schedule for the Backup. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "daysOfWeek": {
                                    "description": "The days of the week to perform a backup. At least one day of the week must be provided. Each value may be one of: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "startTimes": {
                                    "description": "The times during the day to start a backup. At least one start time must be provided. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00). Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "hours": {
                                          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                                          "type": "number"
                                        },
                                        "minutes": {
                                          "description": "Minutes of hour of day. Currently, only the value 0 is supported.",
                                          "type": "number"
                                        },
                                        "nanos": {
                                          "description": "Fractions of seconds in nanoseconds. Currently, only the value 0 is supported.",
                                          "type": "number"
                                        },
                                        "seconds": {
                                          "description": "Seconds of minutes of the time. Currently, only the value 0 is supported.",
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "continuousBackupConfig": {
                        "description": "The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The default policy takes one backup a day and retains backups for 14 days. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Whether continuous backup recovery is enabled. If not set, defaults to true.",
                              "type": "boolean"
                            },
                            "encryptionConfig": {
                              "description": "EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "kmsKeyName": {
                                    "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "recoveryWindowDays": {
                              "description": "The numbers of days that are eligible to restore from using PITR. To support the entire recovery window, backups and logs are retained for one day more than the recovery window. If not set, defaults to 14 days.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "displayName": {
                        "description": "User-settable and human-readable display name for the Cluster.",
                        "type": "string"
                      },
                      "encryptionConfig": {
                        "description": "EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "kmsKeyName": {
                              "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "initialUser": {
                        "description": "Initial user to setup during cluster creation. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "description": "The database username.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "labels": {
                        "description": "User-defined labels for the alloydb cluster.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "ClusterStatus defines the observed state of Cluster.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "automatedBackupPolicy": {
                        "description": "The automated backup policy for this cluster. AutomatedBackupPolicy is disabled by default. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "backupWindow": {
                              "description": "The length of the time window during which a backup can be taken. If a backup does not succeed within this time window, it will be canceled and considered failed. The backup window must be at least 5 minutes long. There is no upper bound on the window. If not set, it will default to 1 hour. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
                              "type": "string"
                            },
                            "enabled": {
                              "description": "Whether automated backups are enabled.",
                              "type": "boolean"
                            },
                            "encryptionConfig": {
                              "description": "EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "kmsKeyName": {
                                    "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "labels": {
                              "description": "Labels to apply to backups created using this configuration.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "location": {
                              "description": "The location where the backup will be stored. Currently, the only supported option is to store the backup in the same region as the cluster.",
                              "type": "string"
                            },
                            "quantityBasedRetention": {
                              "description": "Quantity-based Backup retention policy to retain recent backups. Conflicts with 'time_based_retention', both can't be set together. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "description": "The number of backups to retain.",
                                    "type": "number"
                                  }
                                }
                              }
                            },
                            "timeBasedRetention": {
                              "description": "Time-based Backup retention policy. Conflicts with 'quantity_based_retention', both can't be set together. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "retentionPeriod": {
                                    "description": "The retention period. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "weeklySchedule": {
                              "description": "Weekly schedule for the Backup. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "daysOfWeek": {
                                    "description": "The days of the week to perform a backup. At least one day of the week must be provided. Each value may be one of: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "startTimes": {
                                    "description": "The times during the day to start a backup. At least one start time must be provided. The start times are assumed to be in UTC and to be an exact hour (e.g., 04:00:00). Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "hours": {
                                          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                                          "type": "number"
                                        },
                                        "minutes": {
                                          "description": "Minutes of hour of day. Currently, only the value 0 is supported.",
                                          "type": "number"
                                        },
                                        "nanos": {
                                          "description": "Fractions of seconds in nanoseconds. Currently, only the value 0 is supported.",
                                          "type": "number"
                                        },
                                        "seconds": {
                                          "description": "Seconds of minutes of the time. Currently, only the value 0 is supported.",
                                          "type": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "backupSource": {
                        "description": "Cluster created from backup. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "backupName": {
                              "description": "The name of the backup resource.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "continuousBackupConfig": {
                        "description": "The continuous backup config for this cluster. If no policy is provided then the default policy will be used. The default policy takes one backup a day and retains backups for 14 days. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enabled": {
                              "description": "Whether continuous backup recovery is enabled. If not set, defaults to true.",
                              "type": "boolean"
                            },
                            "encryptionConfig": {
                              "description": "EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "kmsKeyName": {
                                    "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "recoveryWindowDays": {
                              "description": "The numbers of days that are eligible to restore from using PITR. To support the entire recovery window, backups and logs are retained for one day more than the recovery window. If not set, defaults to 14 days.",
                              "type": "number"
                            }
                          }
                        }
                      },
                      "continuousBackupInfo": {
                        "description": "ContinuousBackupInfo describes the continuous backup properties of a cluster. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "earliestRestorableTime": {
                              "description": "(Output) The earliest restorable time that can be restored to. Output only field.",
                              "type": "string"
                            },
                            "enabledTime": {
                              "description": "(Output) When ContinuousBackup was most recently enabled. Set to null if ContinuousBackup is not enabled.",
                              "type": "string"
                            },
                            "encryptionInfo": {
                              "description": "(Output) Output only. The encryption information for the WALs and backups required for ContinuousBackup. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "encryptionType": {
                                    "description": "(Output) Output only. Type of encryption.",
                                    "type": "string"
                                  },
                                  "kmsKeyVersions": {
                                    "description": "(Output) Output only. Cloud KMS key versions that are being used to protect the database or the backup.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "schedule": {
                              "description": "(Output) Days of the week on which a continuous backup is taken. Output only field. Ignored if passed into the request.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "databaseVersion": {
                        "description": "The database engine major version. This is an output-only field and it's populated at the Cluster creation time. This field cannot be changed after cluster creation.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "User-settable and human-readable display name for the Cluster.",
                        "type": "string"
                      },
                      "encryptionConfig": {
                        "description": "EncryptionConfig describes the encryption config of a cluster or a backup that is encrypted with a CMEK (customer-managed encryption key). Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "kmsKeyName": {
                              "description": "The fully-qualified resource name of the KMS key. Each Cloud KMS key is regionalized and has the following format: projects/[PROJECT]/locations/[REGION]/keyRings/[RING]/cryptoKeys/[KEY_NAME].",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "encryptionInfo": {
                        "description": "EncryptionInfo describes the encryption information of a cluster or a backup. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "encryptionType": {
                              "description": "(Output) Output only. Type of encryption.",
                              "type": "string"
                            },
                            "kmsKeyVersions": {
                              "description": "(Output) Output only. Cloud KMS key versions that are being used to protect the database or the backup.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "description": "an identifier for the resource with format projects/{{project}}/locations/{{location}}/clusters/{{cluster_id}}",
                        "type": "string"
                      },
                      "initialUser": {
                        "description": "Initial user to setup during cluster creation. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "user": {
                              "description": "The database username.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "labels": {
                        "description": "User-defined labels for the alloydb cluster.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "location": {
                        "description": "The location where the alloydb cluster should reside.",
                        "type": "string"
                      },
                      "migrationSource": {
                        "description": "Cluster created via DMS migration. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "hostPort": {
                              "description": "The host and port of the on-premises instance in host:port format",
                              "type": "string"
                            },
                            "referenceId": {
                              "description": "Place holder for the external source identifier(e.g DMS job name) that created the cluster.",
                              "type": "string"
                            },
                            "sourceType": {
                              "description": "Type of migration source.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "name": {
                        "description": "The name of the cluster resource.",
                        "type": "string"
                      },
                      "network": {
                        "description": "The relative resource name of the VPC network on which the instance can be accessed. It is specified in the following form: \"projects/{projectNumber}/global/networks/{network_id}\".",
                        "type": "string"
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "uid": {
                        "description": "The system-generated UID of the resource.",
                        "type": "string"
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}