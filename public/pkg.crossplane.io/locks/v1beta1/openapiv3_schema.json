{
  "$schema": "http://json-schema.org/schema#",
  "description": "Lock is the CRD type that tracks package dependencies.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "pkg.crossplane.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "Lock"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "packages": {
      "type": "array",
      "items": {
        "description": "LockPackage is a package that is in the lock.",
        "type": "object",
        "required": [
          "dependencies",
          "name",
          "source",
          "type",
          "version"
        ],
        "properties": {
          "dependencies": {
            "description": "Dependencies are the list of dependencies of this package. The order of the dependencies will dictate the order in which they are resolved.",
            "type": "array",
            "items": {
              "description": "A Dependency is a dependency of a package in the lock.",
              "type": "object",
              "required": [
                "constraints",
                "package",
                "type"
              ],
              "properties": {
                "constraints": {
                  "description": "Constraints is a valid semver range, which will be used to select a valid dependency version.",
                  "type": "string"
                },
                "package": {
                  "description": "Package is the OCI image name without a tag or digest.",
                  "type": "string"
                },
                "type": {
                  "description": "Type is the type of package. Can be either Configuration or Provider.",
                  "type": "string"
                }
              }
            }
          },
          "name": {
            "description": "Name corresponds to the name of the package revision for this package.",
            "type": "string"
          },
          "source": {
            "description": "Source is the OCI image name without a tag or digest.",
            "type": "string"
          },
          "type": {
            "description": "Type is the type of package. Can be either Configuration or Provider.",
            "type": "string"
          },
          "version": {
            "description": "Version is the tag or digest of the OCI image.",
            "type": "string"
          }
        }
      }
    }
  }
}