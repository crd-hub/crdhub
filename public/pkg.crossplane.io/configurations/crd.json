{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "configurations.pkg.crossplane.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.12.1"
    }
  },
  "spec": {
    "group": "pkg.crossplane.io",
    "names": {
      "plural": "configurations",
      "singular": "configuration",
      "kind": "Configuration",
      "listKind": "ConfigurationList",
      "categories": [
        "crossplane",
        "pkg"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "Configuration is the CRD type for a request to add a configuration to Crossplane.",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "ConfigurationSpec specifies details about a request to install a configuration to Crossplane.",
                "type": "object",
                "required": [
                  "package"
                ],
                "properties": {
                  "commonLabels": {
                    "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "ignoreCrossplaneConstraints": {
                    "description": "IgnoreCrossplaneConstraints indicates to the package manager whether to honor Crossplane version constrains specified by the package. Default is false.",
                    "type": "boolean",
                    "default": false
                  },
                  "package": {
                    "description": "Package is the name of the package that is being requested.",
                    "type": "string"
                  },
                  "packagePullPolicy": {
                    "description": "PackagePullPolicy defines the pull policy for the package. Default is IfNotPresent.",
                    "type": "string",
                    "default": "IfNotPresent"
                  },
                  "packagePullSecrets": {
                    "description": "PackagePullSecrets are named secrets in the same namespace that can be used to fetch packages from private registries.",
                    "type": "array",
                    "items": {
                      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                          "type": "string"
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "revisionActivationPolicy": {
                    "description": "RevisionActivationPolicy specifies how the package controller should update from one revision to the next. Options are Automatic or Manual. Default is Automatic.",
                    "type": "string",
                    "default": "Automatic"
                  },
                  "revisionHistoryLimit": {
                    "description": "RevisionHistoryLimit dictates how the package controller cleans up old inactive package revisions. Defaults to 1. Can be disabled by explicitly setting to 0.",
                    "type": "integer",
                    "format": "int64",
                    "default": 1
                  },
                  "skipDependencyResolution": {
                    "description": "SkipDependencyResolution indicates to the package manager whether to skip resolving dependencies for a package. Setting this value to true may have unintended consequences. Default is false.",
                    "type": "boolean",
                    "default": false
                  }
                }
              },
              "status": {
                "description": "ConfigurationStatus represents the observed state of a Configuration.",
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "currentIdentifier": {
                    "description": "CurrentIdentifier is the most recent package source that was used to produce a revision. The package manager uses this field to determine whether to check for package updates for a given source when packagePullPolicy is set to IfNotPresent. Manually removing this field will cause the package manager to check that the current revision is correct for the given package source.",
                    "type": "string"
                  },
                  "currentRevision": {
                    "description": "CurrentRevision is the name of the current package revision. It will reflect the most up to date revision, whether it has been activated or not.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "INSTALLED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Installed')].status"
          },
          {
            "name": "HEALTHY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Healthy')].status"
          },
          {
            "name": "PACKAGE",
            "type": "string",
            "jsonPath": ".spec.package"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}