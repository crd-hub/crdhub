{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "selfsubjectnamespaceaccessreviews.identity.k8s.appscode.com",
    "creationTimestamp": null
  },
  "spec": {
    "group": "identity.k8s.appscode.com",
    "names": {
      "plural": "selfsubjectnamespaceaccessreviews",
      "singular": "selfsubjectnamespaceaccessreview",
      "kind": "SelfSubjectNamespaceAccessReview",
      "listKind": "SelfSubjectNamespaceAccessReviewList"
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1alpha1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "Spec holds information about the request being evaluated.  user and groups must be empty",
                "type": "object",
                "properties": {
                  "nonResourceAttributes": {
                    "description": "NonResourceAttributes describes information for a non-resource access request",
                    "type": "array",
                    "items": {
                      "description": "NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface",
                      "type": "object",
                      "properties": {
                        "path": {
                          "description": "Path is the URL path of the request",
                          "type": "string"
                        },
                        "verb": {
                          "description": "Verb is the standard HTTP verb",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "resourceAttributes": {
                    "description": "ResourceAuthorizationAttributes describes information for a resource access request",
                    "type": "array",
                    "items": {
                      "description": "ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface",
                      "type": "object",
                      "properties": {
                        "fieldSelector": {
                          "description": "fieldSelector describes the limitation on access based on field.  It can only limit access, not broaden it.\n\nThis field  is alpha-level. To use this field, you must enable the\n`AuthorizeWithSelectors` feature gate (disabled by default).",
                          "type": "object",
                          "properties": {
                            "rawSelector": {
                              "description": "rawSelector is the serialization of a field selector that would be included in a query parameter.\nWebhook implementations are encouraged to ignore rawSelector.\nThe kube-apiserver's *SubjectAccessReview will parse the rawSelector as long as the requirements are not present.",
                              "type": "string"
                            },
                            "requirements": {
                              "description": "requirements is the parsed interpretation of a field selector.\nAll requirements must be met for a resource instance to match the selector.\nWebhook implementations should handle requirements, but how to handle them is up to the webhook.\nSince requirements can only limit the request, it is safe to authorize as unlimited request if the requirements\nare not understood.",
                              "type": "array",
                              "items": {
                                "description": "FieldSelectorRequirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "operator"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the field selector key that the requirement applies to.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist.\nThe list of operators may grow in the future.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "values is an array of string values.\nIf the operator is In or NotIn, the values array must be non-empty.\nIf the operator is Exists or DoesNotExist, the values array must be empty.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "group": {
                          "description": "Group is the API Group of the Resource.  \"*\" means all.",
                          "type": "string"
                        },
                        "labelSelector": {
                          "description": "labelSelector describes the limitation on access based on labels.  It can only limit access, not broaden it.\n\nThis field  is alpha-level. To use this field, you must enable the\n`AuthorizeWithSelectors` feature gate (disabled by default).",
                          "type": "object",
                          "properties": {
                            "rawSelector": {
                              "description": "rawSelector is the serialization of a field selector that would be included in a query parameter.\nWebhook implementations are encouraged to ignore rawSelector.\nThe kube-apiserver's *SubjectAccessReview will parse the rawSelector as long as the requirements are not present.",
                              "type": "string"
                            },
                            "requirements": {
                              "description": "requirements is the parsed interpretation of a label selector.\nAll requirements must be met for a resource instance to match the selector.\nWebhook implementations should handle requirements, but how to handle them is up to the webhook.\nSince requirements can only limit the request, it is safe to authorize as unlimited request if the requirements\nare not understood.",
                              "type": "array",
                              "items": {
                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "operator"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the label key that the selector applies to.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "name": {
                          "description": "Name is the name of the resource being requested for a \"get\" or deleted for a \"delete\". \"\" (empty) means all.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces\n\"\" (empty) is defaulted for LocalSubjectAccessReviews\n\"\" (empty) is empty for cluster-scoped resources\n\"\" (empty) means \"all\" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview",
                          "type": "string"
                        },
                        "resource": {
                          "description": "Resource is one of the existing resource types.  \"*\" means all.",
                          "type": "string"
                        },
                        "subresource": {
                          "description": "Subresource is one of the existing resource types.  \"\" means none.",
                          "type": "string"
                        },
                        "verb": {
                          "description": "Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  \"*\" means all.",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version is the API Version of the Resource.  \"*\" means all.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "Status is filled in by the server and indicates whether the request is allowed or not",
                "type": "object",
                "required": [
                  "allNamespaces"
                ],
                "properties": {
                  "allNamespaces": {
                    "type": "boolean"
                  },
                  "namespaces": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "projects": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}