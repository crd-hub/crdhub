{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "constraintpodstatuses.status.gatekeeper.sh",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.10.0"
    }
  },
  "spec": {
    "group": "status.gatekeeper.sh",
    "names": {
      "plural": "constraintpodstatuses",
      "singular": "constraintpodstatus",
      "kind": "ConstraintPodStatus",
      "listKind": "ConstraintPodStatusList"
    },
    "scope": "Namespaced",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "ConstraintPodStatus is the Schema for the constraintpodstatuses API.",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "status": {
                "description": "ConstraintPodStatusStatus defines the observed state of ConstraintPodStatus.",
                "type": "object",
                "properties": {
                  "constraintUID": {
                    "description": "Storing the constraint UID allows us to detect drift, such as when a constraint has been recreated after its CRD was deleted out from under it, interrupting the watch",
                    "type": "string"
                  },
                  "enforced": {
                    "type": "boolean"
                  },
                  "errors": {
                    "type": "array",
                    "items": {
                      "description": "Error represents a single error caught while adding a constraint to OPA.",
                      "type": "object",
                      "required": [
                        "code",
                        "message"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "location": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "observedGeneration": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "operations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}