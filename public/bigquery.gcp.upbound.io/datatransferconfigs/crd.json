{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "datatransferconfigs.bigquery.gcp.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "bigquery.gcp.upbound.io",
    "names": {
      "plural": "datatransferconfigs",
      "singular": "datatransferconfig",
      "kind": "DataTransferConfig",
      "listKind": "DataTransferConfigList",
      "categories": [
        "crossplane",
        "managed",
        "gcp"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "DataTransferConfig is the Schema for the DataTransferConfigs API. Represents a data transfer configuration.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "DataTransferConfigSpec defines the desired state of DataTransferConfig",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "properties": {
                      "dataRefreshWindowDays": {
                        "description": "The number of days to look back to automatically refresh the data. For example, if dataRefreshWindowDays = 10, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
                        "type": "number"
                      },
                      "dataSourceId": {
                        "description": "The data source id. Cannot be changed once the transfer config is created.",
                        "type": "string"
                      },
                      "destinationDatasetId": {
                        "description": "The BigQuery target dataset id.",
                        "type": "string"
                      },
                      "destinationDatasetIdRef": {
                        "description": "Reference to a Dataset in bigquery to populate destinationDatasetId.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "destinationDatasetIdSelector": {
                        "description": "Selector for a Dataset in bigquery to populate destinationDatasetId.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "disabled": {
                        "description": "When set to true, no runs are scheduled for a given transfer.",
                        "type": "boolean"
                      },
                      "displayName": {
                        "description": "The user specified display name for the transfer config.",
                        "type": "string"
                      },
                      "emailPreferences": {
                        "description": "Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enableFailureEmail": {
                              "description": "If true, email notifications will be sent on transfer run failures.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "The geographic location where the transfer config should reside. Examples: US, EU, asia-northeast1. The default value is US.",
                        "type": "string"
                      },
                      "notificationPubsubTopic": {
                        "description": "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish.",
                        "type": "string"
                      },
                      "params": {
                        "description": "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq NOTE : If you are attempting to update a parameter that cannot be updated (due to api limitations) please force recreation of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "schedule": {
                        "description": "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: 1st,3rd monday of month 15:30, every wed,fri of jan, jun 13:15, and first sunday of quarter 00:00. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: the granularity should be at least 8 hours, or less frequent.",
                        "type": "string"
                      },
                      "scheduleOptions": {
                        "description": "Options customizing the data transfer schedule. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "disableAutoScheduling": {
                              "description": "If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using transferConfigs.startManualRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored.",
                              "type": "boolean"
                            },
                            "endTime": {
                              "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be triggered manually is not limited by this option.",
                              "type": "string"
                            },
                            "startTime": {
                              "description": "Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be triggered manually is not limited by this option.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "sensitiveParams": {
                        "description": "Different parameters are configured primarily using the the params field on this resource. This block contains the parameters which contain secrets or passwords so that they can be marked sensitive and hidden from plan output. The name of the field, eg: secret_access_key, will be the key in the params map in the api request. Credentials may not be specified in both locations and will cause an error. Changing from one location to a different credential configuration in the config will require an apply to update state. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "secretAccessKeySecretRef"
                          ],
                          "properties": {
                            "secretAccessKeySecretRef": {
                              "description": "The Secret Access Key of the AWS account transferring data from. Note: This property is sensitive and will not be displayed in the plan.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "serviceAccountName": {
                        "description": "Service account email. If this field is set, transfer config will be created with this service account credentials. It requires that requesting user calling this API has permissions to act as this service account.",
                        "type": "string"
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "dataRefreshWindowDays": {
                        "description": "The number of days to look back to automatically refresh the data. For example, if dataRefreshWindowDays = 10, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
                        "type": "number"
                      },
                      "dataSourceId": {
                        "description": "The data source id. Cannot be changed once the transfer config is created.",
                        "type": "string"
                      },
                      "disabled": {
                        "description": "When set to true, no runs are scheduled for a given transfer.",
                        "type": "boolean"
                      },
                      "displayName": {
                        "description": "The user specified display name for the transfer config.",
                        "type": "string"
                      },
                      "emailPreferences": {
                        "description": "Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enableFailureEmail": {
                              "description": "If true, email notifications will be sent on transfer run failures.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "location": {
                        "description": "The geographic location where the transfer config should reside. Examples: US, EU, asia-northeast1. The default value is US.",
                        "type": "string"
                      },
                      "notificationPubsubTopic": {
                        "description": "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish.",
                        "type": "string"
                      },
                      "params": {
                        "description": "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq NOTE : If you are attempting to update a parameter that cannot be updated (due to api limitations) please force recreation of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "schedule": {
                        "description": "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: 1st,3rd monday of month 15:30, every wed,fri of jan, jun 13:15, and first sunday of quarter 00:00. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: the granularity should be at least 8 hours, or less frequent.",
                        "type": "string"
                      },
                      "scheduleOptions": {
                        "description": "Options customizing the data transfer schedule. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "disableAutoScheduling": {
                              "description": "If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using transferConfigs.startManualRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored.",
                              "type": "boolean"
                            },
                            "endTime": {
                              "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be triggered manually is not limited by this option.",
                              "type": "string"
                            },
                            "startTime": {
                              "description": "Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be triggered manually is not limited by this option.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "sensitiveParams": {
                        "description": "Different parameters are configured primarily using the the params field on this resource. This block contains the parameters which contain secrets or passwords so that they can be marked sensitive and hidden from plan output. The name of the field, eg: secret_access_key, will be the key in the params map in the api request. Credentials may not be specified in both locations and will cause an error. Changing from one location to a different credential configuration in the config will require an apply to update state. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "serviceAccountName": {
                        "description": "Service account email. If this field is set, transfer config will be created with this service account credentials. It requires that requesting user calling this API has permissions to act as this service account.",
                        "type": "string"
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dataSourceId) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.dataSourceId))",
                    "message": "spec.forProvider.dataSourceId is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.displayName))",
                    "message": "spec.forProvider.displayName is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.params) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.params))",
                    "message": "spec.forProvider.params is a required parameter"
                  }
                ]
              },
              "status": {
                "description": "DataTransferConfigStatus defines the observed state of DataTransferConfig.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "dataRefreshWindowDays": {
                        "description": "The number of days to look back to automatically refresh the data. For example, if dataRefreshWindowDays = 10, then every day BigQuery reingests data for [today-10, today-1], rather than ingesting data for just [today-1]. Only valid if the data source supports the feature. Set the value to 0 to use the default value.",
                        "type": "number"
                      },
                      "dataSourceId": {
                        "description": "The data source id. Cannot be changed once the transfer config is created.",
                        "type": "string"
                      },
                      "destinationDatasetId": {
                        "description": "The BigQuery target dataset id.",
                        "type": "string"
                      },
                      "disabled": {
                        "description": "When set to true, no runs are scheduled for a given transfer.",
                        "type": "boolean"
                      },
                      "displayName": {
                        "description": "The user specified display name for the transfer config.",
                        "type": "string"
                      },
                      "emailPreferences": {
                        "description": "Email notifications will be sent according to these preferences to the email address of the user who owns this transfer config. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "enableFailureEmail": {
                              "description": "If true, email notifications will be sent on transfer run failures.",
                              "type": "boolean"
                            }
                          }
                        }
                      },
                      "id": {
                        "description": "an identifier for the resource with format {{name}}",
                        "type": "string"
                      },
                      "location": {
                        "description": "The geographic location where the transfer config should reside. Examples: US, EU, asia-northeast1. The default value is US.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The resource name of the transfer config. Transfer config names have the form projects/{projectId}/locations/{location}/transferConfigs/{configId}. Where configId is usually a uuid, but this is not required. The name is ignored when creating a transfer config.",
                        "type": "string"
                      },
                      "notificationPubsubTopic": {
                        "description": "Pub/Sub topic where notifications will be sent after transfer runs associated with this transfer config finish.",
                        "type": "string"
                      },
                      "params": {
                        "description": "Parameters specific to each data source. For more information see the bq tab in the 'Setting up a data transfer' section for each data source. For example the parameters for Cloud Storage transfers are listed here: https://cloud.google.com/bigquery-transfer/docs/cloud-storage-transfer#bq NOTE : If you are attempting to update a parameter that cannot be updated (due to api limitations) please force recreation of the resource.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "schedule": {
                        "description": "Data transfer schedule. If the data source does not support a custom schedule, this should be empty. If it is empty, the default value for the data source will be used. The specified times are in UTC. Examples of valid format: 1st,3rd monday of month 15:30, every wed,fri of jan, jun 13:15, and first sunday of quarter 00:00. See more explanation about the format here: https://cloud.google.com/appengine/docs/flexible/python/scheduling-jobs-with-cron-yaml#the_schedule_format NOTE: the granularity should be at least 8 hours, or less frequent.",
                        "type": "string"
                      },
                      "scheduleOptions": {
                        "description": "Options customizing the data transfer schedule. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "disableAutoScheduling": {
                              "description": "If true, automatic scheduling of data transfer runs for this configuration will be disabled. The runs can be started on ad-hoc basis using transferConfigs.startManualRuns API. When automatic scheduling is disabled, the TransferConfig.schedule field will be ignored.",
                              "type": "boolean"
                            },
                            "endTime": {
                              "description": "Defines time to stop scheduling transfer runs. A transfer run cannot be scheduled at or after the end time. The end time can be changed at any moment. The time when a data transfer can be triggered manually is not limited by this option.",
                              "type": "string"
                            },
                            "startTime": {
                              "description": "Specifies time to start scheduling transfer runs. The first run will be scheduled at or after the start time according to a recurrence pattern defined in the schedule string. The start time can be changed at any moment. The time when a data transfer can be triggered manually is not limited by this option.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "sensitiveParams": {
                        "description": "Different parameters are configured primarily using the the params field on this resource. This block contains the parameters which contain secrets or passwords so that they can be marked sensitive and hidden from plan output. The name of the field, eg: secret_access_key, will be the key in the params map in the api request. Credentials may not be specified in both locations and will cause an error. Changing from one location to a different credential configuration in the config will require an apply to update state. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "secretAccessKeySecretRef"
                          ],
                          "properties": {
                            "secretAccessKeySecretRef": {
                              "description": "The Secret Access Key of the AWS account transferring data from. Note: This property is sensitive and will not be displayed in the plan.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "serviceAccountName": {
                        "description": "Service account email. If this field is set, transfer config will be created with this service account credentials. It requires that requesting user calling this API has permissions to act as this service account.",
                        "type": "string"
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}