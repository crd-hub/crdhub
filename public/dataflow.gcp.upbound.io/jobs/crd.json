{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "jobs.dataflow.gcp.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "dataflow.gcp.upbound.io",
    "names": {
      "plural": "jobs",
      "singular": "job",
      "kind": "Job",
      "listKind": "JobList",
      "categories": [
        "crossplane",
        "managed",
        "gcp"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "Job is the Schema for the Jobs API. Creates a job in Dataflow according to a provided config file.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "JobSpec defines the desired state of Job",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "properties": {
                      "additionalExperiments": {
                        "description": "List of experiments that should be used by the job. An example value is [\"enable_stackdriver_agent_metrics\"].",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "enableStreamingEngine": {
                        "description": "Enable/disable the use of Streaming Engine for the job. Note that Streaming Engine is enabled by default for pipelines developed against the Beam SDK for Python v2.21.0 or later when using Python 3.",
                        "type": "boolean"
                      },
                      "ipConfiguration": {
                        "description": "The configuration for VM IPs.  Options are \"WORKER_IP_PUBLIC\" or \"WORKER_IP_PRIVATE\".",
                        "type": "string"
                      },
                      "kmsKeyName": {
                        "description": "The name for the Cloud KMS key for the job. Key format is: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY",
                        "type": "string"
                      },
                      "labels": {
                        "description": "User labels to be specified for the job. Keys and values should follow the restrictions specified in the labeling restrictions page. NOTE: Google-provided Dataflow templates often provide default labels that begin with goog-dataflow-provided. Unless explicitly set in config, these labels will be ignored to prevent diffs on re-apply.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "machineType": {
                        "description": "The machine type to use for the job.",
                        "type": "string"
                      },
                      "maxWorkers": {
                        "description": "The number of workers permitted to work on the job.  More workers may improve processing speed at additional cost.",
                        "type": "number"
                      },
                      "name": {
                        "description": "A unique name for the resource, required by Dataflow.",
                        "type": "string"
                      },
                      "network": {
                        "description": "The network to which VMs will be assigned. If it is not provided, \"default\" will be used.",
                        "type": "string"
                      },
                      "onDelete": {
                        "description": "One of \"drain\" or \"cancel\".  See above note.",
                        "type": "string"
                      },
                      "parameters": {
                        "description": "Key/Value pairs to be passed to the Dataflow job (as used in the template).",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "project": {
                        "description": "The project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "region": {
                        "description": "The region in which the created job should run.",
                        "type": "string"
                      },
                      "serviceAccountEmail": {
                        "description": "The Service Account email used to create the job.",
                        "type": "string"
                      },
                      "skipWaitOnJobTermination": {
                        "description": "See above note.",
                        "type": "boolean"
                      },
                      "subnetwork": {
                        "description": "The subnetwork to which VMs will be assigned. Should be of the form \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL. For example \"googleapis.com/compute/v1/projects/PROJECT_ID/regions/REGION/subnetworks/SUBNET_NAME\"",
                        "type": "string"
                      },
                      "tempGcsLocation": {
                        "description": "A writeable location on GCS for the Dataflow job to dump its temporary data.",
                        "type": "string"
                      },
                      "templateGcsPath": {
                        "description": "The GCS path to the Dataflow job template.",
                        "type": "string"
                      },
                      "transformNameMapping": {
                        "description": "Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the corresponding name prefixes of the new job. This field is not used outside of update.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "zone": {
                        "description": "The zone in which the created job should run. If it is not provided, the provider zone is used.",
                        "type": "string"
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "additionalExperiments": {
                        "description": "List of experiments that should be used by the job. An example value is [\"enable_stackdriver_agent_metrics\"].",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "enableStreamingEngine": {
                        "description": "Enable/disable the use of Streaming Engine for the job. Note that Streaming Engine is enabled by default for pipelines developed against the Beam SDK for Python v2.21.0 or later when using Python 3.",
                        "type": "boolean"
                      },
                      "ipConfiguration": {
                        "description": "The configuration for VM IPs.  Options are \"WORKER_IP_PUBLIC\" or \"WORKER_IP_PRIVATE\".",
                        "type": "string"
                      },
                      "kmsKeyName": {
                        "description": "The name for the Cloud KMS key for the job. Key format is: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY",
                        "type": "string"
                      },
                      "labels": {
                        "description": "User labels to be specified for the job. Keys and values should follow the restrictions specified in the labeling restrictions page. NOTE: Google-provided Dataflow templates often provide default labels that begin with goog-dataflow-provided. Unless explicitly set in config, these labels will be ignored to prevent diffs on re-apply.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "machineType": {
                        "description": "The machine type to use for the job.",
                        "type": "string"
                      },
                      "maxWorkers": {
                        "description": "The number of workers permitted to work on the job.  More workers may improve processing speed at additional cost.",
                        "type": "number"
                      },
                      "name": {
                        "description": "A unique name for the resource, required by Dataflow.",
                        "type": "string"
                      },
                      "network": {
                        "description": "The network to which VMs will be assigned. If it is not provided, \"default\" will be used.",
                        "type": "string"
                      },
                      "onDelete": {
                        "description": "One of \"drain\" or \"cancel\".  See above note.",
                        "type": "string"
                      },
                      "parameters": {
                        "description": "Key/Value pairs to be passed to the Dataflow job (as used in the template).",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "project": {
                        "description": "The project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "region": {
                        "description": "The region in which the created job should run.",
                        "type": "string"
                      },
                      "serviceAccountEmail": {
                        "description": "The Service Account email used to create the job.",
                        "type": "string"
                      },
                      "skipWaitOnJobTermination": {
                        "description": "See above note.",
                        "type": "boolean"
                      },
                      "subnetwork": {
                        "description": "The subnetwork to which VMs will be assigned. Should be of the form \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL. For example \"googleapis.com/compute/v1/projects/PROJECT_ID/regions/REGION/subnetworks/SUBNET_NAME\"",
                        "type": "string"
                      },
                      "tempGcsLocation": {
                        "description": "A writeable location on GCS for the Dataflow job to dump its temporary data.",
                        "type": "string"
                      },
                      "templateGcsPath": {
                        "description": "The GCS path to the Dataflow job template.",
                        "type": "string"
                      },
                      "transformNameMapping": {
                        "description": "Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the corresponding name prefixes of the new job. This field is not used outside of update.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "zone": {
                        "description": "The zone in which the created job should run. If it is not provided, the provider zone is used.",
                        "type": "string"
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
                    "message": "spec.forProvider.name is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tempGcsLocation) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.tempGcsLocation))",
                    "message": "spec.forProvider.tempGcsLocation is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.templateGcsPath) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.templateGcsPath))",
                    "message": "spec.forProvider.templateGcsPath is a required parameter"
                  }
                ]
              },
              "status": {
                "description": "JobStatus defines the observed state of Job.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "additionalExperiments": {
                        "description": "List of experiments that should be used by the job. An example value is [\"enable_stackdriver_agent_metrics\"].",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "enableStreamingEngine": {
                        "description": "Enable/disable the use of Streaming Engine for the job. Note that Streaming Engine is enabled by default for pipelines developed against the Beam SDK for Python v2.21.0 or later when using Python 3.",
                        "type": "boolean"
                      },
                      "id": {
                        "type": "string"
                      },
                      "ipConfiguration": {
                        "description": "The configuration for VM IPs.  Options are \"WORKER_IP_PUBLIC\" or \"WORKER_IP_PRIVATE\".",
                        "type": "string"
                      },
                      "jobId": {
                        "description": "The unique ID of this job.",
                        "type": "string"
                      },
                      "kmsKeyName": {
                        "description": "The name for the Cloud KMS key for the job. Key format is: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY",
                        "type": "string"
                      },
                      "labels": {
                        "description": "User labels to be specified for the job. Keys and values should follow the restrictions specified in the labeling restrictions page. NOTE: Google-provided Dataflow templates often provide default labels that begin with goog-dataflow-provided. Unless explicitly set in config, these labels will be ignored to prevent diffs on re-apply.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "machineType": {
                        "description": "The machine type to use for the job.",
                        "type": "string"
                      },
                      "maxWorkers": {
                        "description": "The number of workers permitted to work on the job.  More workers may improve processing speed at additional cost.",
                        "type": "number"
                      },
                      "name": {
                        "description": "A unique name for the resource, required by Dataflow.",
                        "type": "string"
                      },
                      "network": {
                        "description": "The network to which VMs will be assigned. If it is not provided, \"default\" will be used.",
                        "type": "string"
                      },
                      "onDelete": {
                        "description": "One of \"drain\" or \"cancel\".  See above note.",
                        "type": "string"
                      },
                      "parameters": {
                        "description": "Key/Value pairs to be passed to the Dataflow job (as used in the template).",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "project": {
                        "description": "The project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "region": {
                        "description": "The region in which the created job should run.",
                        "type": "string"
                      },
                      "serviceAccountEmail": {
                        "description": "The Service Account email used to create the job.",
                        "type": "string"
                      },
                      "skipWaitOnJobTermination": {
                        "description": "See above note.",
                        "type": "boolean"
                      },
                      "state": {
                        "description": "The current state of the resource, selected from the JobState enum",
                        "type": "string"
                      },
                      "subnetwork": {
                        "description": "The subnetwork to which VMs will be assigned. Should be of the form \"regions/REGION/subnetworks/SUBNETWORK\". If the subnetwork is located in a Shared VPC network, you must use the complete URL. For example \"googleapis.com/compute/v1/projects/PROJECT_ID/regions/REGION/subnetworks/SUBNET_NAME\"",
                        "type": "string"
                      },
                      "tempGcsLocation": {
                        "description": "A writeable location on GCS for the Dataflow job to dump its temporary data.",
                        "type": "string"
                      },
                      "templateGcsPath": {
                        "description": "The GCS path to the Dataflow job template.",
                        "type": "string"
                      },
                      "transformNameMapping": {
                        "description": "Only applicable when updating a pipeline. Map of transform name prefixes of the job to be replaced with the corresponding name prefixes of the new job. This field is not used outside of update.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "type": {
                        "description": "The type of this job, selected from the JobType enum",
                        "type": "string"
                      },
                      "zone": {
                        "description": "The zone in which the created job should run. If it is not provided, the provider zone is used.",
                        "type": "string"
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}