{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "services.cloudrun.gcp.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "cloudrun.gcp.upbound.io",
    "names": {
      "plural": "services",
      "singular": "service",
      "kind": "Service",
      "listKind": "ServiceList",
      "categories": [
        "crossplane",
        "managed",
        "gcp"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "Service is the Schema for the Services API. A Cloud Run service has a unique endpoint and autoscales containers.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "ServiceSpec defines the desired state of Service",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "required": [
                      "location"
                    ],
                    "properties": {
                      "autogenerateRevisionName": {
                        "description": "If set to true, the revision name (template.metadata.name) will be omitted and autogenerated by Cloud Run. This cannot be set to true while template.metadata.name is also set. (For legacy support, if template.metadata.name is unset in state while this field is set to false, the revision name will still autogenerate.)",
                        "type": "boolean"
                      },
                      "location": {
                        "description": "The location of the cloud run instance. eg us-central1",
                        "type": "string"
                      },
                      "metadata": {
                        "description": "Optional metadata for this Revision, including labels and annotations. Name will be generated by the Configuration. To set minimum instances for this revision, use the \"autoscaling.knative.dev/minScale\" annotation key. To set maximum instances for this revision, use the \"autoscaling.knative.dev/maxScale\" annotation key. To set Cloud SQL connections for the revision, use the \"run.googleapis.com/cloudsql-instances\" annotation key. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "annotations": {
                              "description": "Annotations is a key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field. Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation keys to configure features on a Revision template:",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "labels": {
                              "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "namespace": {
                              "description": "In Cloud Run the namespace must be equal to either the project ID or project number. It will default to the resource's project.",
                              "type": "string"
                            },
                            "namespaceRef": {
                              "description": "Reference to a Project in cloudplatform to populate namespace.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "namespaceSelector": {
                              "description": "Selector for a Project in cloudplatform to populate namespace.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "template": {
                        "description": "template holds the latest specification for the Revision to be stamped out. The template references the container image, and may also include labels and annotations that should be attached to the Revision. To correlate a Revision, and/or to force a Revision to be created when the spec doesn't otherwise change, a nonce label may be provided in the template metadata. For more details, see: https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions Cloud Run does not currently support referencing a build that is responsible for materializing the container image from source. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "metadata": {
                              "description": "Optional metadata for this Revision, including labels and annotations. Name will be generated by the Configuration. To set minimum instances for this revision, use the \"autoscaling.knative.dev/minScale\" annotation key. To set maximum instances for this revision, use the \"autoscaling.knative.dev/maxScale\" annotation key. To set Cloud SQL connections for the revision, use the \"run.googleapis.com/cloudsql-instances\" annotation key. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "description": "Annotations is a key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field. Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation keys to configure features on a Revision template:",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "name": {
                                    "description": "Volume's name.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "In Cloud Run the namespace must be equal to either the project ID or project number. It will default to the resource's project.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "spec": {
                              "description": "RevisionSpec holds the desired state of the Revision (from the client). Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "containerConcurrency": {
                                    "description": "ContainerConcurrency specifies the maximum allowed in-flight (concurrent) requests per container of the Revision. Values are:",
                                    "type": "number"
                                  },
                                  "containers": {
                                    "description": "Containers defines the unit of execution for this Revision. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "args": {
                                          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "command": {
                                          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "env": {
                                          "description": "List of environment variables to set in the container. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Volume's name.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value.",
                                                "type": "string"
                                              },
                                              "valueFrom": {
                                                "description": "Source for the environment variable's value. Only supports secret_key_ref. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "secretKeyRef": {
                                                      "description": "Selects a key (version) of a secret in Secret Manager. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "key": {
                                                            "description": "A Cloud Secret Manager secret version. Must be 'latest' for the latest version or an integer for a specific version.",
                                                            "type": "string"
                                                          },
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          },
                                                          "nameRef": {
                                                            "description": "Reference to a Secret in secretmanager to populate name.",
                                                            "type": "object",
                                                            "required": [
                                                              "name"
                                                            ],
                                                            "properties": {
                                                              "name": {
                                                                "description": "Name of the referenced object.",
                                                                "type": "string"
                                                              },
                                                              "policy": {
                                                                "description": "Policies for referencing.",
                                                                "type": "object",
                                                                "properties": {
                                                                  "resolution": {
                                                                    "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                                                    "type": "string",
                                                                    "default": "Required",
                                                                    "enum": [
                                                                      "Required",
                                                                      "Optional"
                                                                    ]
                                                                  },
                                                                  "resolve": {
                                                                    "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                                                    "type": "string",
                                                                    "enum": [
                                                                      "Always",
                                                                      "IfNotPresent"
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          },
                                                          "nameSelector": {
                                                            "description": "Selector for a Secret in secretmanager to populate name.",
                                                            "type": "object",
                                                            "properties": {
                                                              "matchControllerRef": {
                                                                "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                                                "type": "boolean"
                                                              },
                                                              "matchLabels": {
                                                                "description": "MatchLabels ensures an object with matching labels is selected.",
                                                                "type": "object",
                                                                "additionalProperties": {
                                                                  "type": "string"
                                                                }
                                                              },
                                                              "policy": {
                                                                "description": "Policies for selection.",
                                                                "type": "object",
                                                                "properties": {
                                                                  "resolution": {
                                                                    "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                                                    "type": "string",
                                                                    "default": "Required",
                                                                    "enum": [
                                                                      "Required",
                                                                      "Optional"
                                                                    ]
                                                                  },
                                                                  "resolve": {
                                                                    "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                                                    "type": "string",
                                                                    "enum": [
                                                                      "Always",
                                                                      "IfNotPresent"
                                                                    ]
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "envFrom": {
                                          "description": "List of sources to populate environment variables in the container. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "configMapRef": {
                                                "description": "The ConfigMap to select from. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "localObjectReference": {
                                                      "description": "The Secret to select from. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "optional": {
                                                      "description": "Specify whether the Secret must be defined",
                                                      "type": "boolean"
                                                    }
                                                  }
                                                }
                                              },
                                              "prefix": {
                                                "description": "An optional identifier to prepend to each key in the ConfigMap.",
                                                "type": "string"
                                              },
                                              "secretRef": {
                                                "description": "The Secret to select from. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "localObjectReference": {
                                                      "description": "The Secret to select from. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "optional": {
                                                      "description": "Specify whether the Secret must be defined",
                                                      "type": "boolean"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "image": {
                                          "description": "Docker image name. This is most often a reference to a container located in the container registry, such as gcr.io/cloudrun/hello",
                                          "type": "string"
                                        },
                                        "livenessProbe": {
                                          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "failureThreshold": {
                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                "type": "number"
                                              },
                                              "grpc": {
                                                "description": "GRPC specifies an action involving a GRPC port. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    },
                                                    "service": {
                                                      "description": "The name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). If this is not specified, the default behavior is defined by gRPC.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "httpGet": {
                                                "description": "HttpGet specifies the http request to perform. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "httpHeaders": {
                                                      "description": "Custom headers to set in the request. HTTP allows repeated headers. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "description": "The header field value.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "path": {
                                                      "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    }
                                                  }
                                                }
                                              },
                                              "initialDelaySeconds": {
                                                "description": "Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.",
                                                "type": "number"
                                              },
                                              "periodSeconds": {
                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                                "type": "number"
                                              },
                                              "timeoutSeconds": {
                                                "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        },
                                        "name": {
                                          "description": "Volume's name.",
                                          "type": "string"
                                        },
                                        "ports": {
                                          "description": "List of open ports in the container. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "containerPort": {
                                                "description": "Port number the container listens on. This must be a valid port number (between 1 and 65535). Defaults to \"8080\".",
                                                "type": "number"
                                              },
                                              "name": {
                                                "description": "Volume's name.",
                                                "type": "string"
                                              },
                                              "protocol": {
                                                "description": "Protocol for port. Must be \"TCP\". Defaults to \"TCP\".",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "resources": {
                                          "description": "Compute Resources required by this container. Used to set values such as max memory Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "limits": {
                                                "description": "Limits describes the maximum amount of compute resources allowed. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "requests": {
                                                "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "startupProbe": {
                                          "description": "Startup probe of application within the container. All other probes are disabled if a startup probe is provided, until it succeeds. Container will not be added to service endpoints if the probe fails. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "failureThreshold": {
                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                "type": "number"
                                              },
                                              "grpc": {
                                                "description": "GRPC specifies an action involving a GRPC port. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    },
                                                    "service": {
                                                      "description": "The name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). If this is not specified, the default behavior is defined by gRPC.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "httpGet": {
                                                "description": "HttpGet specifies the http request to perform. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "httpHeaders": {
                                                      "description": "Custom headers to set in the request. HTTP allows repeated headers. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "description": "The header field value.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "path": {
                                                      "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    }
                                                  }
                                                }
                                              },
                                              "initialDelaySeconds": {
                                                "description": "Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.",
                                                "type": "number"
                                              },
                                              "periodSeconds": {
                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                                "type": "number"
                                              },
                                              "tcpSocket": {
                                                "description": "TcpSocket specifies an action involving a TCP port. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    }
                                                  }
                                                }
                                              },
                                              "timeoutSeconds": {
                                                "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        },
                                        "volumeMounts": {
                                          "description": "Volume to mount into the container's filesystem. Only supports SecretVolumeSources. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "mountPath": {
                                                "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Volume's name.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "workingDir": {
                                          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "serviceAccountName": {
                                    "description": "Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.",
                                    "type": "string"
                                  },
                                  "timeoutSeconds": {
                                    "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds.",
                                    "type": "number"
                                  },
                                  "volumes": {
                                    "description": "Volume represents a named volume in a container. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Volume's name.",
                                          "type": "string"
                                        },
                                        "secret": {
                                          "description": "The secret's value will be presented as the content of a file whose name is defined in the item path. If no items are defined, the name of the file is the secret_name. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "defaultMode": {
                                                "description": "Mode bits to use on created files by default. Must be a value between 0000 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                "type": "number"
                                              },
                                              "items": {
                                                "description": "If unspecified, the volume will expose a file whose name is the secret_name. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a key and a path. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "key": {
                                                      "description": "A Cloud Secret Manager secret version. Must be 'latest' for the latest version or an integer for a specific version.",
                                                      "type": "string"
                                                    },
                                                    "mode": {
                                                      "description": "Mode bits to use on this file, must be a value between 0000 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                      "type": "number"
                                                    },
                                                    "path": {
                                                      "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "secretName": {
                                                "description": "The name of the secret in Cloud Secret Manager. By default, the secret is assumed to be in the same project. If the secret is in another project, you must define an alias. An alias definition has the form: {alias}:projects/{project-id|project-number}/secrets/{secret-name}. If multiple alias definitions are needed, they must be separated by commas. The alias definitions must be set on the run.googleapis.com/secrets annotation.",
                                                "type": "string"
                                              },
                                              "secretNameRef": {
                                                "description": "Reference to a Secret in secretmanager to populate secretName.",
                                                "type": "object",
                                                "required": [
                                                  "name"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "description": "Name of the referenced object.",
                                                    "type": "string"
                                                  },
                                                  "policy": {
                                                    "description": "Policies for referencing.",
                                                    "type": "object",
                                                    "properties": {
                                                      "resolution": {
                                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                                        "type": "string",
                                                        "default": "Required",
                                                        "enum": [
                                                          "Required",
                                                          "Optional"
                                                        ]
                                                      },
                                                      "resolve": {
                                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                                        "type": "string",
                                                        "enum": [
                                                          "Always",
                                                          "IfNotPresent"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              },
                                              "secretNameSelector": {
                                                "description": "Selector for a Secret in secretmanager to populate secretName.",
                                                "type": "object",
                                                "properties": {
                                                  "matchControllerRef": {
                                                    "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                                    "type": "boolean"
                                                  },
                                                  "matchLabels": {
                                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                                    "type": "object",
                                                    "additionalProperties": {
                                                      "type": "string"
                                                    }
                                                  },
                                                  "policy": {
                                                    "description": "Policies for selection.",
                                                    "type": "object",
                                                    "properties": {
                                                      "resolution": {
                                                        "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                                        "type": "string",
                                                        "default": "Required",
                                                        "enum": [
                                                          "Required",
                                                          "Optional"
                                                        ]
                                                      },
                                                      "resolve": {
                                                        "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                                        "type": "string",
                                                        "enum": [
                                                          "Always",
                                                          "IfNotPresent"
                                                        ]
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "traffic": {
                        "description": "(Output) Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "latestRevision": {
                              "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty.",
                              "type": "boolean"
                            },
                            "percent": {
                              "description": "Percent specifies percent of the traffic to this Revision or Configuration.",
                              "type": "number"
                            },
                            "revisionName": {
                              "description": "RevisionName of a specific revision to which to send this portion of traffic.",
                              "type": "string"
                            },
                            "tag": {
                              "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "autogenerateRevisionName": {
                        "description": "If set to true, the revision name (template.metadata.name) will be omitted and autogenerated by Cloud Run. This cannot be set to true while template.metadata.name is also set. (For legacy support, if template.metadata.name is unset in state while this field is set to false, the revision name will still autogenerate.)",
                        "type": "boolean"
                      },
                      "metadata": {
                        "description": "Optional metadata for this Revision, including labels and annotations. Name will be generated by the Configuration. To set minimum instances for this revision, use the \"autoscaling.knative.dev/minScale\" annotation key. To set maximum instances for this revision, use the \"autoscaling.knative.dev/maxScale\" annotation key. To set Cloud SQL connections for the revision, use the \"run.googleapis.com/cloudsql-instances\" annotation key. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "annotations": {
                              "description": "Annotations is a key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field. Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation keys to configure features on a Revision template:",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "labels": {
                              "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "template": {
                        "description": "template holds the latest specification for the Revision to be stamped out. The template references the container image, and may also include labels and annotations that should be attached to the Revision. To correlate a Revision, and/or to force a Revision to be created when the spec doesn't otherwise change, a nonce label may be provided in the template metadata. For more details, see: https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions Cloud Run does not currently support referencing a build that is responsible for materializing the container image from source. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "metadata": {
                              "description": "Optional metadata for this Revision, including labels and annotations. Name will be generated by the Configuration. To set minimum instances for this revision, use the \"autoscaling.knative.dev/minScale\" annotation key. To set maximum instances for this revision, use the \"autoscaling.knative.dev/maxScale\" annotation key. To set Cloud SQL connections for the revision, use the \"run.googleapis.com/cloudsql-instances\" annotation key. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "description": "Annotations is a key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field. Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation keys to configure features on a Revision template:",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labels": {
                                    "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "name": {
                                    "description": "Volume's name.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "In Cloud Run the namespace must be equal to either the project ID or project number. It will default to the resource's project.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "spec": {
                              "description": "RevisionSpec holds the desired state of the Revision (from the client). Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "containerConcurrency": {
                                    "description": "ContainerConcurrency specifies the maximum allowed in-flight (concurrent) requests per container of the Revision. Values are:",
                                    "type": "number"
                                  },
                                  "containers": {
                                    "description": "Containers defines the unit of execution for this Revision. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "args": {
                                          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "command": {
                                          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "env": {
                                          "description": "List of environment variables to set in the container. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Volume's name.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value.",
                                                "type": "string"
                                              },
                                              "valueFrom": {
                                                "description": "Source for the environment variable's value. Only supports secret_key_ref. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "secretKeyRef": {
                                                      "description": "Selects a key (version) of a secret in Secret Manager. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "key": {
                                                            "description": "A Cloud Secret Manager secret version. Must be 'latest' for the latest version or an integer for a specific version.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "envFrom": {
                                          "description": "List of sources to populate environment variables in the container. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "configMapRef": {
                                                "description": "The ConfigMap to select from. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "localObjectReference": {
                                                      "description": "The Secret to select from. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "optional": {
                                                      "description": "Specify whether the Secret must be defined",
                                                      "type": "boolean"
                                                    }
                                                  }
                                                }
                                              },
                                              "prefix": {
                                                "description": "An optional identifier to prepend to each key in the ConfigMap.",
                                                "type": "string"
                                              },
                                              "secretRef": {
                                                "description": "The Secret to select from. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "localObjectReference": {
                                                      "description": "The Secret to select from. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "optional": {
                                                      "description": "Specify whether the Secret must be defined",
                                                      "type": "boolean"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "image": {
                                          "description": "Docker image name. This is most often a reference to a container located in the container registry, such as gcr.io/cloudrun/hello",
                                          "type": "string"
                                        },
                                        "livenessProbe": {
                                          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "failureThreshold": {
                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                "type": "number"
                                              },
                                              "grpc": {
                                                "description": "GRPC specifies an action involving a GRPC port. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    },
                                                    "service": {
                                                      "description": "The name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). If this is not specified, the default behavior is defined by gRPC.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "httpGet": {
                                                "description": "HttpGet specifies the http request to perform. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "httpHeaders": {
                                                      "description": "Custom headers to set in the request. HTTP allows repeated headers. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "description": "The header field value.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "path": {
                                                      "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    }
                                                  }
                                                }
                                              },
                                              "initialDelaySeconds": {
                                                "description": "Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.",
                                                "type": "number"
                                              },
                                              "periodSeconds": {
                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                                "type": "number"
                                              },
                                              "timeoutSeconds": {
                                                "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        },
                                        "name": {
                                          "description": "Volume's name.",
                                          "type": "string"
                                        },
                                        "ports": {
                                          "description": "List of open ports in the container. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "containerPort": {
                                                "description": "Port number the container listens on. This must be a valid port number (between 1 and 65535). Defaults to \"8080\".",
                                                "type": "number"
                                              },
                                              "name": {
                                                "description": "Volume's name.",
                                                "type": "string"
                                              },
                                              "protocol": {
                                                "description": "Protocol for port. Must be \"TCP\". Defaults to \"TCP\".",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "resources": {
                                          "description": "Compute Resources required by this container. Used to set values such as max memory Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "limits": {
                                                "description": "Limits describes the maximum amount of compute resources allowed. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "requests": {
                                                "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "startupProbe": {
                                          "description": "Startup probe of application within the container. All other probes are disabled if a startup probe is provided, until it succeeds. Container will not be added to service endpoints if the probe fails. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "failureThreshold": {
                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                "type": "number"
                                              },
                                              "grpc": {
                                                "description": "GRPC specifies an action involving a GRPC port. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    },
                                                    "service": {
                                                      "description": "The name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). If this is not specified, the default behavior is defined by gRPC.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "httpGet": {
                                                "description": "HttpGet specifies the http request to perform. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "httpHeaders": {
                                                      "description": "Custom headers to set in the request. HTTP allows repeated headers. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "description": "The header field value.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "path": {
                                                      "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    }
                                                  }
                                                }
                                              },
                                              "initialDelaySeconds": {
                                                "description": "Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.",
                                                "type": "number"
                                              },
                                              "periodSeconds": {
                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                                "type": "number"
                                              },
                                              "tcpSocket": {
                                                "description": "TcpSocket specifies an action involving a TCP port. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    }
                                                  }
                                                }
                                              },
                                              "timeoutSeconds": {
                                                "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        },
                                        "volumeMounts": {
                                          "description": "Volume to mount into the container's filesystem. Only supports SecretVolumeSources. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "mountPath": {
                                                "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Volume's name.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "workingDir": {
                                          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "serviceAccountName": {
                                    "description": "Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.",
                                    "type": "string"
                                  },
                                  "timeoutSeconds": {
                                    "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds.",
                                    "type": "number"
                                  },
                                  "volumes": {
                                    "description": "Volume represents a named volume in a container. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Volume's name.",
                                          "type": "string"
                                        },
                                        "secret": {
                                          "description": "The secret's value will be presented as the content of a file whose name is defined in the item path. If no items are defined, the name of the file is the secret_name. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "defaultMode": {
                                                "description": "Mode bits to use on created files by default. Must be a value between 0000 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                "type": "number"
                                              },
                                              "items": {
                                                "description": "If unspecified, the volume will expose a file whose name is the secret_name. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a key and a path. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "key": {
                                                      "description": "A Cloud Secret Manager secret version. Must be 'latest' for the latest version or an integer for a specific version.",
                                                      "type": "string"
                                                    },
                                                    "mode": {
                                                      "description": "Mode bits to use on this file, must be a value between 0000 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                      "type": "number"
                                                    },
                                                    "path": {
                                                      "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "traffic": {
                        "description": "(Output) Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "latestRevision": {
                              "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty.",
                              "type": "boolean"
                            },
                            "percent": {
                              "description": "Percent specifies percent of the traffic to this Revision or Configuration.",
                              "type": "number"
                            },
                            "revisionName": {
                              "description": "RevisionName of a specific revision to which to send this portion of traffic.",
                              "type": "string"
                            },
                            "tag": {
                              "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "ServiceStatus defines the observed state of Service.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "autogenerateRevisionName": {
                        "description": "If set to true, the revision name (template.metadata.name) will be omitted and autogenerated by Cloud Run. This cannot be set to true while template.metadata.name is also set. (For legacy support, if template.metadata.name is unset in state while this field is set to false, the revision name will still autogenerate.)",
                        "type": "boolean"
                      },
                      "id": {
                        "description": "an identifier for the resource with format locations/{{location}}/namespaces/{{project}}/services/{{name}}",
                        "type": "string"
                      },
                      "location": {
                        "description": "The location of the cloud run instance. eg us-central1",
                        "type": "string"
                      },
                      "metadata": {
                        "description": "Optional metadata for this Revision, including labels and annotations. Name will be generated by the Configuration. To set minimum instances for this revision, use the \"autoscaling.knative.dev/minScale\" annotation key. To set maximum instances for this revision, use the \"autoscaling.knative.dev/maxScale\" annotation key. To set Cloud SQL connections for the revision, use the \"run.googleapis.com/cloudsql-instances\" annotation key. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "annotations": {
                              "description": "Annotations is a key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field. Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation keys to configure features on a Revision template:",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "generation": {
                              "description": "(Output) A sequence number representing a specific generation of the desired state.",
                              "type": "number"
                            },
                            "labels": {
                              "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "namespace": {
                              "description": "In Cloud Run the namespace must be equal to either the project ID or project number. It will default to the resource's project.",
                              "type": "string"
                            },
                            "resourceVersion": {
                              "description": "(Output) An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. They may only be valid for a particular resource or set of resources.",
                              "type": "string"
                            },
                            "selfLink": {
                              "description": "(Output) SelfLink is a URL representing this object.",
                              "type": "string"
                            },
                            "uid": {
                              "description": "(Output) UID is a unique id generated by the server on successful creation of a resource and is not allowed to change on PUT operations.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "project": {
                        "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                        "type": "string"
                      },
                      "status": {
                        "description": "The current status of the Service. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "conditions": {
                              "description": "(Output) Array of observed Service Conditions, indicating the current ready state of the service. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "message": {
                                    "description": "(Output) Human readable message indicating details about the current status.",
                                    "type": "string"
                                  },
                                  "reason": {
                                    "description": "(Output) One-word CamelCase reason for the condition's current status.",
                                    "type": "string"
                                  },
                                  "status": {
                                    "description": "The current status of the Service. Structure is documented below.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "(Output) Type of domain mapping condition.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "latestCreatedRevisionName": {
                              "description": "(Output) From ConfigurationStatus. LatestCreatedRevisionName is the last revision that was created from this Service's Configuration. It might not be ready yet, for that use LatestReadyRevisionName.",
                              "type": "string"
                            },
                            "latestReadyRevisionName": {
                              "description": "(Output) From ConfigurationStatus. LatestReadyRevisionName holds the name of the latest Revision stamped out from this Service's Configuration that has had its \"Ready\" condition become \"True\".",
                              "type": "string"
                            },
                            "observedGeneration": {
                              "description": "(Output) ObservedGeneration is the 'Generation' of the Route that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.",
                              "type": "number"
                            },
                            "traffic": {
                              "description": "(Output) Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "latestRevision": {
                                    "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty.",
                                    "type": "boolean"
                                  },
                                  "percent": {
                                    "description": "Percent specifies percent of the traffic to this Revision or Configuration.",
                                    "type": "number"
                                  },
                                  "revisionName": {
                                    "description": "RevisionName of a specific revision to which to send this portion of traffic.",
                                    "type": "string"
                                  },
                                  "tag": {
                                    "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively.",
                                    "type": "string"
                                  },
                                  "url": {
                                    "description": "(Output) URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "url": {
                              "description": "(Output) From RouteStatus. URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "template": {
                        "description": "template holds the latest specification for the Revision to be stamped out. The template references the container image, and may also include labels and annotations that should be attached to the Revision. To correlate a Revision, and/or to force a Revision to be created when the spec doesn't otherwise change, a nonce label may be provided in the template metadata. For more details, see: https://github.com/knative/serving/blob/main/docs/client-conventions.md#associate-modifications-with-revisions Cloud Run does not currently support referencing a build that is responsible for materializing the container image from source. Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "metadata": {
                              "description": "Optional metadata for this Revision, including labels and annotations. Name will be generated by the Configuration. To set minimum instances for this revision, use the \"autoscaling.knative.dev/minScale\" annotation key. To set maximum instances for this revision, use the \"autoscaling.knative.dev/maxScale\" annotation key. To set Cloud SQL connections for the revision, use the \"run.googleapis.com/cloudsql-instances\" annotation key. Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "annotations": {
                                    "description": "Annotations is a key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations Note: The Cloud Run API may add additional annotations that were not provided in your config.ignore_changes rule to the metadata.0.annotations field. Annotations with run.googleapis.com/ and autoscaling.knative.dev are restricted. Use the following annotation keys to configure features on a Revision template:",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "generation": {
                                    "description": "(Output) A sequence number representing a specific generation of the desired state.",
                                    "type": "number"
                                  },
                                  "labels": {
                                    "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "name": {
                                    "description": "Volume's name.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "In Cloud Run the namespace must be equal to either the project ID or project number. It will default to the resource's project.",
                                    "type": "string"
                                  },
                                  "resourceVersion": {
                                    "description": "(Output) An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. They may only be valid for a particular resource or set of resources.",
                                    "type": "string"
                                  },
                                  "selfLink": {
                                    "description": "(Output) SelfLink is a URL representing this object.",
                                    "type": "string"
                                  },
                                  "uid": {
                                    "description": "(Output) UID is a unique id generated by the server on successful creation of a resource and is not allowed to change on PUT operations.",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "spec": {
                              "description": "RevisionSpec holds the desired state of the Revision (from the client). Structure is documented below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "containerConcurrency": {
                                    "description": "ContainerConcurrency specifies the maximum allowed in-flight (concurrent) requests per container of the Revision. Values are:",
                                    "type": "number"
                                  },
                                  "containers": {
                                    "description": "Containers defines the unit of execution for this Revision. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "args": {
                                          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "command": {
                                          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "env": {
                                          "description": "List of environment variables to set in the container. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "description": "Volume's name.",
                                                "type": "string"
                                              },
                                              "value": {
                                                "description": "The header field value.",
                                                "type": "string"
                                              },
                                              "valueFrom": {
                                                "description": "Source for the environment variable's value. Only supports secret_key_ref. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "secretKeyRef": {
                                                      "description": "Selects a key (version) of a secret in Secret Manager. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "key": {
                                                            "description": "A Cloud Secret Manager secret version. Must be 'latest' for the latest version or an integer for a specific version.",
                                                            "type": "string"
                                                          },
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "envFrom": {
                                          "description": "List of sources to populate environment variables in the container. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "configMapRef": {
                                                "description": "The ConfigMap to select from. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "localObjectReference": {
                                                      "description": "The Secret to select from. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "optional": {
                                                      "description": "Specify whether the Secret must be defined",
                                                      "type": "boolean"
                                                    }
                                                  }
                                                }
                                              },
                                              "prefix": {
                                                "description": "An optional identifier to prepend to each key in the ConfigMap.",
                                                "type": "string"
                                              },
                                              "secretRef": {
                                                "description": "The Secret to select from. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "localObjectReference": {
                                                      "description": "The Secret to select from. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "optional": {
                                                      "description": "Specify whether the Secret must be defined",
                                                      "type": "boolean"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "image": {
                                          "description": "Docker image name. This is most often a reference to a container located in the container registry, such as gcr.io/cloudrun/hello",
                                          "type": "string"
                                        },
                                        "livenessProbe": {
                                          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "failureThreshold": {
                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                "type": "number"
                                              },
                                              "grpc": {
                                                "description": "GRPC specifies an action involving a GRPC port. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    },
                                                    "service": {
                                                      "description": "The name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). If this is not specified, the default behavior is defined by gRPC.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "httpGet": {
                                                "description": "HttpGet specifies the http request to perform. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "httpHeaders": {
                                                      "description": "Custom headers to set in the request. HTTP allows repeated headers. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "description": "The header field value.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "path": {
                                                      "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    }
                                                  }
                                                }
                                              },
                                              "initialDelaySeconds": {
                                                "description": "Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.",
                                                "type": "number"
                                              },
                                              "periodSeconds": {
                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                                "type": "number"
                                              },
                                              "timeoutSeconds": {
                                                "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        },
                                        "name": {
                                          "description": "Volume's name.",
                                          "type": "string"
                                        },
                                        "ports": {
                                          "description": "List of open ports in the container. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "containerPort": {
                                                "description": "Port number the container listens on. This must be a valid port number (between 1 and 65535). Defaults to \"8080\".",
                                                "type": "number"
                                              },
                                              "name": {
                                                "description": "Volume's name.",
                                                "type": "string"
                                              },
                                              "protocol": {
                                                "description": "Protocol for port. Must be \"TCP\". Defaults to \"TCP\".",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "resources": {
                                          "description": "Compute Resources required by this container. Used to set values such as max memory Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "limits": {
                                                "description": "Limits describes the maximum amount of compute resources allowed. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "requests": {
                                                "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "startupProbe": {
                                          "description": "Startup probe of application within the container. All other probes are disabled if a startup probe is provided, until it succeeds. Container will not be added to service endpoints if the probe fails. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "failureThreshold": {
                                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                                                "type": "number"
                                              },
                                              "grpc": {
                                                "description": "GRPC specifies an action involving a GRPC port. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    },
                                                    "service": {
                                                      "description": "The name of the service to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md). If this is not specified, the default behavior is defined by gRPC.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "httpGet": {
                                                "description": "HttpGet specifies the http request to perform. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "httpHeaders": {
                                                      "description": "Custom headers to set in the request. HTTP allows repeated headers. Structure is documented below.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "description": "Volume's name.",
                                                            "type": "string"
                                                          },
                                                          "value": {
                                                            "description": "The header field value.",
                                                            "type": "string"
                                                          }
                                                        }
                                                      }
                                                    },
                                                    "path": {
                                                      "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                      "type": "string"
                                                    },
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    }
                                                  }
                                                }
                                              },
                                              "initialDelaySeconds": {
                                                "description": "Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value is 240.",
                                                "type": "number"
                                              },
                                              "periodSeconds": {
                                                "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value is 240.",
                                                "type": "number"
                                              },
                                              "tcpSocket": {
                                                "description": "TcpSocket specifies an action involving a TCP port. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "port": {
                                                      "description": "Port number to access on the container. Number must be in the range 1 to 65535. If not specified, defaults to the same value as container.ports[0].containerPort.",
                                                      "type": "number"
                                                    }
                                                  }
                                                }
                                              },
                                              "timeoutSeconds": {
                                                "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds.",
                                                "type": "number"
                                              }
                                            }
                                          }
                                        },
                                        "volumeMounts": {
                                          "description": "Volume to mount into the container's filesystem. Only supports SecretVolumeSources. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "mountPath": {
                                                "description": "Path within the container at which the volume should be mounted.  Must not contain ':'.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Volume's name.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "workingDir": {
                                          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.",
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "serviceAccountName": {
                                    "description": "Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.",
                                    "type": "string"
                                  },
                                  "servingState": {
                                    "description": "(Output, Deprecated) ServingState holds a value describing the state the resources are in for this Revision. It is expected that the system will manipulate this based on routability and load.",
                                    "type": "string"
                                  },
                                  "timeoutSeconds": {
                                    "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than periodSeconds.",
                                    "type": "number"
                                  },
                                  "volumes": {
                                    "description": "Volume represents a named volume in a container. Structure is documented below.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Volume's name.",
                                          "type": "string"
                                        },
                                        "secret": {
                                          "description": "The secret's value will be presented as the content of a file whose name is defined in the item path. If no items are defined, the name of the file is the secret_name. Structure is documented below.",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "defaultMode": {
                                                "description": "Mode bits to use on created files by default. Must be a value between 0000 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                "type": "number"
                                              },
                                              "items": {
                                                "description": "If unspecified, the volume will expose a file whose name is the secret_name. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a key and a path. Structure is documented below.",
                                                "type": "array",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "key": {
                                                      "description": "A Cloud Secret Manager secret version. Must be 'latest' for the latest version or an integer for a specific version.",
                                                      "type": "string"
                                                    },
                                                    "mode": {
                                                      "description": "Mode bits to use on this file, must be a value between 0000 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
                                                      "type": "number"
                                                    },
                                                    "path": {
                                                      "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
                                                      "type": "string"
                                                    }
                                                  }
                                                }
                                              },
                                              "secretName": {
                                                "description": "The name of the secret in Cloud Secret Manager. By default, the secret is assumed to be in the same project. If the secret is in another project, you must define an alias. An alias definition has the form: {alias}:projects/{project-id|project-number}/secrets/{secret-name}. If multiple alias definitions are needed, they must be separated by commas. The alias definitions must be set on the run.googleapis.com/secrets annotation.",
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "traffic": {
                        "description": "(Output) Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations Structure is documented below.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "latestRevision": {
                              "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty.",
                              "type": "boolean"
                            },
                            "percent": {
                              "description": "Percent specifies percent of the traffic to this Revision or Configuration.",
                              "type": "number"
                            },
                            "revisionName": {
                              "description": "RevisionName of a specific revision to which to send this portion of traffic.",
                              "type": "string"
                            },
                            "tag": {
                              "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively.",
                              "type": "string"
                            },
                            "url": {
                              "description": "(Output) URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc.)",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}