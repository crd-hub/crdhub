{
  "$schema": "http://json-schema.org/schema#",
  "description": "EKSConfig is the schema for the Amazon EKS Machine Bootstrap Configuration API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "bootstrap.cluster.x-k8s.io/v1beta2"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "EKSConfig"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "EKSConfigSpec defines the desired state of Amazon EKS Bootstrap Configuration.",
      "type": "object",
      "properties": {
        "apiRetryAttempts": {
          "description": "APIRetryAttempts is the number of retry attempts for AWS API call.",
          "type": "integer"
        },
        "boostrapCommandOverride": {
          "description": "BootstrapCommandOverride allows you to override the bootstrap command to use for EKS nodes.",
          "type": "string"
        },
        "containerRuntime": {
          "description": "ContainerRuntime specify the container runtime to use when bootstrapping EKS.",
          "type": "string"
        },
        "diskSetup": {
          "description": "DiskSetup specifies options for the creation of partition tables and file systems on devices.",
          "type": "object",
          "properties": {
            "filesystems": {
              "description": "Filesystems specifies the list of file systems to setup.",
              "type": "array",
              "items": {
                "description": "Filesystem defines the file systems to be created.",
                "type": "object",
                "required": [
                  "device",
                  "filesystem",
                  "label"
                ],
                "properties": {
                  "device": {
                    "description": "Device specifies the device name",
                    "type": "string"
                  },
                  "extraOpts": {
                    "description": "ExtraOpts defined extra options to add to the command for creating the file system.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "filesystem": {
                    "description": "Filesystem specifies the file system type.",
                    "type": "string"
                  },
                  "label": {
                    "description": "Label specifies the file system label to be used. If set to None, no label is used.",
                    "type": "string"
                  },
                  "overwrite": {
                    "description": "Overwrite defines whether or not to overwrite any existing filesystem. If true, any pre-existing file system will be destroyed. Use with Caution.",
                    "type": "boolean"
                  },
                  "partition": {
                    "description": "Partition specifies the partition to use. The valid options are: \"auto|any\", \"auto\", \"any\", \"none\", and \u003cNUM\u003e, where NUM is the actual partition number.",
                    "type": "string"
                  }
                }
              }
            },
            "partitions": {
              "description": "Partitions specifies the list of the partitions to setup.",
              "type": "array",
              "items": {
                "description": "Partition defines how to create and layout a partition.",
                "type": "object",
                "required": [
                  "device",
                  "layout"
                ],
                "properties": {
                  "device": {
                    "description": "Device is the name of the device.",
                    "type": "string"
                  },
                  "layout": {
                    "description": "Layout specifies the device layout. If it is true, a single partition will be created for the entire device. When layout is false, it means don't partition or ignore existing partitioning.",
                    "type": "boolean"
                  },
                  "overwrite": {
                    "description": "Overwrite describes whether to skip checks and create the partition if a partition or filesystem is found on the device. Use with caution. Default is 'false'.",
                    "type": "boolean"
                  },
                  "tableType": {
                    "description": "TableType specifies the tupe of partition table. The following are supported: 'mbr': default and setups a MS-DOS partition table 'gpt': setups a GPT partition table",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "dnsClusterIP": {
          "description": "DNSClusterIP overrides the IP address to use for DNS queries within the cluster.",
          "type": "string"
        },
        "dockerConfigJson": {
          "description": "DockerConfigJson is used for the contents of the /etc/docker/daemon.json file. Useful if you want a custom config differing from the default one in the AMI. This is expected to be a json string.",
          "type": "string"
        },
        "files": {
          "description": "Files specifies extra files to be passed to user_data upon creation.",
          "type": "array",
          "items": {
            "description": "File defines the input for generating write_files in cloud-init.",
            "type": "object",
            "required": [
              "path"
            ],
            "properties": {
              "append": {
                "description": "Append specifies whether to append Content to existing file if Path exists.",
                "type": "boolean"
              },
              "content": {
                "description": "Content is the actual content of the file.",
                "type": "string"
              },
              "contentFrom": {
                "description": "ContentFrom is a referenced source of content to populate the file.",
                "type": "object",
                "required": [
                  "secret"
                ],
                "properties": {
                  "secret": {
                    "description": "Secret represents a secret that should populate this file.",
                    "type": "object",
                    "required": [
                      "key",
                      "name"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key is the key in the secret's data map for this value.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret in the KubeadmBootstrapConfig's namespace to use.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "encoding": {
                "description": "Encoding specifies the encoding of the file contents.",
                "type": "string",
                "enum": [
                  "base64",
                  "gzip",
                  "gzip+base64"
                ]
              },
              "owner": {
                "description": "Owner specifies the ownership of the file, e.g. \"root:root\".",
                "type": "string"
              },
              "path": {
                "description": "Path specifies the full path on disk where to store the file.",
                "type": "string"
              },
              "permissions": {
                "description": "Permissions specifies the permissions to assign to the file, e.g. \"0640\".",
                "type": "string"
              }
            }
          }
        },
        "kubeletExtraArgs": {
          "description": "KubeletExtraArgs passes the specified kubelet args into the Amazon EKS machine bootstrap script",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "mounts": {
          "description": "Mounts specifies a list of mount points to be setup.",
          "type": "array",
          "items": {
            "description": "MountPoints defines input for generated mounts in cloud-init.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "ntp": {
          "description": "NTP specifies NTP configuration",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Enabled specifies whether NTP should be enabled",
              "type": "boolean"
            },
            "servers": {
              "description": "Servers specifies which NTP servers to use",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "pauseContainer": {
          "description": "PauseContainer allows customization of the pause container to use.",
          "type": "object",
          "required": [
            "accountNumber",
            "version"
          ],
          "properties": {
            "accountNumber": {
              "description": "AccountNumber is the AWS account number to pull the pause container from.",
              "type": "string"
            },
            "version": {
              "description": "Version is the tag of the pause container to use.",
              "type": "string"
            }
          }
        },
        "postBootstrapCommands": {
          "description": "PostBootstrapCommands specifies extra commands to run after bootstrapping nodes to the cluster",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "preBootstrapCommands": {
          "description": "PreBootstrapCommands specifies extra commands to run before bootstrapping nodes to the cluster",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "serviceIPV6Cidr": {
          "description": "ServiceIPV6Cidr is the ipv6 cidr range of the cluster. If this is specified then the ip family will be set to ipv6.",
          "type": "string"
        },
        "useMaxPods": {
          "description": "UseMaxPods  sets --max-pods for the kubelet when true.",
          "type": "boolean"
        },
        "users": {
          "description": "Users specifies extra users to add",
          "type": "array",
          "items": {
            "description": "User defines the input for a generated user in cloud-init.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "gecos": {
                "description": "Gecos specifies the gecos to use for the user",
                "type": "string"
              },
              "groups": {
                "description": "Groups specifies the additional groups for the user",
                "type": "string"
              },
              "homeDir": {
                "description": "HomeDir specifies the home directory to use for the user",
                "type": "string"
              },
              "inactive": {
                "description": "Inactive specifies whether to mark the user as inactive",
                "type": "boolean"
              },
              "lockPassword": {
                "description": "LockPassword specifies if password login should be disabled",
                "type": "boolean"
              },
              "name": {
                "description": "Name specifies the username",
                "type": "string"
              },
              "passwd": {
                "description": "Passwd specifies a hashed password for the user",
                "type": "string"
              },
              "passwdFrom": {
                "description": "PasswdFrom is a referenced source of passwd to populate the passwd.",
                "type": "object",
                "required": [
                  "secret"
                ],
                "properties": {
                  "secret": {
                    "description": "Secret represents a secret that should populate this password.",
                    "type": "object",
                    "required": [
                      "key",
                      "name"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key is the key in the secret's data map for this value.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret in the KubeadmBootstrapConfig's namespace to use.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "primaryGroup": {
                "description": "PrimaryGroup specifies the primary group for the user",
                "type": "string"
              },
              "shell": {
                "description": "Shell specifies the user's shell",
                "type": "string"
              },
              "sshAuthorizedKeys": {
                "description": "SSHAuthorizedKeys specifies a list of ssh authorized keys for the user",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "sudo": {
                "description": "Sudo specifies a sudo role for the user",
                "type": "string"
              }
            }
          }
        }
      }
    }
  }
}