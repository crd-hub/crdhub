{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "launchconfigurations.autoscaling.aws.upbound.io",
    "creationTimestamp": null,
    "annotations": {
      "controller-gen.kubebuilder.io/version": "v0.13.0"
    }
  },
  "spec": {
    "group": "autoscaling.aws.upbound.io",
    "names": {
      "plural": "launchconfigurations",
      "singular": "launchconfiguration",
      "kind": "LaunchConfiguration",
      "listKind": "LaunchConfigurationList",
      "categories": [
        "crossplane",
        "managed",
        "aws"
      ]
    },
    "scope": "Cluster",
    "versions": [
      {
        "name": "v1beta1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "LaunchConfiguration is the Schema for the LaunchConfigurations API. Provides a resource to create a new launch configuration, used for autoscaling groups.",
            "type": "object",
            "required": [
              "spec"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "LaunchConfigurationSpec defines the desired state of LaunchConfiguration",
                "type": "object",
                "required": [
                  "forProvider"
                ],
                "properties": {
                  "deletionPolicy": {
                    "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
                    "type": "string",
                    "default": "Delete",
                    "enum": [
                      "Orphan",
                      "Delete"
                    ]
                  },
                  "forProvider": {
                    "type": "object",
                    "required": [
                      "region"
                    ],
                    "properties": {
                      "associatePublicIpAddress": {
                        "description": "Associate a public ip address with an instance in a VPC.",
                        "type": "boolean"
                      },
                      "ebsBlockDevice": {
                        "description": "Additional EBS block devices to attach to the instance. See Block Devices below for details.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "description": "Whether the volume should be destroyed on instance termination (Default: true).",
                              "type": "boolean"
                            },
                            "deviceName": {
                              "description": "The name of the device to mount.",
                              "type": "string"
                            },
                            "encrypted": {
                              "description": "Whether the volume should be encrypted or not. Defaults to false.",
                              "type": "boolean"
                            },
                            "iops": {
                              "description": "The amount of provisioned IOPS. This must be set with a volume_type of \"io1\".",
                              "type": "number"
                            },
                            "noDevice": {
                              "description": "Whether the device in the block device mapping of the AMI is suppressed.",
                              "type": "boolean"
                            },
                            "snapshotId": {
                              "description": "The Snapshot ID to mount.",
                              "type": "string"
                            },
                            "throughput": {
                              "description": "The throughput (MiBps) to provision for a gp3 volume.",
                              "type": "number"
                            },
                            "volumeSize": {
                              "description": "The size of the volume in gigabytes.",
                              "type": "number"
                            },
                            "volumeType": {
                              "description": "The type of volume. Can be standard, gp2, gp3, st1, sc1 or io1.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ebsOptimized": {
                        "description": "If true, the launched EC2 instance will be EBS-optimized.",
                        "type": "boolean"
                      },
                      "enableMonitoring": {
                        "description": "Enables/disables detailed monitoring. This is enabled by default.",
                        "type": "boolean"
                      },
                      "ephemeralBlockDevice": {
                        "description": "Customize Ephemeral (also known as \"Instance Store\") volumes on the instance. See Block Devices below for details.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deviceName": {
                              "description": "The name of the block device to mount on the instance.",
                              "type": "string"
                            },
                            "noDevice": {
                              "description": "Whether the device in the block device mapping of the AMI is suppressed.",
                              "type": "boolean"
                            },
                            "virtualName": {
                              "description": "The Instance Store Device Name.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "iamInstanceProfile": {
                        "description": "The name attribute of the IAM instance profile to associate with launched instances.",
                        "type": "string"
                      },
                      "imageId": {
                        "description": "The EC2 image ID to launch.",
                        "type": "string"
                      },
                      "instanceType": {
                        "description": "The size of instance to launch.",
                        "type": "string"
                      },
                      "keyName": {
                        "description": "The key name that should be used for the instance.",
                        "type": "string"
                      },
                      "metadataOptions": {
                        "description": "The metadata options for the instance.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "httpEndpoint": {
                              "description": "The state of the metadata service: enabled, disabled.",
                              "type": "string"
                            },
                            "httpPutResponseHopLimit": {
                              "description": "The desired HTTP PUT response hop limit for instance metadata requests.",
                              "type": "number"
                            },
                            "httpTokens": {
                              "description": "If session tokens are required: optional, required.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "placementTenancy": {
                        "description": "The tenancy of the instance. Valid values are default or dedicated, see AWS's Create Launch Configuration for more details.",
                        "type": "string"
                      },
                      "region": {
                        "description": "Region is the region you'd like your resource to be created in.",
                        "type": "string"
                      },
                      "rootBlockDevice": {
                        "description": "Customize details about the root block device of the instance. See Block Devices below for details.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "description": "Whether the volume should be destroyed on instance termination. Defaults to true.",
                              "type": "boolean"
                            },
                            "encrypted": {
                              "description": "Whether the volume should be encrypted or not. Defaults to false.",
                              "type": "boolean"
                            },
                            "iops": {
                              "description": "The amount of provisioned IOPS. This must be set with a volume_type of io1.",
                              "type": "number"
                            },
                            "throughput": {
                              "description": "The throughput (MiBps) to provision for a gp3 volume.",
                              "type": "number"
                            },
                            "volumeSize": {
                              "description": "The size of the volume in gigabytes.",
                              "type": "number"
                            },
                            "volumeType": {
                              "description": "The type of volume. Can be standard, gp2, gp3, st1, sc1 or io1.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "securityGroups": {
                        "description": "A list of associated security group IDS.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "spotPrice": {
                        "description": "The maximum price to use for reserving spot instances.",
                        "type": "string"
                      },
                      "userData": {
                        "description": "The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead.",
                        "type": "string"
                      },
                      "userDataBase64": {
                        "description": "Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.",
                        "type": "string"
                      },
                      "vpcClassicLinkId": {
                        "description": "The ID of a ClassicLink-enabled VPC. Only applies to EC2-Classic instances. (eg. vpc-2730681a)",
                        "type": "string"
                      },
                      "vpcClassicLinkSecurityGroups": {
                        "description": "The IDs of one or more security groups for the specified ClassicLink-enabled VPC (eg. sg-46ae3d11).",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "initProvider": {
                    "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
                    "type": "object",
                    "properties": {
                      "associatePublicIpAddress": {
                        "description": "Associate a public ip address with an instance in a VPC.",
                        "type": "boolean"
                      },
                      "ebsBlockDevice": {
                        "description": "Additional EBS block devices to attach to the instance. See Block Devices below for details.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "description": "Whether the volume should be destroyed on instance termination (Default: true).",
                              "type": "boolean"
                            },
                            "deviceName": {
                              "description": "The name of the device to mount.",
                              "type": "string"
                            },
                            "encrypted": {
                              "description": "Whether the volume should be encrypted or not. Defaults to false.",
                              "type": "boolean"
                            },
                            "iops": {
                              "description": "The amount of provisioned IOPS. This must be set with a volume_type of \"io1\".",
                              "type": "number"
                            },
                            "noDevice": {
                              "description": "Whether the device in the block device mapping of the AMI is suppressed.",
                              "type": "boolean"
                            },
                            "snapshotId": {
                              "description": "The Snapshot ID to mount.",
                              "type": "string"
                            },
                            "throughput": {
                              "description": "The throughput (MiBps) to provision for a gp3 volume.",
                              "type": "number"
                            },
                            "volumeSize": {
                              "description": "The size of the volume in gigabytes.",
                              "type": "number"
                            },
                            "volumeType": {
                              "description": "The type of volume. Can be standard, gp2, gp3, st1, sc1 or io1.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ebsOptimized": {
                        "description": "If true, the launched EC2 instance will be EBS-optimized.",
                        "type": "boolean"
                      },
                      "enableMonitoring": {
                        "description": "Enables/disables detailed monitoring. This is enabled by default.",
                        "type": "boolean"
                      },
                      "ephemeralBlockDevice": {
                        "description": "Customize Ephemeral (also known as \"Instance Store\") volumes on the instance. See Block Devices below for details.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deviceName": {
                              "description": "The name of the block device to mount on the instance.",
                              "type": "string"
                            },
                            "noDevice": {
                              "description": "Whether the device in the block device mapping of the AMI is suppressed.",
                              "type": "boolean"
                            },
                            "virtualName": {
                              "description": "The Instance Store Device Name.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "iamInstanceProfile": {
                        "description": "The name attribute of the IAM instance profile to associate with launched instances.",
                        "type": "string"
                      },
                      "imageId": {
                        "description": "The EC2 image ID to launch.",
                        "type": "string"
                      },
                      "instanceType": {
                        "description": "The size of instance to launch.",
                        "type": "string"
                      },
                      "keyName": {
                        "description": "The key name that should be used for the instance.",
                        "type": "string"
                      },
                      "metadataOptions": {
                        "description": "The metadata options for the instance.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "httpEndpoint": {
                              "description": "The state of the metadata service: enabled, disabled.",
                              "type": "string"
                            },
                            "httpPutResponseHopLimit": {
                              "description": "The desired HTTP PUT response hop limit for instance metadata requests.",
                              "type": "number"
                            },
                            "httpTokens": {
                              "description": "If session tokens are required: optional, required.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "placementTenancy": {
                        "description": "The tenancy of the instance. Valid values are default or dedicated, see AWS's Create Launch Configuration for more details.",
                        "type": "string"
                      },
                      "rootBlockDevice": {
                        "description": "Customize details about the root block device of the instance. See Block Devices below for details.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "description": "Whether the volume should be destroyed on instance termination. Defaults to true.",
                              "type": "boolean"
                            },
                            "encrypted": {
                              "description": "Whether the volume should be encrypted or not. Defaults to false.",
                              "type": "boolean"
                            },
                            "iops": {
                              "description": "The amount of provisioned IOPS. This must be set with a volume_type of io1.",
                              "type": "number"
                            },
                            "throughput": {
                              "description": "The throughput (MiBps) to provision for a gp3 volume.",
                              "type": "number"
                            },
                            "volumeSize": {
                              "description": "The size of the volume in gigabytes.",
                              "type": "number"
                            },
                            "volumeType": {
                              "description": "The type of volume. Can be standard, gp2, gp3, st1, sc1 or io1.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "securityGroups": {
                        "description": "A list of associated security group IDS.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "spotPrice": {
                        "description": "The maximum price to use for reserving spot instances.",
                        "type": "string"
                      },
                      "userData": {
                        "description": "The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead.",
                        "type": "string"
                      },
                      "userDataBase64": {
                        "description": "Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.",
                        "type": "string"
                      },
                      "vpcClassicLinkId": {
                        "description": "The ID of a ClassicLink-enabled VPC. Only applies to EC2-Classic instances. (eg. vpc-2730681a)",
                        "type": "string"
                      },
                      "vpcClassicLinkSecurityGroups": {
                        "description": "The IDs of one or more security groups for the specified ClassicLink-enabled VPC (eg. sg-46ae3d11).",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "managementPolicies": {
                    "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
                    "type": "array",
                    "default": [
                      "*"
                    ],
                    "items": {
                      "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
                      "type": "string",
                      "enum": [
                        "Observe",
                        "Create",
                        "Update",
                        "Delete",
                        "LateInitialize",
                        "*"
                      ]
                    }
                  },
                  "providerConfigRef": {
                    "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
                    "type": "object",
                    "default": {
                      "name": "default"
                    },
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "publishConnectionDetailsTo": {
                    "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "configRef": {
                        "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
                        "type": "object",
                        "default": {
                          "name": "default"
                        },
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "metadata": {
                        "description": "Metadata is the metadata for connection secret.",
                        "type": "object",
                        "properties": {
                          "annotations": {
                            "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labels": {
                            "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "type": {
                            "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                            "type": "string"
                          }
                        }
                      },
                      "name": {
                        "description": "Name is the name of the connection secret.",
                        "type": "string"
                      }
                    }
                  },
                  "writeConnectionSecretToRef": {
                    "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
                    "type": "object",
                    "required": [
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    }
                  }
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.imageId) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.imageId))",
                    "message": "spec.forProvider.imageId is a required parameter"
                  },
                  {
                    "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceType) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.instanceType))",
                    "message": "spec.forProvider.instanceType is a required parameter"
                  }
                ]
              },
              "status": {
                "description": "LaunchConfigurationStatus defines the observed state of LaunchConfiguration.",
                "type": "object",
                "properties": {
                  "atProvider": {
                    "type": "object",
                    "properties": {
                      "arn": {
                        "description": "The Amazon Resource Name of the launch configuration.",
                        "type": "string"
                      },
                      "associatePublicIpAddress": {
                        "description": "Associate a public ip address with an instance in a VPC.",
                        "type": "boolean"
                      },
                      "ebsBlockDevice": {
                        "description": "Additional EBS block devices to attach to the instance. See Block Devices below for details.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "description": "Whether the volume should be destroyed on instance termination (Default: true).",
                              "type": "boolean"
                            },
                            "deviceName": {
                              "description": "The name of the device to mount.",
                              "type": "string"
                            },
                            "encrypted": {
                              "description": "Whether the volume should be encrypted or not. Defaults to false.",
                              "type": "boolean"
                            },
                            "iops": {
                              "description": "The amount of provisioned IOPS. This must be set with a volume_type of \"io1\".",
                              "type": "number"
                            },
                            "noDevice": {
                              "description": "Whether the device in the block device mapping of the AMI is suppressed.",
                              "type": "boolean"
                            },
                            "snapshotId": {
                              "description": "The Snapshot ID to mount.",
                              "type": "string"
                            },
                            "throughput": {
                              "description": "The throughput (MiBps) to provision for a gp3 volume.",
                              "type": "number"
                            },
                            "volumeSize": {
                              "description": "The size of the volume in gigabytes.",
                              "type": "number"
                            },
                            "volumeType": {
                              "description": "The type of volume. Can be standard, gp2, gp3, st1, sc1 or io1.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "ebsOptimized": {
                        "description": "If true, the launched EC2 instance will be EBS-optimized.",
                        "type": "boolean"
                      },
                      "enableMonitoring": {
                        "description": "Enables/disables detailed monitoring. This is enabled by default.",
                        "type": "boolean"
                      },
                      "ephemeralBlockDevice": {
                        "description": "Customize Ephemeral (also known as \"Instance Store\") volumes on the instance. See Block Devices below for details.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deviceName": {
                              "description": "The name of the block device to mount on the instance.",
                              "type": "string"
                            },
                            "noDevice": {
                              "description": "Whether the device in the block device mapping of the AMI is suppressed.",
                              "type": "boolean"
                            },
                            "virtualName": {
                              "description": "The Instance Store Device Name.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "iamInstanceProfile": {
                        "description": "The name attribute of the IAM instance profile to associate with launched instances.",
                        "type": "string"
                      },
                      "id": {
                        "description": "The ID of the launch configuration.",
                        "type": "string"
                      },
                      "imageId": {
                        "description": "The EC2 image ID to launch.",
                        "type": "string"
                      },
                      "instanceType": {
                        "description": "The size of instance to launch.",
                        "type": "string"
                      },
                      "keyName": {
                        "description": "The key name that should be used for the instance.",
                        "type": "string"
                      },
                      "metadataOptions": {
                        "description": "The metadata options for the instance.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "httpEndpoint": {
                              "description": "The state of the metadata service: enabled, disabled.",
                              "type": "string"
                            },
                            "httpPutResponseHopLimit": {
                              "description": "The desired HTTP PUT response hop limit for instance metadata requests.",
                              "type": "number"
                            },
                            "httpTokens": {
                              "description": "If session tokens are required: optional, required.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "placementTenancy": {
                        "description": "The tenancy of the instance. Valid values are default or dedicated, see AWS's Create Launch Configuration for more details.",
                        "type": "string"
                      },
                      "rootBlockDevice": {
                        "description": "Customize details about the root block device of the instance. See Block Devices below for details.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "deleteOnTermination": {
                              "description": "Whether the volume should be destroyed on instance termination. Defaults to true.",
                              "type": "boolean"
                            },
                            "encrypted": {
                              "description": "Whether the volume should be encrypted or not. Defaults to false.",
                              "type": "boolean"
                            },
                            "iops": {
                              "description": "The amount of provisioned IOPS. This must be set with a volume_type of io1.",
                              "type": "number"
                            },
                            "throughput": {
                              "description": "The throughput (MiBps) to provision for a gp3 volume.",
                              "type": "number"
                            },
                            "volumeSize": {
                              "description": "The size of the volume in gigabytes.",
                              "type": "number"
                            },
                            "volumeType": {
                              "description": "The type of volume. Can be standard, gp2, gp3, st1, sc1 or io1.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "securityGroups": {
                        "description": "A list of associated security group IDS.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "spotPrice": {
                        "description": "The maximum price to use for reserving spot instances.",
                        "type": "string"
                      },
                      "userData": {
                        "description": "The user data to provide when launching the instance. Do not pass gzip-compressed data via this argument; see user_data_base64 instead.",
                        "type": "string"
                      },
                      "userDataBase64": {
                        "description": "Can be used instead of user_data to pass base64-encoded binary data directly. Use this instead of user_data whenever the value is not a valid UTF-8 string. For example, gzip-encoded user data must be base64-encoded and passed via this argument to avoid corruption.",
                        "type": "string"
                      },
                      "vpcClassicLinkId": {
                        "description": "The ID of a ClassicLink-enabled VPC. Only applies to EC2-Classic instances. (eg. vpc-2730681a)",
                        "type": "string"
                      },
                      "vpcClassicLinkSecurityGroups": {
                        "description": "The IDs of one or more security groups for the specified ClassicLink-enabled VPC (eg. sg-46ae3d11).",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "type"
                    ],
                    "x-kubernetes-list-type": "map"
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        },
        "additionalPrinterColumns": [
          {
            "name": "READY",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Ready')].status"
          },
          {
            "name": "SYNCED",
            "type": "string",
            "jsonPath": ".status.conditions[?(@.type=='Synced')].status"
          },
          {
            "name": "EXTERNAL-NAME",
            "type": "string",
            "jsonPath": ".metadata.annotations.crossplane\\.io/external-name"
          },
          {
            "name": "AGE",
            "type": "date",
            "jsonPath": ".metadata.creationTimestamp"
          }
        ]
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}