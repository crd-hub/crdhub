{
  "kind": "CustomResourceDefinition",
  "apiVersion": "apiextensions.k8s.io/v1",
  "metadata": {
    "name": "gatewaypresets.gateway.catalog.appscode.com",
    "creationTimestamp": null,
    "labels": {
      "app.kubernetes.io/name": "ace",
      "kube-bind.appscode.com/exported": "true"
    }
  },
  "spec": {
    "group": "gateway.catalog.appscode.com",
    "names": {
      "plural": "gatewaypresets",
      "singular": "gatewaypreset",
      "kind": "GatewayPreset",
      "listKind": "GatewayPresetList"
    },
    "scope": "Namespaced",
    "versions": [
      {
        "name": "v1alpha1",
        "served": true,
        "storage": true,
        "schema": {
          "openAPIV3Schema": {
            "description": "GatewayPreset is the Schema for the gatewaypresets API.",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object"
              },
              "spec": {
                "description": "GatewayPresetSpec defines the desired state of GatewayPreset.",
                "type": "object",
                "properties": {
                  "parametersRef": {
                    "description": "ParametersReference identifies an API object containing controller-specific\nconfiguration resource within the cluster.",
                    "type": "object",
                    "required": [
                      "group",
                      "kind",
                      "name"
                    ],
                    "properties": {
                      "group": {
                        "description": "Group is the group of the referent.",
                        "type": "string",
                        "maxLength": 253,
                        "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                      },
                      "kind": {
                        "description": "Kind is kind of the referent.",
                        "type": "string",
                        "maxLength": 63,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                      },
                      "name": {
                        "description": "Name is the name of the referent.",
                        "type": "string",
                        "maxLength": 253,
                        "minLength": 1
                      },
                      "namespace": {
                        "description": "Namespace is the namespace of the referent.\nThis field is required when referring to a Namespace-scoped resource and\nMUST be unset when referring to a Cluster-scoped resource.",
                        "type": "string",
                        "maxLength": 63,
                        "minLength": 1,
                        "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "GatewayPresetStatus defines the observed state of GatewayPreset.",
                "type": "object",
                "properties": {
                  "conditions": {
                    "type": "array",
                    "maxItems": 8,
                    "items": {
                      "description": "Condition defines an observation of a object operational state.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A human-readable message indicating details about the transition.\nThis field may be empty.",
                          "type": "string"
                        },
                        "observedGeneration": {
                          "description": "If set, this represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "reason": {
                          "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether this field is considered a guaranteed API.\nThis field may not be empty.",
                          "type": "string"
                        },
                        "severity": {
                          "description": "Severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of the condition, one of True, False, Unknown.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary util\ncan be useful (see .node.status.util), the ability to deconflict is important.",
                          "type": "string"
                        }
                      }
                    },
                    "x-kubernetes-list-map-keys": [
                      "type"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "helmRelease": {
                    "description": "HelmRelease is the name of the helm release used to deploy this ui\nThe name format is typically \u003calias\u003e-\u003cdb-name\u003e",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "phase": {
                    "description": "Specifies the current phase of the App",
                    "type": "string",
                    "enum": [
                      "Pending",
                      "InProgress",
                      "Current",
                      "Failed"
                    ]
                  }
                }
              }
            }
          }
        },
        "subresources": {
          "status": {}
        }
      }
    ]
  },
  "status": {
    "conditions": null,
    "acceptedNames": {
      "plural": "",
      "kind": ""
    },
    "storedVersions": null
  }
}