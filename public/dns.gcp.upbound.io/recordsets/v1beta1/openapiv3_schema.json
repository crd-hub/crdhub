{
  "$schema": "http://json-schema.org/schema#",
  "description": "RecordSet is the Schema for the RecordSets API. Manages a set of DNS records within Google Cloud DNS.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string",
      "enum": [
        "dns.gcp.upbound.io/v1beta1"
      ]
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string",
      "enum": [
        "RecordSet"
      ]
    },
    "metadata": {
      "type": "object",
      "properties": {
        "annotations": {
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        }
      }
    },
    "spec": {
      "description": "RecordSetSpec defines the desired state of RecordSet",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "managedZone": {
              "description": "The name of the zone in which this record set will reside.",
              "type": "string"
            },
            "managedZoneRef": {
              "description": "Reference to a ManagedZone in dns to populate managedZone.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "managedZoneSelector": {
              "description": "Selector for a ManagedZone in dns to populate managedZone.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "name": {
              "description": "The DNS name this record set will apply to.",
              "type": "string"
            },
            "project": {
              "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
              "type": "string"
            },
            "routingPolicy": {
              "description": "The configuration for steering traffic based on query. Now you can specify either Weighted Round Robin(WRR) type or Geolocation(GEO) type. Structure is documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enableGeoFencing": {
                    "description": "Specifies whether to enable fencing for geo queries.",
                    "type": "boolean"
                  },
                  "geo": {
                    "description": "The configuration for Geolocation based routing policy. Structure is document below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "healthCheckedTargets": {
                          "description": "The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set. Structure is document below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "internalLoadBalancers": {
                                "description": "The list of internal load balancers to health check. Structure is document below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ipAddress": {
                                      "description": "The frontend IP address of the load balancer.",
                                      "type": "string"
                                    },
                                    "ipProtocol": {
                                      "description": "The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: [\"tcp\", \"udp\"]",
                                      "type": "string"
                                    },
                                    "loadBalancerType": {
                                      "description": "The type of load balancer. This value is case-sensitive. Possible values: [\"regionalL4ilb\", \"regionalL7ilb\"]",
                                      "type": "string"
                                    },
                                    "networkUrl": {
                                      "description": "The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.",
                                      "type": "string"
                                    },
                                    "port": {
                                      "description": "The configured port of the load balancer.",
                                      "type": "string"
                                    },
                                    "project": {
                                      "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The region of the load balancer. Only needed for regional load balancers.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "location": {
                          "description": "The location name defined in Google Cloud.",
                          "type": "string"
                        },
                        "rrdatas": {
                          "description": "Same as rrdatas above.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "primaryBackup": {
                    "description": "The configuration for a primary-backup policy with global to regional failover. Queries are responded to with the global primary targets, but if none of the primary targets are healthy, then we fallback to a regional failover policy. Structure is document below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "backupGeo": {
                          "description": "The backup geo targets, which provide a regional failover policy for the otherwise global primary targets. Structure is document above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "healthCheckedTargets": {
                                "description": "The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set. Structure is document below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "internalLoadBalancers": {
                                      "description": "The list of internal load balancers to health check. Structure is document below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "ipAddress": {
                                            "description": "The frontend IP address of the load balancer.",
                                            "type": "string"
                                          },
                                          "ipProtocol": {
                                            "description": "The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: [\"tcp\", \"udp\"]",
                                            "type": "string"
                                          },
                                          "loadBalancerType": {
                                            "description": "The type of load balancer. This value is case-sensitive. Possible values: [\"regionalL4ilb\", \"regionalL7ilb\"]",
                                            "type": "string"
                                          },
                                          "networkUrl": {
                                            "description": "The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.",
                                            "type": "string"
                                          },
                                          "port": {
                                            "description": "The configured port of the load balancer.",
                                            "type": "string"
                                          },
                                          "project": {
                                            "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                                            "type": "string"
                                          },
                                          "region": {
                                            "description": "The region of the load balancer. Only needed for regional load balancers.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "location": {
                                "description": "The location name defined in Google Cloud.",
                                "type": "string"
                              },
                              "rrdatas": {
                                "description": "Same as rrdatas above.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "enableGeoFencingForBackups": {
                          "description": "Specifies whether to enable fencing for backup geo queries.",
                          "type": "boolean"
                        },
                        "primary": {
                          "description": "The list of global primary targets to be health checked. Structure is document below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "internalLoadBalancers": {
                                "description": "The list of internal load balancers to health check. Structure is document below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ipAddress": {
                                      "description": "The frontend IP address of the load balancer.",
                                      "type": "string"
                                    },
                                    "ipAddressRef": {
                                      "description": "Reference to a ForwardingRule in compute to populate ipAddress.",
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referenced object.",
                                          "type": "string"
                                        },
                                        "policy": {
                                          "description": "Policies for referencing.",
                                          "type": "object",
                                          "properties": {
                                            "resolution": {
                                              "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                              "type": "string",
                                              "default": "Required",
                                              "enum": [
                                                "Required",
                                                "Optional"
                                              ]
                                            },
                                            "resolve": {
                                              "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                              "type": "string",
                                              "enum": [
                                                "Always",
                                                "IfNotPresent"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "ipAddressSelector": {
                                      "description": "Selector for a ForwardingRule in compute to populate ipAddress.",
                                      "type": "object",
                                      "properties": {
                                        "matchControllerRef": {
                                          "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                          "type": "boolean"
                                        },
                                        "matchLabels": {
                                          "description": "MatchLabels ensures an object with matching labels is selected.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "policy": {
                                          "description": "Policies for selection.",
                                          "type": "object",
                                          "properties": {
                                            "resolution": {
                                              "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                              "type": "string",
                                              "default": "Required",
                                              "enum": [
                                                "Required",
                                                "Optional"
                                              ]
                                            },
                                            "resolve": {
                                              "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                              "type": "string",
                                              "enum": [
                                                "Always",
                                                "IfNotPresent"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "ipProtocol": {
                                      "description": "The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: [\"tcp\", \"udp\"]",
                                      "type": "string"
                                    },
                                    "loadBalancerType": {
                                      "description": "The type of load balancer. This value is case-sensitive. Possible values: [\"regionalL4ilb\", \"regionalL7ilb\"]",
                                      "type": "string"
                                    },
                                    "networkUrl": {
                                      "description": "The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.",
                                      "type": "string"
                                    },
                                    "networkUrlRef": {
                                      "description": "Reference to a Network in compute to populate networkUrl.",
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referenced object.",
                                          "type": "string"
                                        },
                                        "policy": {
                                          "description": "Policies for referencing.",
                                          "type": "object",
                                          "properties": {
                                            "resolution": {
                                              "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                              "type": "string",
                                              "default": "Required",
                                              "enum": [
                                                "Required",
                                                "Optional"
                                              ]
                                            },
                                            "resolve": {
                                              "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                              "type": "string",
                                              "enum": [
                                                "Always",
                                                "IfNotPresent"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "networkUrlSelector": {
                                      "description": "Selector for a Network in compute to populate networkUrl.",
                                      "type": "object",
                                      "properties": {
                                        "matchControllerRef": {
                                          "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                          "type": "boolean"
                                        },
                                        "matchLabels": {
                                          "description": "MatchLabels ensures an object with matching labels is selected.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "policy": {
                                          "description": "Policies for selection.",
                                          "type": "object",
                                          "properties": {
                                            "resolution": {
                                              "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                              "type": "string",
                                              "default": "Required",
                                              "enum": [
                                                "Required",
                                                "Optional"
                                              ]
                                            },
                                            "resolve": {
                                              "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                              "type": "string",
                                              "enum": [
                                                "Always",
                                                "IfNotPresent"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "port": {
                                      "description": "The configured port of the load balancer.",
                                      "type": "string"
                                    },
                                    "project": {
                                      "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                                      "type": "string"
                                    },
                                    "projectRef": {
                                      "description": "Reference to a ForwardingRule in compute to populate project.",
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referenced object.",
                                          "type": "string"
                                        },
                                        "policy": {
                                          "description": "Policies for referencing.",
                                          "type": "object",
                                          "properties": {
                                            "resolution": {
                                              "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                              "type": "string",
                                              "default": "Required",
                                              "enum": [
                                                "Required",
                                                "Optional"
                                              ]
                                            },
                                            "resolve": {
                                              "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                              "type": "string",
                                              "enum": [
                                                "Always",
                                                "IfNotPresent"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "projectSelector": {
                                      "description": "Selector for a ForwardingRule in compute to populate project.",
                                      "type": "object",
                                      "properties": {
                                        "matchControllerRef": {
                                          "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                          "type": "boolean"
                                        },
                                        "matchLabels": {
                                          "description": "MatchLabels ensures an object with matching labels is selected.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "policy": {
                                          "description": "Policies for selection.",
                                          "type": "object",
                                          "properties": {
                                            "resolution": {
                                              "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                              "type": "string",
                                              "default": "Required",
                                              "enum": [
                                                "Required",
                                                "Optional"
                                              ]
                                            },
                                            "resolve": {
                                              "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                              "type": "string",
                                              "enum": [
                                                "Always",
                                                "IfNotPresent"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "region": {
                                      "description": "The region of the load balancer. Only needed for regional load balancers.",
                                      "type": "string"
                                    },
                                    "regionRef": {
                                      "description": "Reference to a ForwardingRule in compute to populate region.",
                                      "type": "object",
                                      "required": [
                                        "name"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "Name of the referenced object.",
                                          "type": "string"
                                        },
                                        "policy": {
                                          "description": "Policies for referencing.",
                                          "type": "object",
                                          "properties": {
                                            "resolution": {
                                              "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                              "type": "string",
                                              "default": "Required",
                                              "enum": [
                                                "Required",
                                                "Optional"
                                              ]
                                            },
                                            "resolve": {
                                              "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                              "type": "string",
                                              "enum": [
                                                "Always",
                                                "IfNotPresent"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "regionSelector": {
                                      "description": "Selector for a ForwardingRule in compute to populate region.",
                                      "type": "object",
                                      "properties": {
                                        "matchControllerRef": {
                                          "description": "MatchControllerRef ensures an object with the same controller reference as the selecting object is selected.",
                                          "type": "boolean"
                                        },
                                        "matchLabels": {
                                          "description": "MatchLabels ensures an object with matching labels is selected.",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string"
                                          }
                                        },
                                        "policy": {
                                          "description": "Policies for selection.",
                                          "type": "object",
                                          "properties": {
                                            "resolution": {
                                              "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                                              "type": "string",
                                              "default": "Required",
                                              "enum": [
                                                "Required",
                                                "Optional"
                                              ]
                                            },
                                            "resolve": {
                                              "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                                              "type": "string",
                                              "enum": [
                                                "Always",
                                                "IfNotPresent"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trickleRatio": {
                          "description": "Specifies the percentage of traffic to send to the backup targets even when the primary targets are healthy.",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "wrr": {
                    "description": "The configuration for Weighted Round Robin based routing policy. Structure is document below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "healthCheckedTargets": {
                          "description": "The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set. Structure is document below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "internalLoadBalancers": {
                                "description": "The list of internal load balancers to health check. Structure is document below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ipAddress": {
                                      "description": "The frontend IP address of the load balancer.",
                                      "type": "string"
                                    },
                                    "ipProtocol": {
                                      "description": "The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: [\"tcp\", \"udp\"]",
                                      "type": "string"
                                    },
                                    "loadBalancerType": {
                                      "description": "The type of load balancer. This value is case-sensitive. Possible values: [\"regionalL4ilb\", \"regionalL7ilb\"]",
                                      "type": "string"
                                    },
                                    "networkUrl": {
                                      "description": "The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.",
                                      "type": "string"
                                    },
                                    "port": {
                                      "description": "The configured port of the load balancer.",
                                      "type": "string"
                                    },
                                    "project": {
                                      "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The region of the load balancer. Only needed for regional load balancers.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "rrdatas": {
                          "description": "Same as rrdatas above.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "weight": {
                          "description": "The ratio of traffic routed to the target.",
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            },
            "rrdatas": {
              "description": "The string data for the records in this record set whose meaning depends on the DNS type. For TXT record, if the string data contains spaces, add surrounding \\\" if you don't want your string to get split on spaces.g. \"first255characters\\\" \\\"morecharacters\").",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ttl": {
              "description": "The time-to-live of this record set (seconds).",
              "type": "number"
            },
            "type": {
              "description": "The DNS record set type.",
              "type": "string"
            }
          }
        },
        "initProvider": {
          "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "type": "object",
          "properties": {
            "name": {
              "description": "The DNS name this record set will apply to.",
              "type": "string"
            },
            "project": {
              "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
              "type": "string"
            },
            "routingPolicy": {
              "description": "The configuration for steering traffic based on query. Now you can specify either Weighted Round Robin(WRR) type or Geolocation(GEO) type. Structure is documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enableGeoFencing": {
                    "description": "Specifies whether to enable fencing for geo queries.",
                    "type": "boolean"
                  },
                  "geo": {
                    "description": "The configuration for Geolocation based routing policy. Structure is document below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "healthCheckedTargets": {
                          "description": "The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set. Structure is document below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "internalLoadBalancers": {
                                "description": "The list of internal load balancers to health check. Structure is document below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ipAddress": {
                                      "description": "The frontend IP address of the load balancer.",
                                      "type": "string"
                                    },
                                    "ipProtocol": {
                                      "description": "The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: [\"tcp\", \"udp\"]",
                                      "type": "string"
                                    },
                                    "loadBalancerType": {
                                      "description": "The type of load balancer. This value is case-sensitive. Possible values: [\"regionalL4ilb\", \"regionalL7ilb\"]",
                                      "type": "string"
                                    },
                                    "networkUrl": {
                                      "description": "The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.",
                                      "type": "string"
                                    },
                                    "port": {
                                      "description": "The configured port of the load balancer.",
                                      "type": "string"
                                    },
                                    "project": {
                                      "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The region of the load balancer. Only needed for regional load balancers.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "location": {
                          "description": "The location name defined in Google Cloud.",
                          "type": "string"
                        },
                        "rrdatas": {
                          "description": "Same as rrdatas above.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "primaryBackup": {
                    "description": "The configuration for a primary-backup policy with global to regional failover. Queries are responded to with the global primary targets, but if none of the primary targets are healthy, then we fallback to a regional failover policy. Structure is document below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "backupGeo": {
                          "description": "The backup geo targets, which provide a regional failover policy for the otherwise global primary targets. Structure is document above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "healthCheckedTargets": {
                                "description": "The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set. Structure is document below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "internalLoadBalancers": {
                                      "description": "The list of internal load balancers to health check. Structure is document below.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "ipAddress": {
                                            "description": "The frontend IP address of the load balancer.",
                                            "type": "string"
                                          },
                                          "ipProtocol": {
                                            "description": "The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: [\"tcp\", \"udp\"]",
                                            "type": "string"
                                          },
                                          "loadBalancerType": {
                                            "description": "The type of load balancer. This value is case-sensitive. Possible values: [\"regionalL4ilb\", \"regionalL7ilb\"]",
                                            "type": "string"
                                          },
                                          "networkUrl": {
                                            "description": "The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.",
                                            "type": "string"
                                          },
                                          "port": {
                                            "description": "The configured port of the load balancer.",
                                            "type": "string"
                                          },
                                          "project": {
                                            "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                                            "type": "string"
                                          },
                                          "region": {
                                            "description": "The region of the load balancer. Only needed for regional load balancers.",
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "location": {
                                "description": "The location name defined in Google Cloud.",
                                "type": "string"
                              },
                              "rrdatas": {
                                "description": "Same as rrdatas above.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "enableGeoFencingForBackups": {
                          "description": "Specifies whether to enable fencing for backup geo queries.",
                          "type": "boolean"
                        },
                        "primary": {
                          "description": "The list of global primary targets to be health checked. Structure is document below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "internalLoadBalancers": {
                                "description": "The list of internal load balancers to health check. Structure is document below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ipProtocol": {
                                      "description": "The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: [\"tcp\", \"udp\"]",
                                      "type": "string"
                                    },
                                    "loadBalancerType": {
                                      "description": "The type of load balancer. This value is case-sensitive. Possible values: [\"regionalL4ilb\", \"regionalL7ilb\"]",
                                      "type": "string"
                                    },
                                    "port": {
                                      "description": "The configured port of the load balancer.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "trickleRatio": {
                          "description": "Specifies the percentage of traffic to send to the backup targets even when the primary targets are healthy.",
                          "type": "number"
                        }
                      }
                    }
                  },
                  "wrr": {
                    "description": "The configuration for Weighted Round Robin based routing policy. Structure is document below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "healthCheckedTargets": {
                          "description": "The list of targets to be health checked. Note that if DNSSEC is enabled for this zone, only one of rrdatas or health_checked_targets can be set. Structure is document below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "internalLoadBalancers": {
                                "description": "The list of internal load balancers to health check. Structure is document below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ipAddress": {
                                      "description": "The frontend IP address of the load balancer.",
                                      "type": "string"
                                    },
                                    "ipProtocol": {
                                      "description": "The configured IP protocol of the load balancer. This value is case-sensitive. Possible values: [\"tcp\", \"udp\"]",
                                      "type": "string"
                                    },
                                    "loadBalancerType": {
                                      "description": "The type of load balancer. This value is case-sensitive. Possible values: [\"regionalL4ilb\", \"regionalL7ilb\"]",
                                      "type": "string"
                                    },
                                    "networkUrl": {
                                      "description": "The fully qualified url of the network in which the load balancer belongs. This should be formatted like projects/{project}/global/networks/{network} or https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}.",
                                      "type": "string"
                                    },
                                    "port": {
                                      "description": "The configured port of the load balancer.",
                                      "type": "string"
                                    },
                                    "project": {
                                      "description": "The ID of the project in which the resource belongs. If it is not provided, the provider project is used.",
                                      "type": "string"
                                    },
                                    "region": {
                                      "description": "The region of the load balancer. Only needed for regional load balancers.",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "rrdatas": {
                          "description": "Same as rrdatas above.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "weight": {
                          "description": "The ratio of traffic routed to the target.",
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            },
            "rrdatas": {
              "description": "The string data for the records in this record set whose meaning depends on the DNS type. For TXT record, if the string data contains spaces, add surrounding \\\" if you don't want your string to get split on spaces.g. \"first255characters\\\" \\\"morecharacters\").",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ttl": {
              "description": "The time-to-live of this record set (seconds).",
              "type": "number"
            },
            "type": {
              "description": "The DNS record set type.",
              "type": "string"
            }
          }
        },
        "managementPolicies": {
          "description": "THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored unless the relevant Crossplane feature flag is enabled, and may be changed or removed without notice. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              }
            }
          }
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  }
                }
              }
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              }
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          }
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          }
        }
      },
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.type))",
          "message": "spec.forProvider.type is a required parameter"
        }
      ]
    }
  }
}